import logging
import uvicorn
from fastapi import FastAPI
from socket_manager import sio
from socketio import ASGIApp

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è FastAPI –∏ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è WebSocket
app = FastAPI()
socket_app = ASGIApp(sio, other_asgi_app=app)

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    level=logging.INFO,
    format="%(asctime)s - %(levelname)s - %(message)s",
)
logger = logging.getLogger(__name__)

# –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞
logger.info("üöÄ –°–µ—Ä–≤–µ—Ä FastAPI + Socket.IO –∑–∞–ø—É—â–µ–Ω...")


# –ü—Ä–æ—Å—Ç–∞—è REST —Ç–æ—á–∫–∞ –≤—Ö–æ–¥–∞
@app.get("/")
def read_root():
    logger.info("üì• –ó–∞–ø—Ä–æ—Å –Ω–∞ –∫–æ—Ä–Ω–µ–≤–æ–π —ç–Ω–¥–ø–æ–∏–Ω—Ç `/`")
    return {"message": "Hello from FastAPI + Socket.IO"}


# –§—É–Ω–∫—Ü–∏—è –∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞
def start():
    try:
        logger.info("üöÄ –ó–∞–ø—É—Å–∫–∞–µ–º —Å–µ—Ä–≤–µ—Ä –Ω–∞ 0.0.0.0:5041...")
        uvicorn.run(socket_app, host="0.0.0.0", port=5041)
    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞: {e}")


if __name__ == "__main__":
    start()
