В этом случае для адресации портов ВВ используются полные адресные сигналы: READ – чтение, WRITE – запись. В операционных системах ЭВМ имеется набор подпрограмм (драйверов ВВ), управляющих операциями ВВ стандартных внешних устройств. Благодаря им пользователь может не знать многих особенностей ВУ и интерфейсов ВВ, а применять четкие программные протоколы. 2.1.2 Система прерываний При работе микропроцессорной системы часто возникают ситуации (рис. 2.6), когда требуется прервать выполнение текущей программы и перейти к подпрограмме, обеспечивающей необходимую реакцию системы на создавшиеся обст оятельства. Такие ситуации называ ются прерываниями или исключениями в зависимости от причин, вызывающих их возникновение. Специальные виды таких прерываний реализуются при отладке программ, для чего в состав процессора введены необходимые функциональные бл оки, работа которых контролируется с помощью регистров отладки DR7-0. Классификация прерываний и исключений Особенно большое значение для современных процессоров и систем, реализуемых на их основе, имеют тестирование и самотестировани е.

При обращении к памяти микропроцессор адресует ячейку с меньшим адресом, поэтому при размещении «Little -Endian» команда или операнд вы бираются начиная с младшего байта, а при размещении «Big-Endian» – со старшего байта. По этой причине непосредственный перенос программного обеспечения между системами, использующими микропроцессоры с разными вариантами размещения байтов, оказывается практически невозможным. Чтобы решить эту проблему, некоторые современные микро процессоры, например семейства PowerPC, реализу ют оба возможных варианта разме щения и адресации байтов – «Little-Endian» или «Big -Endian».

2.1 Подсистемы микропроцессорных систем Микропроцессор способен выполнять преобразование и нформации, но для хранения и обмена с внешней средой необходимы дополнительные подсистемы. Особое значение имеют системы ввода -вывода и прерываний. Система ввода -вывода реализует обмен между ядром ЭВМ и внешними устройствами. Для реакции на внешние воздейс твие или события в программе необходима система прерываний. 2.1.1 Система ввода-вывода Вводом/выводом (ВВ) называется передача данных между ядром ЭВМ, включающим в себя микропроцессор и основную память, и внешними устройствами (ВУ). Это единственное сред ство взаимодействия ЭВМ с «внешним миром» , и архитектура ВВ (режимы работы, форматы команд, особенности прерываний, скорость обмена и др.) непосредственно влияет на эффективность всей системы. За время эволюции ЭВМ подсистема ВВ претерпела наибольшие измен ения благодаря расширению сферы применения ЭВМ и появлению новых внешних устройств. Особенно важную роль средства ВВ играют в управляющих ЭВМ. Разработка аппаратных средств и программного обеспечения ВВ является наиболее сложным этапом проектирования новых систем на базе ЭВМ, а возможности ВВ серийных машин представляют собой один из важных параметров, определяющих выбор машины для конкретного применения. Внешние устройства, выполняющие операции ввода-вывода, можно разделить на три группы:  устройства, работ ающие с пользователем. Используются для связи пользователя с компьютером. Сюда относятся принтеры, дисплеи, клавиатура, манипуляторы (мышь, трекбол, джойстики) и т.п.;  устройства, работающие с компьютером. Используются для связи с электронным оборудованием . К ним можно отнести дисковые устройства, датчики, контроллеры, преобразователи;  коммуникации. Используются для связи с удаленными устройствами. К ним относятся модемы и адаптеры цифровых линий. По другому признаку устройства ввода -вывода можно разделить на блочные и символьные. Блочными являются устройства, хранящие информацию в виде блоков фиксированного размера, причем у каждого блока есть адрес и каждый

Одноплатные компьютеры «Тион-Про 270E2» (а), «Тион-Про v.2» (б) и «Тион 270» (в) Прототипные платы Эти средства могут использоваться для следующих целей:  изучение функционирования определенных моделей микропроцессо ров и микроконтроллеров, получение навыков их практического применения;  тестирование и отладка программного обеспечения систем на реальных образцах микропроцессоров (микроконтроллеров);  комплексная отладка макета системы, используемого затем в качестве образца для реализации прототипной системы;  сборка и отладка прототипной или целевой системы, в состав которой входят платы развития в качестве базовых модулей. Практически все типы плат развития содержат в с воем составе порты для подключения управляющего персональн ого компьютера. Чаще всего для этой цели используется последовательный обмен по стандарту RS -232. Ряд типов отладочных и целевых плат имеют также отдельное поле для макетирования пользователем дополнительных устройств с помощью проводного монтажа. Ввиду бо льшого разнообразия областей и спос обов применения номенклатура вы пускаемых плат развития очень широка и четкие границы между их типами отсутствуют. Во многих случаях отладочные платы могут использоваться в качестве целевых, а одно платные компьютеры часто служат средствами отладки прототипных систем. В данном разделе приводится краткое описание отдельных тип ичных представителей этого клас са средств проектирования/отладки. Отладочные платы серии M68HC05EVM (рис. 2.20), производимые фирмой «Motorola», служат для проектирования/отладки систем на базе семейства М68НС05.

Выбор необходимог о варианта задается программно.

22.07.2015 Формат печатного листа 445Х300/8 Гарнитура Times New Roman Авт. 14,5 Заказ 3073 Бесплатно 234567 434 Рецензенты: доктор технических наук профессор А.Г. Басыров; кандидат технических наук доцент В.А. Гончаренко Микропроцессорные системы / К.А. 434 Учебное пособие содерж ит материал необходимый для изучения дисциплины « Микропроцессорные системы». В нем отражены вопросы , связанные с организацией микропроцессора, микропроцессорных систем, этапами их проектирования, разработки, программирования, отладки и производства . Рассмотрены вопросы, связанные с функционированием блоков микропроцессора, особенностями взаимодействия компонентов микропроцессорных систем.

Эти устройства необходимы на заключительном этапе разработки систем, когда требуется записать отлаженную программу в ПЗУ, ко торое входит в состав микроконтроллера или реализуется в виде отдельного модуля. Логические анализаторы Логические анализаторы (ЛА) являются универсальными приборами для анализа функционирования цифровых систем. Они позволяют контролировать логическое состояние нескольких десятков точек системы в течение заданного промежутка времени и выдать информацию о состоянии в визуальном (на экране монитора) или печатном виде. Форма представления может быть символьная или графическая (временные диаграммы сигналов). Входные каналы ЛА подключаются к точкам контроля с помощью зондов -клипсов или разъемов. Число каналов в современных ЛА обычно сост авляет от 16 до 150. Запуск ана лизатора производится автоматически при поступлен ии на определенные каналы задан ного кода (адреса, данн ых или комбинации управляющих сигналов) или последовательности кодов. После запуска в память ЛА записывается п оследовательность значений логи ческих сигналов в точках контроля. Объем этой памяти определяет число контролируемых точек на временной оси (глубину контроля), которое для большинства ЛА составляет от 2 К до 32 К. На экран выводятся несколько десятков точек для каждого канала с возможностью просмотра всей записанной в памяти последовательности состояний. Максимальная частота дискретизации временных и нтервалов для различных моделей ЛА имеет значение от 20 до 200 МГц. ЛА реализуются в виде автономных измерительных приборов или плат расширения, подключаемых к базовому (host) персональному компь ютеру. Эти приборы часто включа ют ряд дополнительных устройст в, например, программируемый генератор тестовых пос ледовательностей. ЛА, реализованные в виде автономных приборов, выпускаются рядом ведущих производителей электронно -измерительной аппаратуры: Tektronix, Hewlett -

ШВЕЦОВ34 СЛОВО ЮБИЛЯРАМComponents, GMAT и CesiumJS, на основе которых построено множество программных решений, в том числе отечественных.NASA стало первым в мире федеральным агентством, которое регулярно публикует свое программное обеспечение и делится наработками с общественностью. По состоянию на февраль 2020 года всего в каталоге было 976 доступных для скачивания продуктов. В опубликованном программном обеспечении есть различные решения для обработки специфических наборов данных, организации систем связи и наблюдения, а также готовая платформа виртуальной реальности для создания обучающих сред.В практике применения КС военного назначения многократное усложнение моделей целевой обстановки, заключающееся в создании глобальных автоматизированных систем военного назначения с разновариантными информационно-управляющими контурами, принятии на вооружение новейших специализированных космических комплексов и средств, а также в связи с необходимостью их согласованного применения в составе стратегических организационно-технических систем требуется развитие соответствующей моделирующей базы проведения исследований.Результаты научных исследований работ и опыт выполнения ряда оперативных заданий органами военного управления в 2015—2020 годах показали, что в настоящее время отсутствует межведомственная унификация показателей эффективности применения космических систем (средств), а также методик их определения5. Указанное обстоятельство обусловлено следующими факторами6:• интенсивное развитие космических средств и систем (сверхпроизводительность, мультизадачность, межсистемные связи), новые способы их комплексного применения;• неустоявшаяся классификация космических систем и средств, их характеристик и показателей эффективности применения;• использование различных «наборов» показателей, применяемых для оценки эффективности отечественных и зарубежных космических систем;• зависимость показателей от состава исходных данных (по отечественной и зарубежной орбитальным группировкам), допущений и ограничений;• использование не всегда согласованного специального математического обеспечения (алгоритмов, моделей) для расчета показателей эффективности.По результатам анализа нормативной и методической базы в области применения КС, в том числе и Положения о порядке создания, производства и эксплуатации (применения) ракетных и космических комплексов (Положение РК-98 (РК-11-КТ)), стала очевидной необходимость разработки и внедрения единых подходов математического моделирования и оценки эффективности КС. Указанное обстоятельство отражено в решениях профильных секций и рабочих групп научно-технического совета Военно-промышленной комиссии Российской Федерации.Общие направления решения проблемных вопросов моделирования КС заключаются в унификации математического обеспечения, повышении оперативности проектирования и разработки программных средств, а также в разработке единого инструментария моделирования КС7.Унификация с п е ц и ал ь н о г о м а т е матического и программного обеспечения (СМПО) в области моделирования КС предполагает проведение работ по классификации, симплификации, типизации и оптимизации компонентов данных видов обеспечения, направ-

Центральные про цессоры AMD FX обеспечивают гарантированную производительность, управление и надежность с использованием до 8 ядер для выдающихся показателей и тактовой частоты до 5 ГГц . Центральный процессор AMD Athlon обеспечивает высокочастотную производительность до 4 ядер с возможностью повышения тактовой частоты для достижения максимальной скорости. Кроме того, компания AMD занимается разработкой гибридных процессоров. Гибридные процессоры, разработанные AMD, совмещают в себе графику Radeon и процессорные технологии на одной микросхеме: AMD А-серии, AMD Athlon, AMD Sempron.

47 организации циклов используется команда LOOP и регистр ЕСХ. Команда LOOP уменьшает содержимое ЕСХ на 1 (декремент) и проверяет по лученное значение. Если содержимое ЕСХ = 0, то выполняется переход к команде, адрес которой определяется с помощью относительной адресации (смещение задано в команде LOOP). Если ЕСХ = 0, то выполняется следующая команда программы. Команда LOOP обычно стави тся в конце цикла, обеспечивая его выполнение n раз, где n задается начальным значением ЕСХ. Команды LOOPZ, LOOPNZ аналогичны команде LOOP, но используют дополни тельные условия для выхода из цикла. Команда LOOPZ обеспечивает выход из цикла до выполнения з аданного числа циклов n при получении ненулевого результата, т.е. при уста новке признака Z = 0. Если в каждом цикле реализуется нулевой результат, то выполняется n циклов, как в команде LOOP. Команда LOOPNZ прекращает выполнение циклов при пол учении нулев ого результата, т. Команды прерываний INT обеспечивают переход к одной из программ обслуживания исключений и прерываний (обработчику прерываний 0). При этом текущее содержимое PC и регистра состояния заносится в стек. Каждая из программ обработки соответствует оп ределенному типу исключения или прерывания. Например, в процессорах Pentium выбор программы обработки определяется 8 -разрядным операндом, задаваемым во втором байте команды INT. Вызов соответствующей программы обслуживания пр оизводится с помощью таблицы, в которой содержатся векторы исключений (прерываний) – адреса первых ко манд программ обслуживания. Каждый вектор задает необходимое содержимое PC, загрузка которого обеспечивает переход к выполнению первой команды программы об служивания. Команда IRET обеспечивает возврат из подпрограммы обслуживания прерывания путем извлечения из стека и восстановления содержимо го программного счетчика и регистра состояния, соответствующих прерванной процедуре. Команды управления признаками обе спечивают запись-чтение содержимого регистра состояния, в котором хранятся признаки, а также изменение значений отдельных признаков. Например, в процессорах Pentium реализуются команды LAHF и SAHF, которые выполняют загрузку младшего байта, где содержатся признаки, из регистра состояния EFLAG в млад ший байт регистра ЕАХ и заполнение младшего байта EFLAGS из регистра ЕАХ.

63 процессора происходит только при необходимости использования шины. После этого устройство DMA выполняет передачу слова и возвращает управление процессору. Однако это не является прерыванием: процессор не сохраняет контекст с переходом к выполнению другого задания. Он просто делает паузу на время одного цикла шины. Точки прерывания DMA В блочном режиме работы контроллер DMA занимает шину на серию пересылок (пакет). Этот режим более эффективен, однако при переносе большого блока центральный процессор и д ругие устройства могут быть заблокированы на существенный промежуток времени. Таблица 2.1 Скорость передачи данных периферийными устройствами Тип устройства Направление передачи данных Скорость передачи данных (Кбайт/с) Клавиатура Мышь Голосовой ввод Сканер Голосовой вывод Строчный принтер Лазерный принтер Графический дисплей (ЦП (r) буфер кадра) Оптический диск Магнитная лента Магнитный диск Ввод Ввод Ввод Ввод Вывод Вывод Вывод Вывод Вывод ЗУ ЗУ ЗУ 0.01 0.02 0.02 200.0 0.06 1.00 100.00 30000.00 200.0 500.00 2000.00 2000.00 При большом количестве устройств ввода -вывода от подсистемы ввода вывода требуется спланировать в реальном масштабе времени (в котором работают внешние устройства , см. 2.1) запуск и приостановку большего

Данный вариант размещения реализуется в микропроцессорах, выпускаемых компаниями «Intel», AMD, «Hitachi» и рядом других производителей. При размещении «Big -Endian» старший байт располагается в ячейке с меньшим адресом .

Ассемблеры с широким набором функциональных возможностей, включая макросы (макроассемблеры), поставляются рядом разработчиков, в том числе фирмой «Motorola».

69  заносит текущее значение регистров CS и IP в стек;  заносит текущее значение регистра FLAGS в стек;  устанавливает значение признака IF = 0 в регистре EFLAGS (запрещение прерываний);  устанавливает значения признаков TF = RC = АС = 0 в регистре EFLAGS;  загружает в регистры CS, IP новое содержимое, заданное в выбранном векторе таблицы прерываний. В реальном режиме процессор не заносит в стек к од ошибки и использует только млад шие 16 разрядов регистра EIP (регистр IP) и EFLAGS (рег истр FLAGS). Возврат из подпрог раммы обслуживания прерывания выполняется с помощью команды IRET, к оторая восста навливает сохраненное в стеке содержимое регистров FLAGS, CS и IP, обеспечивая воз вращение к выполнению прерванной программы. Обработка прерываний в защищенном режиме. Вызов подпрограмм обслуживания прерываний осуществляется через дескрипторну ю таблицу прерываний IDT (Interrupt Descriptor Table), которая может располагаться в любом месте адресного пространства. Базовый линейный адрес этой таблицы хранится в регистре IDTR. Загрузка содержимого регистра IDTR осуществляется с помощью команды LIDT, а его сохранение в памяти – с помощью команды SIDT. Ко манда LIDT является привилегиро ванной и может выполняться только программой, имеющей высший уровень привилегий CPL = 0. Команда SIDT может быть выполнена при любом уровне привилегий программы. Элементами таблицы IDT являются системные дескрипторы прерываний, имеющие размер по 8 байт. Поэтому максимальный размер таблицы IDT составляет 2 Кбайт при использовании всех 256 видов прерываний (исключений). В таблице могут содержаться три вида системных дескрипторов: шлюз прерывания, шлюз ловушки и шлюз задачи. Форматы содержимого шлюзов прерывания и ловушки содержат селектор вызываемого при обслуживании с егмента, который поступает в ре гистр CS, и относительный адрес первой команды подпрограммы обслуживания, кото рый загружается в регистр EIP. В дескрипторе также содержит ся бит Р, указывающий на присут ствие (при значении Р = 1) в памяти сегмента, в котором находится соответствующая под программа обслуживания, и двухбитовое поле gDPL, определяющее уровень привилегий шлюза. Бит D в байте доступа определяет режим работы процессора при обслуживании прерываний: если значение D = 0, то процессор функци онирует как 16 разрядный процессор 80286, если D = 1, то обеспечивается 32-разрядный режим функционирования, характерный для процессоров 386, 486, Pentium, Р6.

45 бита n задается либо содержимым указанного в команде регистра, либо непосредственным операндом. Команды данной группы реализу ют разные варианты изменения тестируемого бита. Команда BT сохраняет значение этого бита неизменным. Команда BTS после тестирова ния устанавливает значение bn = 1, а команда ВТС-значение bn = 0. Команда ВТС инвер тирует значение бита bn после его тестирования. Операции управления программой. Для управлен ия программой используется большое количество команд, среди которых можно выделить:  команды безусловной передачи управления;  команды условных переходов;  команды организации программных циклов;  команды прерывания;  команды изменения признаков. Безусловная передача управления производится командой JMP, которая загружает в программный счетчик PC новое содержимое, явл яющееся адресом следующей выпол няемой команды. Этот адрес либо непосредственно указывается в команде JMP (прямая адресация), либо вычисляется как сумма текущего содержимого PC и заданного в команде смещения, которое является числом со знаком (относительная адресация). Так как PC содержит адрес очередной команды программы, то последний способ задает адрес перехода, смещенный относительно очередно го адреса на заданное число бай тов. При положительном смещении производится переход к последующим командам программы, при отрицательном смещении – к предыдущим. Вызов подпрограммы также производится путем безусловн ой передачи управления с помощью команды CALL (или JSR).

Термин «микроконтроллер» (МК) вытеснил из уп отребления ранее использовавшийся термин «однокристальная микро -ЭВМ». Первый патент на однокристальную микро-ЭВМ был выдан в 1971 году М. Именно они предложи ли на одном кристалле разместить не только микропроцессор, но и память, устройства ввода -вывода.

78 одной стороны, достаточна для заряда конденсаторов до уровня напря жения, определяемого разрядами регистра последовательного приближения, а с другой стороны, не слишком большой, чтобы погрешность утечки не была значительной. В некоторых моделях источник питани я ан алоговой части модуля АЦП выполнен на основе импульсного преобразователя; для его работы требуется тактирование, частота тактирования определена с достаточно узким допуском ±10 %. Источником синхронизации модуля АЦП может служить встроенный RC генератор или импульсная последовательность тактирования межмодульных магистралей МК. В первом случае частота синхронизации АЦП обязательно окажется оптимальной, той, которая рекомендуется в техническом описании. Во втором случае выбранная в ре зультате других сооб ражений ƒBUS может оказаться неподходящей для модуля АЦП. На этот случай в составе некоторых модулей предусмотрен программируемый делитель частоты ƒBUS. Большинство моделей АЦП имеет только режим программного запуска: установка одного из битов регистра режима запускает очере дное измерение. Наиболее универ сальные модули АЦП имеют также режим автоматического запуска, при котором после завершения одного цикла преобразования немедленно начинается следующий. Однако данные измерения каждого цикла должны быть считаны программным способом (см. модуль ADC08 НС08 фирмы «Motorola»). В заключение приведем технические характеристики модулей АЦП некоторых популярных 8-разрядных МК (табл. Таблица 2.2 Технические характеристики модулей АЦП Тип МК Разрешающая способность (бит) Время преобразования (МКС) Число каналов МС68НС705В16 Motorola 8 32 8 MC68HC908JL3 Motorola 8 17 12 MC68HC908MR32 Motorola 10 8,5 10 С504 Infineon 8 5 10 PIC16C72 Microchip 8 16 8 PIC17C7xx Microchip 12 24 10 Цифроаналоговые пр еобразователи в составе МК являются большой редкостью.

В зависимости от особенностей устройства общая модель конкретизируется, например, отдельные регистры состояния и управления объединяются в один регистр, в устройстве ввода (вывода) имеется только регистр входных (выходных) данных, для ввода и вывода используется двунаправленный порт. Непосредственные действия, связанные с вводом/выводом, реализуются одним из двух способов, различающихся адресацией регистров ВВ.

Микросхема процессора Intel Core 2

23 Структура микропроцессора определяет состав и взаимодействие основных устройств и блоков, размещенных на его кристалле. Состав устройств и блоков, входящих в структуру микропроцессор а, и реализуемые механизмы их взаимодействия определяются функциональным назначением и областью применения микропроцессора. Современные микропроцессоры существенно различаются набором функциональных блоков и связями между ними. Обобщенная структура микропроцессора показана на рис. Тем не менее, в структуре любого процессора можно выделить основные элементы, определяющие специфику процессора как управляющего центра вычислителя. Прежде всего, речь идет о двух блоках: устройстве управления и операционном устройстве. Устройство управления (УУ ) предназначено для реализаци и выборки команд, их дешифрации и (на основе этого ) для управления обменом и обработкой информации путем генерации последовательности управляющих сигналов. Операционное устройство (ОУ) служит для обработки цифровой информации (арифметические и логические операции, сдвиги, анализ чисел и т.п.). Обобщенная структура микропроцессора Основным элементом для хранения информации внутри процессора являются регистры, которые выполняют функцию сверхоперативного ОЗУ с минимальным временем записи и считывания. IR – insructionregister) используется для фиксации кода команды после считывания ее из памяти.

Про такие кристаллы говорят, что они содержат специализированные аппаратные ядра (Hardcores). Важным классификационным признаком ИС ПЛ является тип памяти конфигурации, т. тип программир уемых элементов, задаваемое состояние которых как раз и создает требуемое устройство как конкретный вариант межсоединений имеющихся на кристалле схемотехнических ресурсов. Программируемые элементы представляют собой двухполюсники, играющие роль ключей, кот орым при программировании задаются состояния «зам кнуто» или «разомкнуто». Число программируемых элеме нтов в ИС ПЛ зависит от их сложности и в схемах наибольшего уровня интеграции измеряется миллионами. В ИС ПЛ используются или использовались ра нее следующи е типы программируемых элементов:  плавкие перемычки Fuse (в схемах самых первых образцов);  пробиваемые диэлектрические перемычки Antifuse (краткий русский термин отсутствует);  однократно заряжаемые «плавающие затворы» МОП -транзисторов (EPROM-OTP);  перезаряжаемые «плавающие затворы» с введением заряда электрическими воздей ствиями на транзистор и его стиранием с помощь ю облучения кристалла ультрафиолетовыми лучами (EPROM);  перезаряжаемые «плавающие затворы» с электрич ескими записью и стиранием зарядов (EEPROM, Flash);

Программатор для работы с микроконтроллерами PICXXX В качестве примера зарубежных приборов этого типа можно привести программаторы Mode!

ШВЕЦОВ38 СЛОВО ЮБИЛЯРАМи алгоритмов). Целью создания библиотеки является разработка систематики алгоритмов, структур данных, механизмов распределения аппаратных средств таким образом, чтобы обеспечить максимальный уровень повторного использования, модульности и удобства. Библиотека классов распространяется среди разработчиков по принципу свободного программного обеспечения с открытым кодом.С использованием инструментария разработан комплекс программ моделирования космических систем наблюдения, предупреждения о ракетном нападении, контроля космического пространства, связи и ретрансляции, а также наземной инфраструктуры управления орбитальной группировкой.В интересах оперативного представления органам военного управления замысла применения перспективных многоспутниковых группировок разработан ряд демонстрационных приложений, позволяющих оценить возможность построения космических систем, их облик, состав и общую структуру.Кроме того, необходимо отметить положительный опыт тестирования инструментария и программных комплексов на различных аппаратно-программных платформах. В 2017—2019 годах специалистами 2-го управления военного института (научно-исследовательского) Военно-космической академии имени А.Ф. Можайского проведены работы по адаптации программных средств к выполнению на вычислительных комплексах (ВК) «Эльбрус». Доработка приложений была связана с оптимизацией кода, распараллеливанием вычислений и обеспечением корректного отображения 3D-графики. По результатам выполненных работ подготовлены и представлены научно-технические отчеты в органы военного управления и профильные организации промышленности. ВК «Эльбрус» с установленными на них программными средствами приняли участие в Международных военно-технических форумах «Армия-2017, -2018, -2019» в составе экспозиции академии.Основываясь на опыте создания и применения единого инструментария разработки компьютерных моделей космических систем и комплексов сформулированы следующие предложения по организации научно-исследовательских работ16:• уточнить понятийный аппарат (компьютерная модель, инструментарий, демонстрационное приложение, кроссплатформенность и т. д.) и нормативно-методические средства в области моделирования КС;• провести анализ научно-технологического задела научно-исследовательских организаций в области разработки и использования собственных средств (инструментариев) моделирования КС;• определить языки программирования и общее технологическое программное обеспечение, включив его в список разрешенного в Минобороны программного обеспечения;• приступить к формированию единой библиотеки классов моделирования КС с открытым и закрытым сегментами;• организовать разработку межведомственного инструментария моделирования КС;• разработать общие технические требования к СМПО моделирования КС;• создать технологии оперативной разработки демонстрационных приложений и мультимедиа материалов в целях информационной поддержки принятия решений Заказчиком о возможности разработки программных средств моделирования и выборе конкретных аппаратно-программных платформ в рамках задаваемых НИОКР;

5 Введение Успехи в развитии технологий производства полупроводниковой электроники привели к появлению больших интегральных схем ( БИС) и сверхбольших интегральных схем ( СБИС) с высокой плотностью размещения компонентов. Использование БИС повышает эффективность цифровых систем, то есть увеличивается производительность, надежность, уме ньшаются габариты, масса, потребляемая мощность, а иногда и стоимость. В то же время, применение БИС оказывает существенное влияние на принципы построения цифровых систем, их архитектуру, логическую структуру и математическое обеспечение. С одной стороны, развитие интегральной технологии изготовления полупроводниковых микропроцессорных систем явилось революционным шагом, резко изменившим способы обработки информации. Появились различные обрабатывающие и запоминающие Б ИС с высоким уровнем интеграции. С дру гой стороны, увеличение уровня интеграции привело к снижению гибкости и универсальности функционирования, обрабатывающих БИС и сделало их более специализированными, пригодными для выполнения узкого ряда определе нных функций. Достаточная стоимость и длительны й срок разработки каждого типа БИС побудили разработчиков перейти от производства специальных БИС к многофункциональным, а затем и к универсальным БИС с программируемым или управляемым поведением, которые и стали основой построения микропроцессоров (МП) и микроконтроллеров (МК). На современном этапе развития общества микропроцессорная техника нашла широкое применение в различных областях деятельности:  проведение инженерных и научно исследовательских расчетов;  сбор и обработка информации;  использование в автоматизированных системах управления (АСУ);  информационно-справочные и информационно-поисковые системы;  автоматизация проектирования;  системы управления базами данных (СУБД);  управление в сетях передачи данных и связи;  системы контроля и управления;  управление войсками;  моделирование боевых действий;  использование в учебном процессе как объекта управления;  медицина, здравоохранение и др.

97 текущий контроль за выполнением программы и ее оперативная коррекция, что значительно упрощает процесс отладки. Внешний вид эмулятора Для микроконтроллерных систем заключитель ной процедурой комплексной отладки является запись в ПЗУ объектных модулей отлаженн ой программы и завершающее испы тание ее работоспособности. Запись программы в ПЗУ осуществляется с помощью специальных программаторов. Для универсальных микропроцессорных си стем после комплексной отладки производится оценка их производительности путем прогона с пециального набора тестовых программ (benchmarks). После выполнения указанных этапов отлаженная прототипна я система может быть ис пытана в рабочих условиях с подключение м полного н абора реальных периферийных уст ройств и объектов управления. В процессе опытной эксплуатации выявляются ошибки, не обнаруженные на этапе отладки, определяется реакция системы на воз можные непредви денные ситуации. Как показывает данное описание п роцесса разработки, при создании современных микропроцессорных и микроконтроллерных систем и спользуется комплекс программно-аппаратных средств, которые помогают качественно и в ограниченные сроки выполнить их проектирование и отладку. Используются следующие программные средства:  ассемблеры, компиляторы;  симуляторы (программно-логические модели);  отладчики, редакторы связей (компоновщики, загрузчики). В современных комплексах проектирования/отладк и систем эти средства обычно ра ботают совместно, в составе инт егрированной среды (оболочки) программирования. Особенно сложные задачи приходится решать при п рограммировании управляющих сис тем, работающих в реальном масштабе времени. В этом случае разр аботчик должен исполь зовать какую -либо из имеющихся

76 Два вывода модуля АЦП используются для з адания опорного напряжения: UREFH – верхний предел, UОП, UREFL - нижний предел. Разность потенциалов на входах UREFH и UREFH и составляет UОП. Если измеряемое напряжение UИЗМ > UREFH ,TO результат преобразования будет равен $FF, код $00 соответствует напряжениям ( UИЗМ < UREFH. Для достижения максимальной точности измерения следует выбрать максимально относительно малые погрешности. Собственно аналого-цифровой преобразователь вы полнен по способу последовательного приближения. Принцип действия АЦП иллюстрируют функциональная схема и временные диаграммы (рис. Структура АЦП последовательного приближения АЦП включает регистр последовательного при ближения, цифроаналоговый преобразователь, компаратор, генератор импуль сов синхр онизации, схему управления, ре гистр результата ADCDATA и триггер готовности д анных. Начало преобразования за дает сигнал «Пуск», который устанавливает регистр последовательного приближения в состояние 10000000. При этом на выходе ЦАП формируется на пряжение, равное по ловине опорного. Компаратор сравнивает измеряемое напряжение с напряжением ЦАП. Если UИЗМ > UЦАП, то в регистре последовательного приближения формируется следую щий код сравнения, равный 11000000. Если UИЗМ < UЦАП, то старший разряд регис тра последовательного приближения устанавливается в «0», следующий код сравнения равен 01000000. Таким образом, на первом такте и змеряемое напряжение сравнивается с эталонным значением UОП/2. Аналогичные действия выполняются в каждом из тактов преобразования, однако значение напряжения сравнения зависит от результатов сравнения в предыдущих тактах. 4.2 на втором такте напряжение срав нения равно UОП/2+UОП/4, на третьем такте - UОП/2+UОП/8, поскольку на втором такте было установлено, что UИЗМ <

91 и СИС, микропроцессорные систем ы для целей управления техничес кими объектами и технологическими процессами, малот иражная аппаратура либо прототипы систем на основе ИС программируемой логики. Проектирование на основе МИС, СИС – наиболее традиционный проце сс, в котором используются как эвристические подходы, так и формализованны е методики. Проектировщик задает структуру устройства на базе своих знаний, идей и освоения опыта предшествен ников, а при определении функций отдельных блоков пользуется и формальным и методами. Требуется знание типовых функциональных узлов, их свойств и параметров. В современных условиях (тенденции снижения стоимости схем с программ ируемой структурой) следует ожидать замещения систем, построенных на МИС/СИС, на БИС программируемой логики. Микропроцессорная система создается в результате разработки компле кса программно-аппаратных средств. Разработка аппаратной части сводится к компоновке системы из типовых модулей: центрального процессорного элемента, различных видов памяти, адап теров, контроллеров и внешних устройств. Способы подключения модулей к шинам микро процессорной системы, описания основных модулей, сведения о типах и методике их вы бора, программировании и применении приводятся в гл авах, посвященных описаниям кон кретных семейств . Ключевой проблемой при проектировании микропроцессорных систем была и остается проблема разработки программного обеспечения. Помимо проектирования микропроцессорных систем различного уровня и функционального назначения в основе большого числа инженерных разработок различной аппаратуры, требуемых устройств и/или их отладки. При этом программируемые ИС могут использовать ся как в виде автономных устройств, так и в составе микропроцессорных систем. Более того, в соответствии с ростом возможностей создания си стем на одном кристалле сами мик ропроцессорные системы могут оказаться одним из элементов, входящих в состав БИС с программируемой структурой. В подобной ситуации уже трудно определить, являются ли подобные СБИС программируемой логикой со встроенным МП или это МП -система со встро енной программируемой периферией. Также трудно провес ти четкую грань между проектиро ванием собственно МП, проектированием его периферии и тем более проектированием свя зей между МП-ядром и периферией. Структура алгоритма проектирования Проектирование на основе программируемых ИС (даже не очень высокой сложности) выполняется только с помощью систем автоматизированного проектирования САПР (САПР для проектирования и комплексной отладки

В английской терминологии СпИС именуются ASICs (Application Specific Integrated Circuits). Среди СпИС различают классы полузаказных и заказных. Разновидностями заказных микросхем являются полностью заказные и спроектированные методом «на стандартных ячейках». Полностью заказные схемы целиком проектируются по требованиям конкретного за казчика. Проектировщик имеет полную свободу действи й, определяя схему по своему ус мотрению вплоть до уровня схемных компонентов (отдельных транзисторов и т. Для изготовления схемы требуется разработка всего комплекта фотошаблонов, верификация и отладка всех схемных фрагментов. Такие схемы очень дороги и имеют длительные циклы проектирования. Проектирование стандартных ИС массового производства, как и проектирование заказными методами вообще – удел крупных специализированных фирм. На долю системо техников приходятся главным образом другие разработки: цифровые устройства малой сложности на МИ С

Таким образом, эмуляторы ПЗУ могут выполнить значительную часть функций схемных эмуляторов. При этом их реализация оказывается проще и дешевле, так как они не эмулиру ют функции микроконтроллера, который в процессе отладки продолжает работать в составе системы. Вследствие этого эмуляторы ПЗУ являются универсальными средствами, кото рые могут использоваться для отладки систем с различными модел ями микроконтроллеров Внутрисхемные эмуляторы Схемный эмулятор (СЭ) представляет собой программно -аппаратный комплекс, который в процессе отладки замещает в реализуемой сист еме микропроцессор или микрокон троллер. В результате такой замены функционирование отлаживаемой системы становит ся наблюдаемым и контролируемым. Разработчик получ ает возможность визуального кон троля за работой системы на экране дисплея и управления ее работой путем установки определенных управляющих сигналов и модификации содержимого рег истров и памяти. Благодаря наличию таких возможностей СЭ является наиболее универсальным и эффективным отладочным средством, используемым на этапе комплексной отладки системы. Наиболее широкое применение получили СЭ, под ключаемые к базовому управляющему компьютеру типа IBM PC или рабочей станции. Обыч но такие СЭ конструктивно оформ лены в виде прибора, размещенного в отдельном корпусе с автономным источником пита ния и соединенного с последовательным COM-портом базового компьютера. Некоторые типы эмуляторов д ля ускорения обмена связываются с компьютером через параллельный порт. С помощью плоского кабеля к СЭ подключается

Язык Ассемблера очень часто применяется при программировании микропроцессорных и микроконтроллерных систем, так, его использование обеспечивает существенное уменьшение объема памяти программ и времени выполнения программных модулей (до 20 –50 %). Упрощенные (демонстрационные) версии Ассемблеров для всех семейств микропроцессоров и микроконтроллеров Motorola предоставляются бесплатно рядом фирм и распространяются по сети Интернет. Эти версии обычно имеют ограничения на объем транслируемых программ (до нескольких сотен или тыся ч строк), а также не обеспечивают ряд сервисных возможностей.

При структурно-алгоритмическом проектировании определяются алгоритмы функциониро вания аппаратных и программных компонентов системы. На этапе функционально-логического проектирования разрабатываются функцион альные и принципиальные электри ческие схемы, программы, подготавливаютс я тестовые и контрольные данные. На конструкторском этапе производится привязка элементов проекта к конструктивным элемен там.

30 R – сброс (входной сигнал). Высокий уровень прекращает выполнение программы. После окончания сигнала процессор начинает выполнение программы с нулевого адреса. 1.2 Архитектура микропроцессоров Архитектурой микропроцессора называется комплекс его аппаратных и программных средств, предоставляемых пользователю. В это обще е понятие входит набор программ но-доступных регистров и ис полнительных (операционных) устройств, система основ ных команд и способов адресации, объем и структура адресуемой памяти, виды и способы обработки прерываний. Например, все модификации процессоров Pentium, Celeron, i486 и i386 имеют архитектуру IA -32 (Inte l Architecture – 32 bit), которая характеризуется стандартным набором регистров, предоставляемых пользователю, общей системой ос новных команд, способов организации и адресации памяти, одинаковой реализацией защиты памяти и обслуживания прерываний. При опис ании архитектуры и функционирования процессора обычно используется его представление в виде совокупности программно -доступных регистров, образующих регистровую или программную моделью. В этих регистрах содержатся обрабатываемые данные (операнды) и управляю щая информация. Соответственно, в регистровую модель входит группа регистров общего назначения, служащих для хранения операндов, и группа служебных регистров, обеспечивающих управление вы полнением программы и режи мом работы процессора, организацию обращени я к памяти (защита памяти, сегментная и страничная организация и др.). Регистры общего назначения образуют регистровое запоминающее устройство (РЗУ) – внутреннюю регистровую память про цессора. Состав и количество служебных регистров определяется архитектур ой микро процессора. Обычно в их состав входят:  программный счетчик PC (или CS + IP в архитектуре микропроцессоров Intel);  регистр состояния SR (или EFLAGS);  регистры управления режимом работы процессора CR (Control Register);  регистры, реализующие сегментную и страничную организацию памяти;  регистры, обеспечивающие отладку программ и тестирование процессора. Кроме того, различные модели микропроцессоров содержат ряд других специализированных регистров.

Такие комплексы выпускаются для различных семейств фирмой « Motorola» (MMDS05, MMDS11, CDS32) и рядом других производителей.

83 Последующие стадии относятся к опытно -конструкторским работам, результатом которых является производство опытных образцов, мелких серий, серийного и массового производства с выпуском соответствующей рабочей документации. Состав работ и отношения участников проекта на стадии «техническое предложение» регламентируются ГОСТ 2118. Аналогично на стадиях «эскизного и технического проектов» состав работ и отношения участников регламентируются стандартами ГОСТ 2119 и ГОСТ 2120 соответственно. Стадиями подготовки рабочей документации являются:  опытно-конструкторские работы (О);  стадия подготовки документации серийного производства (А);  стадия подготовки документации массового производства (Б). Символические обозначения стадий (П,Э,Т,О,А,Б) в до кументах соответствующего проекта проставляются как литерная характеристика стадии. 2.3.1 Средства и этапы разработки микропроцессорных систем Интегральные схемы (ИС), составляющие основу элементной базы средств обработки информации, характеризуются широ ким диапазоном сложности (уровня интеграции). Уровень интеграции оценивается условным числом эквивалентных вентилей (чаще всего вентилей типа 2И-НЕ), которые могли бы быть ра змещены на данном кристалле. Вы пускаемые промышленностью цифровые схемы имею т уровень интеграции от несколь ких единиц для малых интегральных схем (МИС) до нескольких миллионов для сверх больших интегральных схем (СБИС). Генеральная тенденция развития цифровых интегральных схем – постоянный рост уровня интеграции. Непрерывное за все время существования ИС совершенствование технологии их производства позволяет постоянно с нижать минимальные размеры схем ных элементов и потребляемую ими мощность , и увеличивать площадь кристалла, благо даря чему растет достижимый уровень интеграции. Эти же факто ры существенно улуч шают технико -экономические параметры не только самих ИС (быстродействие, надеж ность, стоимость, отнесенную к единице логической мощности, и др.), но и параметры реализованной на ИС аппаратуры. К основным модулям микропроцессорной системы относятся процессоры, память, внешние устройства и интерфейсные схемы. Микросхемы процессоров и памяти с точки зрения производителей ИС являются стандартной продукцией. Промышленность выпус кает широкий спектр обоих типов микросхем, отличающихся большим ра знообразием параметров.

104 наиболее перс пективны для построения сложнофункциональных целевых систем. Особенно следует отметить перспективнос ть использования при разработке АС мезонинной технологии, которая унифицирует размеры и интерфейс базовой платы -носителя и раз мещаемых над ней небольших плат -мезонинов (типичный размер 45x99 мм). Одна плата -носитель несет от 2 до 12 мезонинов. Каждый мезон ин соединяется с носителем двумя разъемами, которые выполняют также функции механических держателей. Один из разъемов подключается к локальной шине платы -носителя, функциональное назначение контактов второго разъема определяется типом мезонина, который мож ет содержать многоканальную систему ввода/вывода, сетевые адаптеры и другие устройства. Используя серийно выпускаемые рядом производителей платы носители и набор мезонинов, разработчик может быстро реализовать сложнофункциональные целевые системы для разнообразных применений. Лидерами в этой области являются фирмы « GreenSpring Computers» (США) и «РЕР Modular Computer» (Германия), которые выпускают большую номенклатуру плат-носителей и мезонинов.

43 Команды арифметических операций. Основными в этой группе являются команды сложения, вычитания, умножени я и деления, которые и меют ряд вариантов. Команды сло жения ADD и вычитания SUB выполняют соответствующие операции с содержимым двух регистров, регистра и ячейки памяти или с использованием непосредственного операнда. Команды ADC, SBB производят сложение и вычитание с учетом значения признака С, устанавливаемого при формировании переноса или заем а в процессе выполнения предыду щей операции. С помощью этих команд реализуется последовательное сложение операн дов, число разрядов которых превышает разрядность проц ессора. Команда NEG изменяет знак операнда, переводя его в дополнительный код. Операции умножения и деления могут выполняться над числами со знаком (команды IMUL, IDIV) или без знака (команды MUL, DIV). Один из операндов всегда размещается в регистре, втор ой может находиться в регистре, ячейке памяти или быт ь непосредствен ным операндом. Результат операции располагается в регистре. При умножении (команды MUL, IMUL) получается результат удвоенной разрядно сти, для размещения которого ис пользуется два регистра. При делении (команды DIV, IDIV) в качестве делимог о используется операнд удвоенной разрядности, размещаемый в двух регистрах, а в качестве результата в два регистра записывается частное и остаток. Практически все микропроцессоры производят логи ческие операции И, ИЛИ, Исключающее ИЛИ, которые выполняются над одноименными разрядами операндов с помощью команд AND, OR, XOR. Операции выполняются над со держимым двух регистров, регистра и ячейки памяти или с использованием непосредств енного операнда. Команда NOT инвертирует значение каждого разряда операнда. Микропроцессоры осуществляют арифметические, логические и циклические сдвиги адресуемых операндов на один или несколько разрядов. Сдвигае мый операнд может находитьс я в регистре или ячейке памяти, а число разрядов сдвига задается с помощью непосредственного операнда, содержащегося в команде, или опре деляется содержимым заданного регистра. В реализации сдвига обычно участвует признак переноса С в регистре состояний ( SR или EFLAGS), в котором располагается посл едний разряд операнда, выдвигаемый из регистра или ячейки памяти. Выполнение основных команд сдвига показано на рис. При логических сдвигах влево (SHL) и вправо (SHR) производится заполнение освободившихся разрядов операнда ну лями. Команда арифметического сдвига влево SAL реализуется аналогично команде логи ческого сдвига SHL. При арифметическом сдвиге влево производится заполнение освобо дившихся

Сложные ИС ПЛ типа FPGA (Field Programmable Gate Arrays ) содержат матрицу логи ческих блоков того или иного типа, расположенных по строкам и столбцам, между которыми размещены средства коммутации, позволяющие с помощью программирования получать необходимые взаимные соединения логических блоков. Сами блоки могут быть выполнены различным образом. Стремление объединить достоинства, присущие CPLD и FPGA, приве ло к созданию БИС/СБИС комбинированной архитектуры, для которых еще не выработано общепринятое название. Рост уровня интеграции дал возможность размещать на кристалле схемы, сложность которых соответствует целым системам (мегавентильные схемы). Такие схемы именуются SOC и могут быть разделены на два типа – однородные схемы, в которых функциональное назначение отдельных областей кристалла обеспечивается программированием одних и тех же по типу ресурсов (схемы типа generic), и блоч ные структуры, в которых отд ельные области кристалла специализированы уже при их изготовлении.

Простые ИС ПЛ рассчитаны на реализацию систем переключательных функций и использовались для замены нескольких корпусов или даже десятков корпусов стандартн ых ИС на один корпус PLD. По мере их усложнения решаемые ими задачи также усложнялись, в частности, появилась ориентация на реализацию конечных автоматов (в схемы PLD стали вводить элементы памяти). Микросхемы программируемой логики классифицируются по нескольким признакам Продолжением линии развития ПМЛ стали сложные БИС/СБИС типа CPLD (Complex PLD), в которых, как и в PLD, используются схемы непосредственной реализации дизъюнк тивных нормальных форм переключательных функций

В числе наиболее распространенных сигнальных процессоров можно назвать изделия следующих компаний: Motorola (56002, 96002), Intel (i960), Texas Instruments (TMS320Cxx), Analog Devices (21xx, 210xx).

37 тактовой частоты (PLL) дает во зможность регулировать производительность и потребляемую мощность. Блок выполнения операций реализует операции с фиксированной точкой и операции с плавающей точкой для приложений, где требуются высокая точность и производительность. Очевидно, что поддержка операций с плавающей точкой может и отсутствовать (используется обычно в 32-разрядных DSP). В процессорное ядро введен блок отладки и контроля, который содержит средства внутрисхемной эмуляции (О nСЕ), средства тестирования и отладки (JTAG), сторожевой таймер (WDT). Данный набор средств сегодня практически является стандартным. Подсистема ввода/вывода включает кодек (АЦП и ЦАП), параллельные и последовательные порты ввода/вывода, host -интерфейс для связи с персональным компьютером или другой ЭВМ, аудио -интерфейс, широтно импульсный модулятор, таймеры и другие устройства. Организация подсистемы хранения также во многом отражает специфику алгоритмов ЦОС. Так, в частности, выделение двух блоков памяти X и Y позволяет одновременно считывать операнды для свертки, а выделение памяти программ позволяет распараллелить выполнение этапов командного цикла (чтение команды и формирование адреса – чтение операндов – выполнение – запись результата). Такая модель используется в архитектурах гарвардского типа. Необходимые сло жные операции (sin, arctg, V и др.) целесообразно выполнять табличным способом. В случае использования А- и p-нелинейных зависимостей, для представления отсчета требуется в данном случае 8 бит: 1 бит – знак, 3 бита – номер участка А- или р -закона, 4 бита – номер шага на выбранном участке. Данные нелинейные характеристики позволяют устранить избыточность данных за счет компандирования (COMpressor/ exPANDER), которое заключается в сужении динамического диапазона при аналого-цифровом преобразовании и расширение при цифроаналоговом преобразовании. Наличие памяти загрузки позволяет упростить процесс занесения кода программы в процессор.

Микропроцессорные систе мы: учебное пособие для вузов / Е.К. Микропроцессорные устройства систем управления: учебное пособие. – Казань: изд-во КНИТУ-КАИ, 2013. Микропроцессоры и микроконтроллеры / И.В. – Владивосток: Издател ьство Дальневосточного университета, 2009. Молчанов О.Е., Кузнецов В.В., Эсаулов К.А., Басыров А.Г. Дискретная математика: учебное пособие. Эксплуатация средств вычислительной техники. Аппа ратные средства вычислительной техники: учебник / А.В.

75 2.2.2 Цифровая обработка сигналов Отличительная особенность многих современных МК – интегрированный на кристалл МК модуль многоканального аналого -цифрового преобразователя (АЦП). Модуль АЦП предназначен для ввода в МК аналоговых сигналов с датчиков физических величин и преобразовани я этих сигналов в двоич ный код с целью последующей про граммной обработки. Структурная схема типового модуля АЦП представлена на рис. Типовая структура модуля АЦП Многоканальный аналоговый коммутатор служит для подключения одного из источ ников аналоговых сигналов (РТх0 –РТх7) ко входу АЦП. В ыбор источника сигнала для изме рения осуществляется посредством записи номера канала коммутатора в соответству ющие разряды регистра управления АЦП. Заметим, что в модулях АЦП 8 -разрядных МК предусмотрена только программная установка номера канала, режим автоматического последовательного сканирования каналов с записью результата измерения каждого канала в индивидуальную ячейку памяти не реализуется. Диапазон измеряемых значений напряжения ан алоговых входов определяется напряжением опоры Разрешающая способность АЦП составляет UОП/2n, где n – число двоичных разрядов в слове результата. Максимальное значение опорного напряжения, как правило, равно напряжению питания МК.

Средства и методы комплексной отладки МП С с помощью программаторов Эти устройства необходимы на заключительном эта пе разраб отки систем, когда тре буется записать отлаженную программу а ПЗУ, которое входит в состав микроконтроллера или реализуется в виде отдельного модуля. Выпускается два вида программаторов. Специализированные программаторные платы.

Для визуализации состояния системы на экране монитора современные отладчики используют м ногооконный графи ческий интерфейс. Многие отладчики могут работать не только с симуляторами, но и реализуют интерфейс со схемными эмуляторами, т. с реальными микропроцессорами или микроконтроллерами в процессе комплексной отладки системы (рис. 2.3.3 Средства отладки микропроцессорных систем Этот класс средств проектирования микропроцессорных и микроконтроллерных систем является наиболее многочисленным. Условно их можно разделить на следующие типы:  системные комплекты (evaluation kit) – набор размещенных на плате аппаратных средств, достаточных для реализации несложных систем (рис. Nordic Semiconductor NRF6700 Development Tools, NRFGO Starter Kit  отладочные платы и системы (evaluation board, system) – размещенные на плате про граммно-аппаратные комплексы, обеспечивающие моделирование и отладку систем различ ного назначения на базе определенных моделей микропроцессоров или микроконтроллеров (рис. DevKit8500D Evaluation Board – отладочная плата на базе процессора DM3730

Диаграмма, управляющих сигналов записи/чтения данных В такте Т2 по фронту С2 микропроцессор снимает сигнал SYNC с шины управления и слово состояния SW с шины данных, если выполнится цикл ввода, то устанавливает выходы данных в Z -состояние и выставляет строб DBIN; если выполняется ц икл вывода, то выдает данные на D BUS. В этом же такте процессор анализирует состояние сигналов готовности READY, захвата HOLD и признака подтверждения останова HLTA от внутреннего триггера. На основании этого процессор, либо переключается в соответствующе е состояние (ожидания, захвата или останова ), либо переходит к выполнению такта Т3. Состояние ожидания устанавливается при неготовности внешнего устройства к обмену и, соответственно, низком уроне сигнала READY. В этом случае между тактами Т2 и Т3 включают ся такты ожидания TW, в которых сигналы микропроцессора остаются неизменными. Такты ожидания следуют до тех пор, пока про верка готовности не даст положительный резул ьтат (READY = 1), тогда выполнение цикла продолжится. Если же проверка о бнаруживает запрос захвата магистрали (HOLD = 1), то устанавливается режим захвата. В цикле записи, по завершении такта Т2, микропроц ессор всегда формирует строб WR. В такте Т3 выполняемые действия, в значительной степени, определяются типом машинного цикла. В циклах чтения, по фронту С2, микропроцессор снимает сигнал DBIN, и по его перепаду (DBINf) осуществляет прием данных с D BUS, а после, с некоторым запаздыванием, адресованное устройство снимает данные с шины. В циклах записи, на протяжении всего такта Т3, сохраняется

92 программного обеспечения МП -систем обыч но называют интегрированной средой разработки, или о болочкой). Для общности рассмот рения, кроме случаев, связанных с традиционным использованием терминов типа интег рированная среда и узко ориентированных на разработ ку ПО МП -систем, будем использо вать общий термин САП Р для любых систем автоматизированного проектирования. Для большей общности дальнейшего рассмотрения будем предполагат ь необходимость про ектирования устройства, включающего в свой состав ка к БИС МП, так и БИС с программи руемой структурой (как для реализаци и цифровых, так и для реализации аналоговых фрагментов устройства ). Укрупненная для подобных устройств показана на рис. Укрупненная структура алгоритма автоматизированного проектирования микропроцессорных систем

6 По своим техническим характеристикам микропроцессорная техника может сильно отличаться. Это и универсальные процессоры пер сональных компьютеров, серверов, суперкомпьютеров с большой разрядностью, широкой номенклатурой команд, множеством способов адресации данных, возможностью подключения различного набора периферийных устройств и узкоспециализированные устройства, выполняющие всего одну функцию. При создании системы любого назначения на базе МК либо интегрированных процессоров (ИП), в общем случае, необходимо выполнить следующие этапы. Постановка задачи, то есть системный анализ задачи – выделяются процессы и функции, реализация которых будет возложена на МК или ИП. Разработка структурной схемы микропроцессорной системы. Разработка функциональной схемы микропроцессорной системы. Разработка монтажной схемы микропроцессорной системы. Разработка программного обеспечения микропроце ссорной системы, то есть алгоритмизация процессов и функций – разрабатываются алгоритмы решения задачи. Разработка макетной платы – отладка программных и аппаратных компонентов микропроцессорной системы. Разработка рисунка печатной платы и ее изготовление. Пайка компонентов и тестирование отлаженной модели. Таким образом, в процессе разработки микропроцессорной системы осуществляется выбор технических средств соответствующей компании, инструментальных средств поддержки процесса проектирования (отладоч ных средств, языков программиро вания и т.д.), а также операционной системы реального времени, если это требуется для решения задачи. Производится программирование алгор итмов, изготовление системы на базе выбранного МК или ИП и комплексная отладка. Понимание прин ципов построения микропроцессорных систем позволит специалистам в области применения и эксплуатации автоматизированных систем специального назначения не только качественно использовать образцы вооружения, но и осуществлять их модернизацию, а также создавать новые на их основе.

12 сопроцессор, коммуникационный сопроцессор и др.). Подобная функционально распределенная модель кристал ла МК, с одной стороны, п озволяет добиться более полного соответствия между особенностями предметной области и организацией кристалла, а с другой – обеспечить совместимость как в пределах различных версий определенного типа МК, так и в пределах всего семейства МК. Масштабируемость обеспечивается выполнением приложений в пределах полного диапазона архитектур. Действительно, за счет техноло гии процессорного ядра обеспечи вается переносимость приложений как для обычных ми кропроцессоров, так и для встро енных микропроцессоров (embedded microprocessors), а также для микроконтроллеров. Переносимость для открытых систем рассматр ивается как возможность выполнения приложения на разных компьютерах с одной опе рационной системой. В нашем слу чае этот важный принцип состоит в том, что ядро операционной системы реального вре мени портируется в целевые платформы на базе МК всех семейств, создавая тем самым комфортные условия для разработчика: процесс проектирования от дешевых систем с невысокой производительностью до многопроцессор ных конфигу раций осущ ествляется в рамках единой инструментальной среды. Взаимодействие приложений – возможность общения приложений разных систем, использующих одни протоколы.

84 имеющегося множества типономиналов процессоров и запоминающих устройств проектировщик (системотехник) выбирает наиболее подходящий для своего проекта вариант. Важно, что изготовитель микросхем процессоров и памяти не выполня ет ин дивидуальные заказы потребителей, а работает на широкий рынок. Это обеспечивает стандартным микросхемам большие объемы производства - необходимое условие реализуемости ИС высокого уровня интеграции. Действите льно, стоимость проектиро вания С пр сложных ИС чрезвычайно велика, но входит в стоимость микросхемы в виде составляющей Слр / N, где N – тиражность производства данной ИС. Только при достаточ но больших значениях N будут оправдываться большие затраты средств на проектирование БИС/СБИС. Кроме стандартных ч астей микропроцессорная система содержит и некоторые индивидуальные схемотехнические части для сопряжения модулей и управления ими. Такие индивидуальные части системы ранее приходилось строить с помощью ИС м алого и среднего уровней интеграции, применение которых ведет к резкому увеличению числа корпусов и внешнего монтажа в схемах МПС, а это сопровождается столь же резким снижением их быстродействия и надежности, росту габаритных размеров и по требляемой мощности. Появление в нестандартных блоках системы ма лых и средних ИС всегда объясня лось только экономическими причинами – чрезмерно высокой стоимостью заказных БИС/СБИС при малых объемах их выпуска. С точки зрения технологии, естественно, ре ализация специализированных БИС/СБИС была вполне осуществима. Препят ствия к при менению БИС/СБИС в специализированных частях микропроцессорных систем стали постепенно устраняться по мере развития программируемых ИС. Как будет показано далее, применение БИС/СБИС с програм мируемой логикой улуч шает и ряд других важных параметр ов проектов – время подготовки продукции к выходу на рынок (Time to Market), безошибочность проектирования и др. Микросхемы программируемой логики классифицируются по нескольким признакам (рис. По уровню интеграции их можно разделить на простые, сложные и схемы типа «системы на кристалле» (SOC, System On Chip), как показано на рис. Можно сказать также, что простые ИС программируемой логики относятся к первому их поколению, тогда как сложные и SOC принадлежат к следующим.

Поэтому, начиная с 1980 -х годов, интенсивное развитие получила архитектура процессоров с сокращенным набором команд (RISC-процессоры). RISC (Reduced Instruction Set Computer) – архитектура отличается использованием ог раниченного набора команд фиксированного формата. Современные RISC-процессоры обычно реализуют около 100 команд, имеющих фиксированный формат длиной 4 байта. Также значительно сокращается число исполь зуемых способов адресации. Обычно в RISC- процессорах все команды обработки данных выполняю тся только с регистровой или не посредственной адресацией. При этом для сокращения количества обращений к памяти RISC-процессоры имеют увеличенный объем внутреннего Р ЗУ – от 32 до нескольких сотен регистров, тогда как в CISCпроцессорах число регистров общего назначения обычно составляет 8–16. Обращение к памяти в RISC-процессорах используется тол ько в операциях загрузки данных в РЗУ или пересылки результатов из РЗУ в память. При этом используется небольшое число наиболее простых способов адресации: косвенно-регистровая, индексная и некоторые другие. В результате существенно упрощается структура микропроцессора, сокращают ся его размеры и стоимость, значительно повышается производительность. Указанные достоинства RISC-архитектуры привели к тому, что во многих современных CISC-процессорах используется RISC-ядро, выполняющее обработку данных. При этом поступающие сложные и разноформатные команды предварительно преобразуют ся в последовательность простых RISCопераций, быстро выполняемых этим процес сорным ядром. Таким образом, работают, например, модели микропроцессо ров Pentium и К7, которые по внешним показателям относятся к CISC-процессорам. Ис пользование RISCархитектуры яв ляется характерной чертой многих современных микропроцессоров. Например, в октябре 1991 г ода, компании IBM, «Motorola» и «Apple Computers» объявили об организации консорциума для совместной разработки и внедрения RISC -микропроцессоров новой архитектуры. Их прототипом был выбран процессор Power, используемый в широко распространенной рабочей станции RS/6000, которая выпускалась компанией IBM. В микропроцессорах PowerPC, реализован принцип выделения отдельных ресурсов для решения задач пользователя и супервизора. В соответствии с этим принципом архитектура PowerPC содержит регистры, входящие в модели пользователя или супервизора, а также имеет ряд привилегированных команд, выполняемых только в режиме супервизора. В регистровую модель пользователя, которая явля ется общей для всего семейства PowerPC, входят:

55 Остальные устройства являются внешними и подключ аются к системе с помощью интер фейсных устройств (ИУ), реализующих определенные протоколы параллельного или после довательного обмена. Такими внешними устройствами могут быть клавиатура, мо нитор, вне шние запоминающие устройства (ВЗУ), использующие гибкие или жесткие магнитные диски, оптические диски (CD -ROM), магнитные ленты и другие виды носителей информации, дат чики и преобразователи информации (аналого -цифровые или цифроаналоговые), раз нообразные исполн ительные устройства (индикаторы, принтеры, электродвигатели, реле и др. Для реализации различных режимов работы к сис теме могут подключаться дополни тельные устройства – контроллеры прерываний, прямого доступа к памяти и другие, реа лизующие необходимые специальные функции управления. Данная структура соответствует архитектуре Фон -Неймана, предложенной этим ученым в 1940 -х годах для реализации первых модел ей цифровых ЭВМ. Ниже будут рассмотрены и другие варианты процессорных архитектур. Системная шина содержит несколько десятков (в сложных системах более 100) проводников, которые в соответствии с их функциональным назначением подразделяются на отдельные шины – адреса А, данных D и управления С. Шина А служит для передачи адреса, который формируется микропроц ессором и позволяет выбрать необходимую ячейку памяти ОЗУ (ПЗУ) или требуемое ИУ при обращении к внешнему устройству. Шина D слу жит для выборки команд, поступающих из ОЗУ или ПЗУ в УУ микропроцессора, и для пересылки обрабатываемых данных (операндов) между микропроцессором и ОЗУ или ИУ (внешним устройством). По шине С передаются разнообразные управляющие сигналы, определяющие режимы работы памяти (запись или считывание), интерфейсных устройств (ввод или вывод информации) и микропроцессора (запуск, запросы в нешних устройств на обслуживание, информация о текущем режиме работы и другие сигналы). Разрядность шины данных обычно соответствует разрядности операндов, обрабатываемых микропроцессором. Поэтому чаще всего шина D содержит 8, 16 или 32 линии для передачи соответствующих разрядов данных и команд. В ряде последних моделей микропроцессоров используется шина D с расширенной разрядностью, чтобы обеспе чить одновременную передачу нескольких команд или операндов. Например, 32 -разрядные микропроцессоры Pentium имеют 64-разрядную шину данных. Разрядность шины адреса определяет максима льный объем адресуемой процессором внешней памяти. Например, 16 -разрядная шина А обеспечивает адресацию памяти объемом до 64 Кбайт, а 32 -разрядная шина до 4 Гбайт. Процессоры Pentium II, Pentium III, Pentium IV имеют 36 -разрядную шину

В течение чтырех лет в рамках проекта с названием BesMan (расшифровывается как «сценарии поведения для мобильной манипуляции ») исследователи будут разрабатывать программное обе спечение, необходимое для управления дистанционными роботами в космосе. Робот ALIA ISS Роботы SPHERES (рис. З.4) могут быть разнорабочими в будущих космических миссиях. Вместо отправки астронавтов для осмотра и ремонта сломанных спутников и космических кораблей, роботы могут быть отправлены в качестве интеллектуальной стаи, общаясь друг с другом, и осматривать цели. В ближайшие несколько месяцев, роботы -шары получат еще два обновления оборудования. Первое состоит в установке двух камер, второе – так называемые кольца, которые действуют как гигантские магниты, для отражения или привлечения других роботов-сфер. Робот SPHERES В нашей стране также на протяжении многих лет ведутся исследования в области роботехники, например, в ЦНИИ РТК (г. В ЦНИИ РТК занимались разработкой как наземных робототизированных комплексов (рис. З.5), так и разрабатывались различные космические комплексы (рис. Мобильный робот модульного робототехнического комплекса РТК-05 для радиационной разведки

В качестве инструментальных компьютеров используются персональные компьютеры (чаще всего IBM-PC старших моделей, реже PS- 2 и Macintosh) или рабочие станции (SPARC фирмы «SUN Microsystems», DECStation, DEC- Alpha фирмы «Digital Equipment», HP-9000 фирмы «HewlettPackard», IBM RS/6000), иногда компьютеры типа VAX (фирмы «Digital Equipment»). Операционными системами этих компьютеров служат различные версии Windows и UNIX (Solaris, AIX, ULTRIX и другие).

Интервал преобразования состоит из п так тов: один такт для получения каждого двоичного разряда слова результата. Точность аналого цифрового преобразования определяется разрешающей способностью блока ЦАП. В разных мод елях МК он может быть выполнен на основе матрицы из 256 резис торов равных номиналов, матрицы весовых резистор ов R/2R, достаточно часто встречается решение на основе емкостного делителя. Од нако во всех моделях МК разреша ющая способность ЦАП составляет 8 дво ичных разрядов. Соответственно формат пред ставления результата измерения АЦП – однобайтовый. Исключение составляют лишь модули АЦП микроконтроллеров для управления преобразовател ями частоты элект ропривода, разрешающая способность которых равна 10 двоичным разрядам. Два млад ших разряда результата получают с помощью до полнительного емкостного делите ля, не связанного с регистром последовательного приближения. Длительность такта преобразования задает генератор синхронизации: один цикл равен двум периодам частоты генератора tADC. Время преобразования можно рассчитать по формуле tИЗМ = (2n+1)tADC , последний цикл необходим для переноса результата в регистр данных АЦП. Частота генератора синхронизации, как правило, не может быть выбрана произвольно. Принцип действия АЦП последовательного приближения Ее ограничение определяется двумя обстоятельствами. Конденсаторы емкостного делителя неидеальн ы и имеют определенное сопротивление утечки, поэтому длительность такта измерения должна быть, с

73  сопроцессоры для выполнения каких -либо узкоспециализиров анных вычислений. Сопроцессоры могут входить в набор логики, разработанный одной конкретной фирмой (например , Intel выпускала в комплекте с процессором 8086 сопроцессоры 8087 и 8089) или в ыпускаться сторонним производителем (например, Weitek 1064 для M68k и 1067 для Intel 80286). Сопроцессор расширяет систему инструкций центрального процессора, поэтому для его использования, программа (компилируемая бе з интерпретации и вызова внешних библиотек) должна содержать эти инструкции. Настройки современных компиляторов для языков высокого уровня под процессоры семейства x86 зачастую позволяют выбирать: использовать математический сопроцессор или нет, что особен но важно при создании кода, который будет исполняться внутри обработчика аппаратного прерывания. Математический сопроцессор – сопроцессор для расширения командного множества центрального процессора и обеспечивающий его функциональностью модуля операций с п лавающей запятой, для процессоров, не имеющих интегрированного модуля. Модуль операций с плавающей запятой (или с плавающей точкой; англ.

11 однокристальных микро -ЭВМ связывают начало эры компьютерной автоматизации в области управления. По -видимому, это обстоятельство и определило термин микроконтроллер (control – управление). Однако впоследствии расширение сферы использов ания МК повлекло за собой разви тие их архитектуры за счет размещения на кристалле устройств (модулей), отражающих своими функциональными возможностями специфику решаемых задач. Такие дополнитель ные устройства стали называться периферийными. Поэтому неслучайно в последнее время введен еще один термин – интегрированный процессор (ИП), который определяет новый класс функциональноемких однокристальных устройств с другим сост авом модулей. По количеству и составу периферийных устройств ИП уступают МК и занимают промежуточное положение между МП и МК. По этой же причине появились не только семейства МК, которые объединяют родственные МК (с одинаковой системой команд, разрядностью), но и стали выделяться подвиды МК: коммун икационные, для управления и т. МП в настоящее время преимущественно использу ются для производства персональ ных ЭВМ, а МК и ИП являются основой создания различных встраиваемых си стем, телекоммуникационного и портативного оборудования и т.д. Анализ различных семейств МП, ИП и МК показывает, что наиболее жизнеспособными являются такие семейства, которые опираются в своем развитии на предшествующую эво люцию микропроцессоров, т.е. за счет «селекции» выделяются устойч ивые и проверенные практикой структурные решения и закладываются в новые семейства МК. Разные МП или МК объединяют в семейства как технология «микроядра», в качестве которого выступает процессорное ядро, взаимодей ствующее с периферийными устройствами разли чной номенклатуры, так и принципы, свойственные открытым системам: совместимость ( compatibility), масштабируемость (scalability), переносимость ( portability) и взаимодействие приложений (introperability). Совместимость, состоящая в выполнении приложен ий на всех версиях МК, обеспечивается использованием в качестве базовой системы команд и интерфейса микропроцессора с последующей унификацией путем добавления дополнительных команд и внешних выводов, повышающих эффективность использования в задачах, на которые ориентируется семейство МК. Полученное таким образом структурно е образование называется процес сорным ядром, к которому подсоединены как периферийные устройства, требующие ресурсов процессорного ядра (например, память, последовательный порт и др.), так и периферийные устройства, аппаратно поддерживающие вычислительны й процесс в МК (например, сопро цессор обработки сигналов, таймерный

13  электрический – принципиальная электриче ская схема ( транзисторы, конденсаторы, резисторы и т.п.);  физический – методы реализации одного транзистора (или небольшой группы) в виде легированных зон на кристалле;  топологический – топологические фотошаблоны для производства;  программный уровень – позволяет программисту программировать (для ПЛИС, микроконтроллеров и микропроцессоров) разрабатываемую модель, используя виртуальную схему. В настоящее время большая часть интегральных схем проектируетс я при помощи специализированных САПР, которые позволяют автомати зировать и значительно ускорить производственные процессы , например, получение топологических фотошаблонов. При изгот овлении интегральных схем используется групповой метод производства и в основном планарная технология. Групповой метод производства предполагает изготовление на одной полупроводниковой пластине большого количества однотипных интегральных схем (ИС) и одновр еменную обработку десятков таких пластин. После завершения цикла изготовления пластины разрезаются в двух взаимно перпендикулярных направлениях на отдельные кристаллы – чипы (chip), каждый из которых представляет собой ИС. Планарная (плоскостная) технологи я – это такая организация технологического процесса, при которой все составляющие ИС формируются в одной плоскости. Необходимо отметить, что создание и освоение изделий микроэлектроники является чрезвычайно дорогостоящим делом. Стоимость D одной ИС (одного кристалла) упрощенно можно вычислить следующим образом: , где A – затраты на НИР и ОКР по созданию ИС; B – затраты на технологическое оборудование; С – текущие расходы на материалы, электроэнергию, заработную плату в пересчете на одну пластину; Z – количество пластин, изготавливаемых до амортизации основных производственных фондов; X – количество кристаллов на пластине ; Y – отношение годных ИС к количеству, запущенных в производство. Увеличение Y достигается совершенствованием технологии, а рост числа кристаллов X достигается увеличением размера пластины и уменьшением размеров элементов ИС (рис.

Интеллектуальные пл аты-носители представляют собой одноплатные компьютеры или контроллеры, реализованные на базе высокопроизводительных микропроцессоров (MC68030, MC68040 и др.) или микроконтроллеров (МС68332, МС68360 и др.), которые имеют связь с персональным компьютером. Так ие носители могут выполнять функции плат развития и использоваться в составе прототипных и целевых систем. Серийно выпускаемые мезонины (их около 300 типов) выполняют функции дополнительной памяти и различных периферийных устройств: параллельных и последовательных портов, тайме ров-счетчиков, АЦП и ЦАП, сетевых и шинных контролле ров и др. При необходимости раз работчик может самостоятельно спроектировать мезонин, выполняющий функции, кото рые необходимы для прототипной или целевой системы. Таким образом, мезонинная технология является наиболее эффект ивным средством разработки АС современных электронных систем разл ичного назначения, позволяя кон фигурировать их из стандартных плат при минимальных затратах времени и средств на разработку дополнительных АС. Эмуляторы ПЗУ Данное устройство используется при отладке систем, рабочая программа которых размещается в ПЗУ. Эмулятор ПЗУ содержит ОЗУ, которое подключается к системе вместо управляющего ПЗУ, и работает под управлением подключенного к эмулятору базового ком пьютера. В простейшем случае эмулятор ПЗУ позв оляет в процессе отладки выполнять многократное

87  ключевые МОП -транзисторы, управляемые триггерами памяти конфигурации (SRAM- based). Репрограммируемые элементы EPROM, EEPROM, Flash, SRAM -based различаются по свойствам. Элементы EPROM с ультрафиолетовы м стиранием допускают ограниченное число перезаписей заряда, так как процесс обл учения постепенно изменяет свойства кристалла. Элементы с электрическим стиранием имеют су щественно большее число допустимых перезаписей заряда (приблизительно в тысячу раз ), а элементы с триггерной памя тью конфигурации могут репрограммироваться неограниченно. Одним из признаков классификации служит наличие или отсутствие связи между задержками распространения сигналов и конкретными путями их передачи по межсое динениям кристалла. Этот фактор важен, так как независимость задержки от конкретного пути передачи сигнала означает предсказуемость задержек, что существенно облегчает построение на кристалле работоспособных схем, особенно схем высокого быстродействия. Проектирование – разработка технической документации, позволяюще й изготовить устройство с заданным функционированием, с заданными свойствами и в заданных условиях. В основе стратегии проектирования лежит функциональная декомпозиция. Для системы в целом и ее блоков используется концепция «черного ящика». Для «черного ящ ика» разрабатывается функциональная специ фикация, вклю чающая внешнее опи сание блока (входы и выходы) и внутреннее описание – функцию или алгоритм работы: F = Ф(Х, t), где X - вектор входных величин, F – вектор выходных величин, t – время. При декомпозиции функция Ф разбивается на более простые функции Ф-Фк, между кото рыми должны быть установлены определенные связ и, соответствующие принятому ал горитму реализации функции Ф. Переход от функции к структуре – синтез. Выбор наилучшего вариан та осуществляется по результатам ана лиза, когда проверяется правильность работы и некоторые показатели, характеризующие устройство. Декомпозиция функций блоков выполняется до тех пор , пока не получатся типовые фун кции, каждая из которых может быть реализов ана элементами выбранного уровня иерархии. Процесс проектирования – многоуровневый, многош аговый и итерационный, с возвратами назад и пересмотром ранее принятых решений. Последовательная декомпозиция проекта на отдельные фрагменты (с определением функций к аждого фрагмента и его интерфейса) не зависит от иерархического уровня проектирования и характерна для разработки широкого

Постоянно возраста ющие требования к производительности микропроцессорных систем вызвали в последние годы все более широкое применение Гарвардской архитектуры при создании многих типов современных микропроцессоров. Гарвардская архитектура характеризуется физическим разделением памяти команд (программ) и памяти данных. В ее оригинальном варианте использовался также отдельный стек для хранения содержимого программного счетчика, который обеспечивал возможности выполнения вложенных подпрограмм. Каждая память соединяется с процессором отдельной шиной, что позволяет одновременно с чтением -записью данных при выполнении теку щей команды производить выборку и декодирование сл едующей команды. Благодаря тако му разделению потоков команд и данных и совмещению операций их выборки реализуется более высокая производительность, чем при использовании Принстонской архитектуры. Недостатки Гарвардской архитектуры связаны с необходимостью проведения большего числа шин, а также с фиксированным объемом памяти, выделенной для команд и данных, назначение которой не может оперативно перераспределяться в соответ ствии с требовани ями решаемой задачи. Поэтому приходится использова ть память большего объема, коэф фициент использования которой при решении разнообраз ных задач оказывается более низким, чем в системах с Принстонской архитектурой. Однако развит ие микроэлектронной тех нологии позволило в значительной степени преодолеть указанные недостатки, поэтому Гар вардская архитектура широко применяется во внутренн ей структуре современных высоко производительных микропроцессоров, где используется отдельная кэш -память для хране ния команд и данных. В то же время во внешней струк туре большинства микропроцессорных систем реализуются принципы Принстонской архитектуры. Гарвардская архитектура получила также широкое применение в микроконтроллерах – специализированных микропроцессорах для управления различными объектами, рабочая программа которых обычно хранится в отдельном ПЗУ. Архитектура DSP определяется несколькими базовыми операциями, которые используются в алгоритмах цифровой обработки сигналов (ЦОС). Для выделения таких операций проведем функциональный анализ основных направлений ЦОС, к которым относятся цифровая фильтрация и спектральный анализ. Поставив в соответствие каждой операции блок, можно получить обобщенную архитектуру DSP ( рис. Очевидно, что реали зация выделенных операций может быть различной.

Встроенные в МП средства отладки Следует отметить, что многие модели микропроцессоров и микроконтроллеров, вы пускаемых фирмой «Motorola», имеют специальный режим отладки BDM , при котором ре ализуется ввод команд, ввод/вывод данных, управление режимом работы процессора с помощью специального последовательного порта. Пр и его использовании микропроцес сор или микроконтроллер может работать в режиме эмуляции под управлением подключаемого к этому порту персонального компьютера. Режим BDM позволяет существенно облегчить процедуру комплексной отладки и использовать при этом более простые и дешевые средства.

34 VLIW (Very Large Instruction Word) – архитектура появилась относительно недавно – в 1990 -х годах.

59 способны управлять двумя, четырьмя и даже более идентичными устройствами. Интерфейс между контроллером и устройством является официальным стандартом (ANSI, IEEE или ISO) или фактическим стандартом, и различные компании могут выпускать отдельно котроллеры и устройства, удовлетворяющие данному интерфейсу. Так, многие компании производят диски, соответствующие интерфейсу IDE или SCSI, а наборы схем системной логики материнских плат реализуют IDE и SCSI-контроллеры. Интерфейс между контроллером и устройством часто является интерфейсом очень низкого уровня, т.е. очень специфичным, зависящим от типа внешнего устройства. Например, видеоконтроллер считывает из памяти байты, содержащие символы, которые следует отобразить, и формирует сигналы управления лучом электронной трубки, сигналы строчной и кадровой развертки и т.п. Каждый контроллер взаимодействует с драйвером (системным программным модулем), предназначенным для управления данным устройством. Для работы с драйвером контроллер имеет несколько регистров, кроме того, он может иметь буфер данных, из которого операционная система может читать данные, а также записыв ать данные в него. Каждому управляющему регистру назначается номер порта ввода-вывода. Используя регистры контроллера, ОС может узнать состояние устройства (например, готово ли оно к работе), а также выдавать команды управления устройством (принять или пер едать данные, включиться, выключиться и т.п.). Назначение, задачи и технологии подсистемы ввода-вывода. Обмен данными между пользователями, приложениями и периферийными устройствами компьютера выполняет специальная подсистема ОС – подсистема ввода -вывода. Собственно, для выполнения этой задачи и были разработаны первые системные программы, послужившие прототипами операционных систем. Основными компонентами подсистемы ввода -вывода являются драйверы, управляющие внешними устройствами, и файловая система. В ра боте подсистемы ввода -вывода активно участвует диспетчер прерываний. Более того, основная нагрузка диспетчера прерываний обусловлена именно подсистемой ввода -вывода, поэтому диспетчер прерываний иногда считают частью подсистемы ввода-вывода. Файловая систе ма – это основное хранилище информации в любом компьютере. Она активно использует остальные части подсистемы ввода вывода. Кроме того, модель файла лежит в основе большинства механизмов доступа к периферийным устройствам. На подсистему ввода-вывода возлагаются следующие функции:

Порты микроконтроллера выведены на внешние разъемы пла ты, что дает возможность подклю чать к ней различные п ериферийные устройства. На п лате расположен также программа тор, который позволяет переписывать отлаженную программу в ПЗУ микроконтроллера, используемого в прототипной системе. Два отдельных последовательных порта типа RS - 232 обеспечивают подключение к ней управляющего компьютера и монитора. Отладочная плата серии M68HC05EVM В режиме автономной отладки плата M68HC05EVM работает совместно с внешним монитором под управлением резидентного отладчика. При этом управление осуществляется с клавиатуры монитора, информация о состоянии системы выводится на экран его дисплея, отладка программы реализуется с помощью однострочного ассемблера -дисассемблера. При работе под управлением персонального компьютера может быть использован полный комплект программных средств проектирования/отладки. Имеющийся набор разнообразных плат развития помогает разработчику спроектировать и отладить макет или опытный обра зец системы, а в ряде случаев позволяет собрать рабочую систему из готовых модулей. При проектировании сложнофункциональных систем целесообразно использовать серийно вы пускаемые SBC и различные периферийные модули, ор иентированные на мезонинную тех нологию. Стандартизация этих изделий, их широкая номенклатура и высокие технические характеристики позволяют достаточно быстро собирать на их основе системы различного назначения. Для таких SBC и модулей имеется достаточн о развитое программное обеспече ние, что такж е упрощает и ускоряет создание системы, готовой для применения в реальных условиях. Поэтому платы развития, реализующие мезон инную технологию,

71  поле IOPL восстанавливается, если CPL = 0;  флаг IF изменяется, если CPL J IOPL. Когда прерывание обрабатывается через шлюз задачи, то процессор выполняет обычную процедуру переключения задач. При реализации некоторых исключений процессор заносит в сте к код ошибки. Индекс селектора (биты 15 -3) – указывает на дескрип тор, использование которого вызвало исключение. Биты IDT, TI указывают на таблицу, в которой находится неверный деск риптор. Бит IDT = 1, если дескриптор находится в таблице IDT. При значении бита IDT = 0 размещение дескриптора определяется битом TI: если TI = 0, то дескриптор находится в таблице GDT, если TI = 1 – в таблице LDT. Бит EXT = 1, е сли исключение вызвано не выпол няемой программой, а внешним сигналом прерывания. 2.2 Основные типы микропроцессорных систем Микропроцессорные системы решают различные задачи . Реализация специальных задач (вычисления с высокой точностью, обработка аналогового сигнала и т.д.) предъявляет особые требования к компонентам микропроцессорной системы. Для удешевления стоимости, повышения производительности МПС применятся различные сопроцессоры. 2.2.1 Сопроцессоры Сопроцессор – вспомогательный процессор, предназначенный для выполнения математических и логических действий. Использование сопроцессора позволя ет ускорить процесс обработки информации компьютером. Сопроцессор – специализированный процессор, расширяющий возможности центрального процессора компьютерной системы, но оформленный как отдельный функциональный модуль. Физически сопроцессор может быть отдельной микросхемой или может быть встроен в центральный процессор (как это делается в случае математического сопроцессора в процессорах для ПК , начиная с Intel 486DX). Вся деятельность сопроцессора определяется главным мик ропроцессором, который может посылать сопроцессору команды на выполнение программ и формирование результатов. В обычном режиме микропроцессор выполняет все функции компьютера. И лишь, когда встречается задача, с которой лучше

86 (функций типа SOP , Sum Of Products), но в одной CPLD имеется несколько ПМЛ (PAL, GAL), объединенных системой коммутации.

Программная модель внешнего устройства Интерфейс с изолированными шинами характеризуется раздельной адресацией памяти и внешних устройств при обмене информацией. Изолированный ВВ предполагает наличие специальных команд ввода/вывода, общий формат которых показан на рис. При выполнении команды ввода IN содержимое адресуемого входного регистра PORT пе редается во внутренний регистр REG процессора, а при выполнении команды OUT содержимое регистра REG передается в выходной порт PORT. В процессоре могут быть и другие команды, относящиеся к ВВ и связанные с проверкой и модификацией содержимого регистра управления и состояния. Команды ввода/вывода (общий формат) Нетрудно заметить, что в этом способе адресное пространство портов ввода и вывода изолировано от адресного пространства памяти, т.е. в ЭВМ один и тот же адрес могут иметь порт ВВ и ячейк а памяти. Разделение адресных пространств осуществляется с помощью управляющих сигналов, относящихся к системам ВВ и памяти (MEMRD# – считывание данных из памяти, MEMWR# – запись данных в память, IORD# – чтение порта ВВ, IOWR# – запись в порт ВВ) (# – активный низкий уровень сигналов).

49  формирование адреса следующей команды;  декодирование команды;  вычисление адресов операндов;  выборку операндов;  исполнение операции;  запись результата. Ввиду исключительного многообразия процессоров достаточно полная классификация их затруднительна. Формирование дополнительных сигналов управления микросистемой. Процесс выполнения любой команды состоит из последовательности функционально завершенных этапов е е обработки или машинных циклов, которые обыч но обозначаются как М1, М2, М3 и т.д. В каждом из циклов производится одно обращение микропроцессора к памяти или устройству ввода-вывода (исключение составляет команда DAD). В зависимости от типа команды, она может быть выполнена за один машинный цикл – M1, за два машинных цикла – М1 и М2, за три – М1, М2, М3 и т.д. Самые длинные по времени исполнения команды выполняются за пять циклов: М1, М2, М3, М4 и М5. Каждый цикл включает в себя несколько машинных тактов, обозначаемых Т1, Т2, Т3 и т.д. Различные цикл ы могут содержать от трех (Т1, Т2, Т3) до пяти (Т1, Т2, Т3, Т4, Т5) машинных тактов. Первые три такта во всех циклах используются для организации обмена с памятью и устройствами вводавывода, а такты Т4 и Т5, если цикл их содержит, – для выполнения внутренних операций в микропроцессоре. Все процессы обмена данными сопровождаются передачей управляющих сигналов. Количества сигналов, которые непосредственно формирует микропроцессор КР580ВМ80, недостаточно для нормального функционирования микросистемы. Поэтому организация управления осуществляется на двух уровнях. Микрокомандный уровень – управляющие сигналы меняются по времени от такта к такту внутри машинного цикла и в самих тактах. Макрокомандный уровень – управляющие сигналы формируются на основе допол нительной информации, выдаваемой процессором по шине данных в первом такте (Т1) машинного цикла. При этом формирование сигналов осуществляется вне микропроцессора, что позволяет обойти нехватку выводов интегральной схемы.

МЕТОДИЧЕСКИЙ ПОДХОД К МОДЕЛИРОВАНИЮ ПРИМЕНЕНИЯ КС В ИНТЕРЕСАХ ИНФОРМАЦИОННОГО ОБЕСПЕЧЕНИЯ ЦЕНТРОВ УПРАВЛЕНИЯ ВС РФ37ВОЕННАЯ МЫСЛЬ · № 1 — 2022 Рис. Инструментарий проектирования и разработки программных средств моделирования КСнала, позволяющего оперативно и качественно формировать проблемно ориентированное приложение для моделирования применения наземных и орбитальных группировок космических сил и средств, решающих различные военно-прикладные задачи, в соответствии с заданным исследовательским сценарием15.Ядром инструментария является созданная по принципу «обобщенного программирования» библиотека классов, включающая шаблоны классов и функций (математических методов

8 Является преемником семейства Intel Core 2 . Идентификатор Core i7 применяется и к первоначальному семейству процессоров с рабочим названием Bloomfield. Название Core i7 не показывает поколение процессора, оно лишь продолжает испо льзовать успешную серию брендов Core. Данное семейство характеризуется следующими характеристиками частота процессора: 1 ,07–4,2 ГГц; технология производства: 45–22 нм; число ядер: 2, 4, 6 или 8; скорость QPI: 4,8 –6,4 ГП/с. В сентябре 2014 года п оявился процессор Core i7 -5960X с архитектурой Haswell-E, который производится по 22 нм технологии, содержит 8 ядер, 20 Мб кэш, потребляет 140 Вт, предназначен для работы с чипсетом LGA 2011 -v.3. Новейшая микроархитектура Intel на базе 14 -нм производственной технологии обеспечивает заметное улучшение рабочих характеристик таких , как производительность, качество графики, время автономной работы и безопасность. Основным конкурентом Intel на мировом рынке является компания Advanced Micro Devices.

94 программируемой структурой), а компиляция п рограммной части проекта приводит к синтезу кодового представления программ. Полученные результаты требуют тщательной провер ки, поэтому за этапом синтеза следует этап верификации, проводимого моделированием и/или реальными экспериментами. Моделирование, ка к правило, имеет несколько уровней с разной степенью отображения свойств реального о бъекта. Оно может быть функцио нальным, проверяющим правильность логической структуры устройства или программы, временным, учитывающим задержки сигналов в схемах устройства без учета окончательной топологии трассировки или время исполнения отдельных программных фрагментов и т. В результате верификации могут выявиться ошибки, требующие исправления, что придает процессу проектирования итеративный хара ктер с возвратами к преж ним эта пам и введением в проект нужных коррекций. Более того, по мере отработки решений по отдел ьным ветвям проектирования отра батываются и вопросы связи между этими ветвями (например, между программной и аппаратной частями проекта), хотя комплексный анал из и отладка могут быть выполне ны только после завершения отдельных ветвей процедуры проектирования. Естественно, такое последовательное проектирование является условным. В реальных условиях выполняется последовательно-параллельное проектирование с многокра тными итерационными возвратами к началу проектных процедур. Завершение этапов проектирования по отдельным ветвям создает исходные данные для завершающего конструкторско -технологического этапа проектирования, результатом которого станет создание реальной си стемы. Физическая реализация проекта в свою оче редь создает основу для комплексной отладки решений, полученных на отдельных ветвях проектирования. Однако для экспериментальной проверки совсем не обязательно ждать реализации будущей системы целиком. Возможн а практическая проверка либо всего устройства, либо его отдельных фрагментов с использованием предлагаемых различными фирмами спе циальных отладочных средств. Названия таких средств в целом отражают их целевую направленность. Спектр отладочных средств включ ает средства, предназначенные для предварительного знакомства с БИС рассматриваемого класса (называемых Starter Kit), средства для отладки прикладных проектных решений (называемые Evaluation Board или Development Board) и, наконец, средства, используемые на начальных этапах выпуска готовой продукции и замещающие об орудование, которое еще нахо дится на этапах конструкторско -технологической разработки (называемых Prototype Plate).

ШВЕЦОВ32 СЛОВО ЮБИЛЯРАМВ условиях интенсивного развития космических систем (КС) объективной необходимостью их согласованного применения в составе более сложных организационно-технических систем (группировок войск, информационно-ударных систем и др.) актуальность разработки и совершенствования средств моделирования применения КС как при их непосредственном создании, так и в составе автоматизированных систем управления (АСУ) военного назначения (ВН) не вызывает сомнений.При создании и применении КС различной ведомственной принадлежности в целях подтверждения заявленных тактико-технических характеристик достаточно широко используются специализированные средства математического и программного обеспечения. Однако, как показывает практика военно-научного сопровождения специального программного обеспечения (СПО), используемого в органах военного управления (ОВУ), научно-исследовательских организациях (НИО) Минобороны России и организациях промышленности, оно не согласовано по целевым показателям, заложенным математическим моделям и алгоритмам, а также формам представляемых результатов.В настоящее время на комплексах средств автоматизации (КСА) центров управления (ЦУ) Вооруженных Сил РФ установлено аттестованное и принятое на вооружение СПО, позволяющее моделировать отдельные задачи применения КС. Для критически важных элементов СПО выполняется комплекс мероприятий программно-алгоритмического обеспечения с целью поддержания моделей и алгоритмов в состоянии, обеспечивающем автоматическое (автоматизированное) решение функциональных задач, надежное управление средствами вооружения и устойчивый информационный обмен с взаимодействующими средствами вооружения. При этом на должностных лиц (ДЛ) возлагаются задачи алгоритмизации и программирования новых актуальных оперативно-тактических и вспомогательных задач. Однако в рамках решения перечисленных направлений деятельности взаимодействие между разработчиками СПО, ОВУ и НИО МО РФ, осуществляющими военно-научное сопровождение разработки СПО, не налажено3.Вместе с тем отсутствие программно-реализованных функциональных задач аналитической обработки информации в ОВУ приводит к тому, что командующие и их штабы даже при значительном располагаемом времени не могут объективно выполнить качественный анализ состава и возможностей КС и, следовательно, правильно оценить складывающуюся обстановку, найти и принять рациональное решение.Таким образом, в условиях создания в ВС РФ системы моделироваАНАЛИЗ результатов теоретических и прикладных научно-исследовательских работ показывает, что для формирования и реализации требований к перспективным образцам вооружения и военной техники необходимо разрабатывать не только комплексы математических программно-реализованных моделей, но и совершенствовать сами технологии моделирования. В связи с этим в Вооруженных Силах Российской Федерации необходимо внедрять единые научно-методические подходы и унифицированные программно-технические средства1,2.

101  целевые платы (target board) – программно-аппаратные комплексы, ориентированные на использование после отладки в качестве прототипной системы (рис. MX Educational Target Board (TSTR002) – целевая плата для подключения модулей серии MX от Stratford Digital Целевая плата совместно с процессорным модулем образует полнофункциональную отладочную платформу для образовательных и учебных целей, а также для быстрого прототипирования. Целевая плата содержит большую область для маке тирования, средства для организации пользовательского интерфейса и коммуникационные порты. Возможность увеличения количества коммуникационных интерфейсов позволяет разрабатывать различные приложения, требующих наличия различных коммуникаций.  одноплатные ко мпьютеры и контроллеры (single-board computer, controller) - конструктивные комплексы, предназначенные для использования в качестве базовых модулей при реализации целевых систем промышленного применения. 2.19) имеют все интерфе йсы, необходимые встраиваемым системам, большое количество интерфейсов для хранения данных (Memory Stick, PC card, Compact Flash и SD Card), встроенный LCD контроллер, ведущие и ведомые USB -устройства, реализуют полную поддержку спецификации для работы со звуком AC’97. Имеется контроллер сети 100 Мбит Ethernet. В самой ближайшей перспективе появится компьютер с двумя Ethernet интерфейсами на борту.

Всего через год на его базе был создан персональный компьютер IBM PC/AT, предоставивший в распоряжение пользователя вычислительные мощности средней ЭВМ. С появлением виртуального режима стало возможным создавать на базе 80286 системы с ра зделением ресурсов, что раньше было прерогативой больших машин. В микропроцессоре было также реализовано управление памятью.

1.5), то важно использовать так называемые маски, которые пропускают излучение высокой интенсивности только на определе нные участки. Маски можно сравнить с че рно-белым негативом. Интегральные схемы имеют множество сло ев (20 и больше), и для каждого из них требуется своя маска. Подложка с нанесенными слоями ИС Структура из тонкой хромовой пл енки наносится на поверхность пластины из кварцевого стекла, чтобы создать шаблон. При этом дорогие инструменты, использующие поток электронов или лазер, прописывают необходимые д анные интегральной схемы, в результате чего мы получаем шаблон из хрома на поверхности кварцевой подложки. Важно понимать, что каждая модификация интегральной схемы приводит к необходимости производства новых масок, поэтому весь процесс внесения правок оче нь затратный. Для очень сложных схем маски создаются весьма долго. С помощью фотолитографии (рис. 1.6) на кремниевой подложке формируется структура. Процесс повторяется несколько раз, пока не будет создано множество сло ев (более 20). Слои могут состоять из разных материалов, прич ем, нужно ещ е и продумывать соединения микроскопическими проволочками. Процесс фотолитографии Перед тем, как начн ется процесс фотолитографии, подложка очищается и нагревается, чтобы удалить липкие частицы и воду. Затем подложка с помощью специального устройства покрывается диоксидом кремния.

98 операционных си стем реального времени (ОСРВ) или со здавать собственные программы-мониторы реального времени с помощью указанных выше средств программирования. В составе многих ОСРВ имеются средства подд ержки программирования, которые могут использоваться при проектировании/отладке системы. Таким образом, при создании программного обеспеч ения микропроцессорных и микро контроллерных систем разработчик имеет следующие возможности:  использовать набор отдельных средств поддержки программирования (ассемблер или компилятор, симул ятор, отладчик), которые предлагаются рядом фирм-производителей;  выполнять программирование и отладку с помощью интегрированной среды разработки (development environment);  разрабатывать программное обеспечение с помощью средств поддержки, имеющихся в составе ОСРВ, которая используется в проектируемой системе. В настоящее время программирование и отладка чаще всего выполняются с помощью интегрированной среды развития или средств ОСРВ. Программирование производится обычно с помощью кросс -средств, инсталлированных на инструментальном компьютере с мощной операционной системой.

2.3 Средства отладки и программирования микропроцессорных систем Микроэлектронный подход к проектированию и производству электронной техники позволяет сократи ть число объектов состава, снижать затраты по производству и эксплуатации, по вышать надежность, улучшать функциональные показатели аппаратуры. Вследствие этого, направление проектирования и производства ИМС продолжает развиваться. Опыт организации проекти рования и производства изделий точного машиностроения, и ИМС в частности, позволил выработать типовые подходы, которые нашли отражение в нормативных актах:  производственных предприятий;  ведомств и отраслей;  государственного уровня. Важность применения типо вых подходов в подготовке и согласовании заданий на проектирование новых микросхем, соблюдения определенной последовательности выполнения работ по проектированию, запуску новых изделий на производство подчеркивается государственным уровнем стандартов в этой сфере. Требования к составу и изложению технического задания на проектирование нового изделия установлены ГОСТ 15001. Стандартом ГОСТ 2103 установлены следующие стадии разработки проектной документации:  техническое предложение (П);  эскизный проект (Э);  технический проект (Т).

31 Функционирование процессора представляется в виде реал изации регистровых пересылок – процедур изменения состояния этих регистр ов путем чтения-записи их содер жимого. В результате таких пересылок обеспечивается адресация, выбор команд и опе рандов, хранение и пересылка результатов, изменение последовательности к оманд и режимов функционирования процессора в соответст вии с поступлением нового содер жимого в служебные регистры, а также все другие процедуры, реализующие процесс обработки информации согласно заданным условиям. В ряде процессоров выделяются регистры, ко торые используются при выполнении прикладных программ и доступны каждому пользовате лю, и регистры, которые управля ют режимом работы всей системы и доступны только для привилегированных программ, входящих в состав операционной системы (супервиз ора). Соответ ственно, такие про цессоры представляются в виде регистровой модели пользователя, в которую входят регистры, используемые при выполнении прикладных программ, или регистровой модели супервизора, которая содержит весь набор про граммно-доступных регистров процессора, используемых операционной системой. Архитектура и структура микропроцессора тесно взаимосвязаны. Реализация тех или иных архитектурных особенностей требует введения в структуру микропроцессора необходимых аппаратных средств (устройств и блоков) и обеспечения соответствующих механизмов их совместного функционирования. В современных микропроцессорах реализуются следующие варианты архитектур. CISC (Complex Instruction Set Computer) – архитектура реализована во многих типах микропроцессоров, выполняющих большой набор разноформатных команд с исполь зованием многочисленных способов адресации, Эта классическая архитектура процессоров, которая начала свое развитие в 1940 -х годах с появлением первых компьютеров. Типичным примером CISCпроцессоров являются микр опроцессоры семейства Pentium. Они выполняют более 200 команд разной степени сложности, которые имеют размер от 1 до 15 байт и обеспечивают более 10 различных способов адресации. Такое большое многообразие выполняемых команд и способов адресации позволяет программисту реализовать наиболее эффективные алгоритмы решения различных задач. Однако при этом существенно усложняется структура микропроцессора, особенно его устройства управления, что прив одит к увеличению размеров и стоимости кристалла, снижению произ водительности. В то же время многие команды и способы адресации используются достаточно

Несмотря на некоторые отличия по имеющимся

29 F1, F2 – тактовые синхронизирующие импульсы. Для микропроцессора 580ВМ80 требуется двухфазная последовательность неперекрывающихся импульсов амплитудой 12 вольт. Частота их должна лежать в диапазоне от 500 КГц до 2,5 МГц (период от 400 до 2 мкс). Нижняя гра ница частоты связана с тем, что регистры этого процессора являются динамическими и при более низкой частоте не выполняются условия регенерации. Верхняя частота ограничена быстродействием элементов схемы процессора. С (SYNC) – синхронизация (выходной сигнал). Импульс вырабатывается процессором на один такт в начале каждого цикла обращения к памяти. DBIN – прием (выходной сигнал). Буфер данных установлен на ввод. Во время действия этого сигнала процессор принимает (считывает) информацию из внешней шины данных. WR – запись (выходной сигнал). Низкий уровень сигнала указывает на то, что процессор выводит (записывает) информацию. Буфер данных установлен на вывод. READY – готовность (входной сигнал). Высокий уровень означает, что все устройства, подключенные к шинам процессора готовы к обмену информацией. При низком уровне этого сигнала процессор останавливается (переходит в состояние ожидания готовности), сохраняя все сигналы в состоянии ввода или вывода, в зависимости от выполняемого цикла. WAIT – ожидание (выходной сигнал). Высокий уровень означает, что процессор находится в состоянии ожидания готовности. Является ответным на сигнал READY. HOLD – захват (входной сигнал). При поступлении высокого уровня на вход HOLD процессор заканчивает цикл обращения к памяти и п ереводит буферы шин данных и адреса в состояние высокого импеданса т.е. HLDA – подтверждение захвата (выходной сигнал). Высокий уровень означает, что процессор находится в состоянии захвата. Устройства, подавшее сигнал HOLD, может занимать шины системы. INTE – разрешение прерываний (выходной сигнал). Высокий уровень означает, что процессор находится в состоянии, при котором он воспринимает внешние прерывания. Может устанавливаться и сбрасываться программно. INT – запрос прерывания (входн ой сигнал). При поступлении высокого уровня процессор заканчивает выполнение команды и начинает особый цикл чтения, во время которого устройство, подавшее запрос должно сообщить процессору адрес подпрограммы обслуживания данного устройства. Получив адрес, процессор переходит к подпрограмме, расположенной по этому адресу. Сигнал INTE при этом сбрасывается.

В каче стве языков высокого уровня чаще всего исполь зуются С, C++. Некоторыми фирма ми поставляются также компиляторы для языков

64 количества разных драйве ров, обеспечив при этом время реакции каждого драйвера на независимые события контролеров внешних устройств. С другой стороны, необходимо минимизировать загрузку процессора задачами ввода вывода. Решение этих задач достигается на основе многоуровневой прио ритетной схемы обслуживания прерываний. Для обеспечения приемлемого уровня реакции все драйверы распределяются по нескольким приоритетным уровням в соответствии с требованиями по времени реакции и временем использования процессора. Для реализации приоритет ной схемы задействуется общий диспетчер прерываний ОС. Подключение внешних устройств к системной шине осуществляется посредством электронных схем, называемых контроллерами ВВ (интерфейсами ВВ). Они согласуют уровни электрических сигналов, а также преобразу ют машинные данные в формат, необходимый устройству, и наоборот. Обычно контроллеры ВВ конструктивно оформляются вместе с процессором в виде интерфейсных плат. В процессе ввода/вывода передается информация двух видов: управляющие данные (слова) и собственн о данные, или данные -сообщения. Управляющие данные от процессора, называемые также командными словами или приказами, инициируют действия, не связанные непосредственно с передачей данных, например запуск устройства, запрещение прерываний и т.п. Управляющие данные от внешних устройств называются словами состояния; они содержат информацию об определенных признаках, например о готовности устройства к передаче данных, о наличии ошибок при обмене и т.п. Состояние обычно представляется в декодированной форме - один бит для каждого признака. Регистр, содержащий группу бит, к которой процессор обращается в операциях ВВ, образует порт ВВ. Таким образом, наиболее общая программная модель внешнего устройства, которое может выполнять ввод и вывод, содержит четыре регистр а ВВ: регистр выходных данных (выходной порт), регистр входных данных (входной порт), регистр управления и регистр состояния ( рис. Каждый из этих регистров должен иметь однозначный адрес, который идентифицируется дешифратором адреса.

14 Основу современной цифровой электроники составляют полупроводниковые интегральные схемы. Подложка с размещенными на ней интегральными схемами Широкое распространение получили следующие полупроводниковые ИС:  биполярные;  МДП (МОП) – металл-диэлектрик (окисел)-полупроводник;  БиМОП – сочетание двух первых типов. Расположение p–n-переходов на границах слоев Технология полупроводниковых ИС основана на легировании полупро водниковой (кремниевой) пластины поочередно донорными и акцепторными примесями, в ре зультате чего под поверхностью образуются тонкие слои с разным типом проводимости и p –n-переходы на границах слоев (рис. Отдельные слои используются в качестве резисторов, а p –n-переходы – в диодных и транзисторных структурах. Легирование осуществляе тся локально с помощью специальных масок с отверстиями, через которые атомы примеси проникают в пластину на нужных участках. Роль маски обычно играет пленка двуокиси кремния SiO 2,

Простые ИС с программир уемой логикой (ИС ПЛ), обозначаемые в совокупности как PLD (Programmable Logic Devices), делятся на микросхемы программируемой матричной логики ПМЛ (PAL, Programmable Array Logic) и микросхемы программируемых логических матриц ПЛМ (PLA, Programmable

58 блок может быть прочитан независимо от остальных блоков. Символьные устройства принимают или передаю т поток символов без какой -либо блочной структуры (принтеров, сетевых карт и т.д.). Однако некоторые из устройств не попадают ни в одну из этих категорий, например, часы, мониторы и др. И все же модель блочных и символьных устройств является настолько обще й, что может использоваться в качестве основы для достижения независимости от устройств некоторого программного обеспечения операционных систем, имеющего дело с вводом -выводом. Например, файловая система имеет дело с абстрактными блочными устройствами, а з ависимую от устройств часть оставляет программному обеспечению низкого уровня. Следует также отметить существенные различия между устройствами ввода вывода, принадлежащими к разным классам, и в рамках каждого класса. Эти различия касаются следующих характеристик:  скорость передачи данных (различия на несколько порядков);  применение. Каждое действие, поддерживаемое устройством, оказывает влияние на программное обеспечение и стратегии операционной системы (например, диск, используемый для хранения файлов или для страниц виртуальной памяти, требует различного программного обеспечения);  сложность управления. Для принтера требуется относительно простой интерфейс управления, для диска – намного сложнее. Влияния этих отличий на ОС сглаживается усложнением контроллеров ввода-вывода;  единицы передачи данных. Данные могут передаватьс я блоками или потоками байтов или символов;  представления данных. Различные устройства используют разные схемы кодирования данных, включая разную кодировку символов и контроль четности;  условия ошибки. Природа ошибок, способ сообщения о них, их последствия и возможные ответы резко отличаются при переходе от одного устройства к другому. Такое разнообразие внешних устройств приводит, по сути, к невозможности разработки единого и согласованного подхода к проблеме ввода -вывода как с точки зрения операционной си стемы, так и с точки зрения пользовательских процессов. Устройства ввода -вывода, как правило, состоят из электромеханической и электронной части. Обычно их выполняют в форме отдельных модулей – собственно устройство и контроллер (адаптер). В ПК контроллер принимает форму платы, вставляемой в слот расширения. Плата имеет разъем, к которому подключается кабель, ведущий к самому устройству.

53 строб WR , обеспечивая запись данных по низкому потенциалу. Этот сигнал переключается по завершении такта, по фронту С1 (|С1). В тактах Т4 и Т5 микропроцессор выполняет внутренние операции, несвязанные с обращением к системной магистрали. Если, конечно, эти т акты вообще присутствуют в машинном цикле.

28 CY – перенос, устанавливается, если в результате операции произошел перенос из старшего или младшего разрядов. Это может быть, например, если в результате сложения двух чисел результат выходит за пред елы 8 битов. Аналогично при вычитании этот флаг устанавливается, если из меньшего числа вычитается большее (произошел заем). Формат регистра флагов микропроцессора 580ВМ80 (X неиспользуемые биты) Z – нуль, устанавливается, если результат операции является нулевым. S – знак, устанавливается, если старший бит результата равен 0. Напомним, что в дополнительном двоичном коде старший разряд является знаковым и 1 означает знак минус. Р – четность, устанавливается, если результат имеет четное число единиц. АС – дополнительный перенос, устанавливается, если при сложении двух чисел произошел перенос из третьего разряда в четвертый. Подчеркнем еще раз, что флаги изменяются после выполнения операции в АЛУ, т.е. индицируют результат, но не признак исходных операндов. Существуют процессоры, в которых механизм изменения флагов иной. Блок управления (устройство управления) предназначен для организации всего процесса выполнения команд. Функционально он представляет собой синхронный цифровой автомат, тактируемый внешними тактовыми импульсами F1 и F2. На первом этапе выполнения команды код ее считывается из памяти и помещается в регистр команд. Биты этой команды являются входными управляющими сигналами автомата на этом шаге его работы. В зависимости от этих сигнал ов автомат, переходя под действием тактовых импульсов из одного состояния в следующее, формирует внешние и внутренние сигналы управления, необходимые для выполнения команды. На определенных шагах этого процесса анализируются некоторые внешние входные сигна лы, а также флаги из регистра флагов операционного блока. После необходимого числа шагов автомат возвращается в исходное состояние и считывается следующая команда. Дадим краткую характеристику и назначение внешних входных и выходных управляющих сигналов.

Недорогие программаторные платы M68HC05PGMR, M68HC705xxPGMR выпускаются фирмой « Motorola» для семейства М68НС705, M68HC11SPGMR, М68НС71 lxxPGMR-для семейства М68НС711. Программаторные платы производятся для этих семейств также фирмой « Nash Electronics» (Model N6804, N705-1, N705-2, N805-2, NHC11) и рядом других.

44 разрядов значением старшего (знакового) разря да. Поэтому при тако м сдвиге сохраняется знак операнда. Два варианта циклических сдвигов выполняются с включением признака С в цепь переноса (команды RCL, RCR) или с использованием признака С для хранения последнего выдвигаемого разряда операнда (команды ROL, ROR). Реализация команд сдвига При выполнении арифметических, логических операций И сдвигов обычно производится установка признаков в регистре состояний в соответствии с полученным результатом. Команды сравнения и тестирования. Сравнение операндов обычно осуществляется с помощью команды СМР, которая производит вычитание операндов с установкой значений признаков N, Z, V, С в регистре состояния в соответствии с полученным результатом. При этом результат вычитания не сохраняется и значения оп ерандов не изменяютс я. Последую щий анализ полученных значений признаков позволяет определить относительное значение (>,<, = ) операндов со знаком или без знака. Использование различных способов адресации позволяет производить сравнение содержимого двух регистров, регистра и я чейки памяти, непосредственно заданного операнда с содержимым регистра или ячейки памяти. Некоторые микропроцессоры выполняют команду тестирования TST, которая является однооперандным вариантом команды сравнения. При выполнении этой команды устанав ливаются признаки N, Z в соответствии со знаком и значением (равно или не равно нулю) адресуемого операнда. Эти команды производят установку значения признака С в регистре состояний в соответствии со значением тестируемого бита bn в адресуемом операнде. В некоторых микропроцессорах по результату тестирования бита производится установка признака Z.

112  Две руки, две ноги, туловище и голова.  28 приводимых в действие гидравлических суставов.  Голова с сенсорами и лазерным локатором.  Два набора кистей рук, один от iRobot и один от Sandia National Labs. Внешний вид робота Атлас, его головы и манипулятора Рис.

95 ресурсам и предлагае мым возможностям, любая плата позволяет производить либо изменение программного обеспечения МП, либо конфигурирование микросхем с программируемой структурой и выполнять желаемые эксперименты. При успешном завершении экспериментальных ра бот файлы с программным обеспечением или конфиг урационные файлы могут использоваться либо для изготовления требуемых программируемых БИС, либо для записи в со ответствующие виды ПЗУ. Файлы отчетов о результатах компиляции обычно содержат информацию о конкретных данных по монтированию проекта в реальную систему или БИС. Поэтому уже после этапа компиляции проектов возможен переход к технологичес кой реализации проекта, например, проектированию топологии печатных плат, являющихся, как правило, конечной продукцией проектирования. Ввиду легкости перепрограммирования как программной части проекта, так и аппаратной, этап экспериментальных работ с проектом может быть отложен до завершения конструкторской разработки печатной платы. Даже значительные изменения схемы обыч но не влекут за собой столь катастрофических последствий, как в случаях использования жесткой стандартной логики. Наличие у фирм-разработчиков БИС с программируемыми свойствами различной логической мощности с совпад ением общего числа выходных контактов, их функционального назначения и распол ожения делает модификацию проектов вопросом скорее экономическим (более мощные БИС стоят дороже), чем техническим. Поэтому экспериментальные работы целесообразно п роизводить на различных отладоч ных прототипных системах исключительно для ускоре ния общего пр оцесса проектирова ния, поскольку в этом случае для разрабатываемых БИС удается совместить во времени этапы конструкторской разработки и экспериментальных работ. Итерационные возвраты к повторным процедурам ко мпиляции в ходе конструкторско-технологического этапа проектирования возникают в то м случае, если целесообразно из менить месторасположение входных и/или выходных к онтактов БИС ПЛ, исходя из сооб ражений более эффективной разводки соединений БИС на печатной плате как между со бой, так и их подключения к вы ходным разъемам печатной платы. Подобная возможность следует из способности современных БИС ПЛ обеспе чивать различные варианты монтирования одного и того же проекта в одну и ту же БИС.

111 Заключение В данном учебном пособии были рассмотрены основные понятия, раскрывающие сущность микропроцессоров и микропроцессорных систем. Такие как, структура и архитектура МП и МПС, семейства, подсистемы и их взаимодействие. Кроме того, были рассмотрены вопросы , связанные с проектирование и разработкой новых микропроцессорных систем, со средствами их отладки. Изложенный в данном учебном пособии материал позволяет получить общее представление о микропроцессорных системах. Для того, чтобы самостоятельно разрабатывать мик ропроцессорные устройства, необходимо более глубоко изучать конкретные семейства микропроцессоров и микроконтроллеров, а также средства разработки и отладки проектов на их основе. Микропроцессорная техника постоянно развивается, становится более миниатюрной, производительной, надежной, снижается потребляемая мощность и стоимость. Фактически каждая область человеческой жизни в той или иной степени сопряжена с микропроцессорными системами. Особую роль микропроцессорная техника занимает в деятельности вооруженных сил, так как автоматизация деятельности является магистральным направлением развития военных систем. В последние годы большое значение уделяется развитию автономных систем – роботов, беспилотных летательных аппаратов и т.д. В 2013 году американское аге нтство DARPA представ ило робота Атлас (рис. Атлас включает в себя аппаратные средства различных робототехнических компаний. Boston Dynamics построила большую часть робота: туловище, руки, ноги и ступни ног. Голова построена Carnegie Robotics и снабжена сложными датчиками, разработанными для того, чтобы дать роботу объемное (3D) представление об окружающей его среде, включая лазерный локатор. Робот будет оборудован двумя различными парами кистей рук. Одна пара разработана робототехнической компанией iR obot , а другая – Sandia National Labs. Таким образом, у Атласа одна кисть руки может быть от iRobot , а другая – от Sandia National Labs. Краткие технические характеристики робота Атлас.  Бортовой компьютер управления в реальном времени.  Бортовой гидравлический насос и тепловое управление.  Кабель для передачи 480 -вольтового трехфазного напряжения питания 15 кВт и для связи с роботом.

79 Функция цифроаналогового преобразователя реализуется средствами модуля программируемого таймера. На одном из выводов МК формируется высокочастотная им пульсная последовательность с регулируемой длительностью импульса. Полученный сигнал сглаживается фильтром нижних частот на операционном усилителе (рис. Разрешающая способность такого ЦАП определяется дискретностью регулиров ания коэффициента заполнения у в режиме ШИМ. Немногие модели 8 -разрядных МК способны реализовать у с дискретностью более 8 разрядов (табл. Этим вызвана необходимость применения внешних ИС ЦАП. Кроме того, частота ШИМ сигнала определяет время преобраз ования ЦАП, этим объясняется особая привлекательность МК с частотой ШИМ в десятки килогерц. ЦАП на основе ШИМ-генератора (а - функциональная схема; б - временные диаграммы работ) 2.2.3 Сигнальные и медийные микропроцессоры Сигнальные микр опроцессоры (МП цифровой обработки сигналов) рассчитаны на обра ботку в реальном времени потоков данных, образованных путем оцифровывания аналоговых сигналов. К их особенностям относятся: малоразрядная (40 разрядов и менее) обработка чисел с плавающей точко й; преимущественное использование чисел с фиксированной точкой разрядности (32 и менее); ориентация на несложную обработку больших массивов данных. Отличительной особенностью задач цифровой обработки сигналов является поточный характер обработки больших об ъемов данных в реальном мас штабе времени, требующий от тех нических средств высокой производительности и обеспечения возможности интенсивного обмена с внешними устройствами.

ШВЕЦОВ36 СЛОВО ЮБИЛЯРАМ• поддержание установленных характеристик глобального навигационного поля ГЛОНАСС;• навигационно-временное обеспечение, специальные и другие задачи.При применении КС в интересах информационного обеспечения группировки войск на театре военных действий в СПО КСА ЦУ оперативно-стратегического командования (ОСК) решаются следующие задачи12:• временное обеспечение применения оружия;• обеспечение выдачи геопространственных и метеорологических данных;• организация и поддержание круглосуточной непрерывной спутниковой связи;• организация мероприятий маскировки войск.Учитывая межвидовую специфику применения КС, функциональные задачи моделирования КС в ЦУ ВС РФ подразделяются на задачи КВ, задачи ОСК и комплексные задачи, решаемые в интересах КВ и ОСК.Содержательно моделирование КС также может представляться не только как решение задачи обоснования рационального состава орбитальных и наземных группировок («синтез КС»), но и как решение задачи оценивания возможностей КС заданного состава («анализ КС») и их вклада в эффективность применения войск и оружия13,14.Опыт применения КСА в практической деятельности показывает, что важнейшей задачей развития СПО КСА ЦУ ВС РФ является объединение организационных, технических и информационных ресурсов военных и гражданских организаций в единую технологию моделирования КС.Направлениями внедрения технологий моделирования КС являются:• информационное обследование ЦУ ВС РФ в целях определения уровня автоматизации деятельности ДЛ ОВУ и проблемных вопросов применения СПО;• анализ потребностей ОВУ в математических моделях предметной области применения КС;• информационная поддержка неавтоматизированных функций ДЛ ЦУ ВС РФ с использованием программно-реализованных моделей, разработанных в НИО МО РФ;• согласование и калибровка моделей ОВУ , НИО МО РФ и организаций промышленности, реализующих схожие функциональные задачи;• поддержание в актуальном состоянии баз реальных и условнореальных данных для применения математических моделей;• тестирование математических моделей при переводе СПО на современные, в том числе отечественные, аппаратно-программные платформы;• проверка эргономической эффективности диалоговых интерфейсов СПО и технических средств КСА ЦУ ВС РФ.В целях обеспечения обработки реальной и условно-реальной информации в СПО ЦУ ВС РФ и программных комплексах НИО МО представляется необходимым разработка положений и протоколов информационно-технического взаимодействия, обеспечивающих взаимный обмен исходными данными, сценариями применения КС и результатами моделирования.В качестве примера реализации подхода к разработке компьютерных моделей КС можно привести инструментарий моделирования, разработанный в Военно-космической академии имени А.Ф. Можайского и применяемый при выполнении НИОКР в области создания и применения космических систем военного и двойного назначения (рис.). Основным направлением применения инструментария является предоставление разработчику программно-реализованного функцио-

56 адреса, обеспечивающую обращение к памяти объе мом до 64 Гбайт. Отметим, что в ряде микропроцессоров, например в Pentium, вместо младших разрядов адреса формируются сигналы выборки соответствующих байтов (сиг налы байтной выборки BEi, где i – номер байта), которые позволяют организовать хранение байтов в отдельных банках памяти. Во многих микропроцессорных системах передача адреса и д анных сопровождается посылкой контрольных битов четности, которые обеспечивают выявление возможных ошибок, возникающих в процессе обмена. При этом обычно реализуется побайтный контроль четно сти, при котором каждый байт адреса или данных сопровождается дополнительным ( девятым) контрольным битом, поступающим на отдельный вывод микропроцессора. В некоторых системах для уменьшения числа необхо димых линий связи и соответствующих выводов и контактов используется мультиплексирование линий адреса и данных. В таких системах для передачи адреса и данных используются одни и те же линии связи, н а которые сначала выдается адрес, а затем поступают данные. Например, 16 -разрядные микроконтроллеры семейства MCS -196, выпускаемые ко мпанией Intel, имеют мультиплек сированную 16 -разрядную шину адреса данных AD. Обмен информацией по мультиплексированной ши не AD требует введения отдельного рег истра для хранения адреса в про цессе пересылки данных. При этом требуется также дополнительное время для реализа ции обмена, что несколько снижает производительность системы. Разрядность шины управления С определяется о рганизацией работы системы, воз можностями реализации различных режимов ее функционирования, используемыми ме тодами контроля микропроцессора и других устройств. Поэтому набор передаваемых по шине С управляющих сигналов является индивидуал ьным для каждой моде ли микропро цессора. Имеется ряд управляющих сигналов, которые используются в большинстве микропроцессорных систем. К ним относятся сигналы на чального запуска (RESET), сигна лы, задающие режим работы памяти (чтение – RD, запись – WR), сигналы, необходимые дл я реализации прерываний и ряд других. В простых системах для передачи управляю щих сигналов может использоваться всего несколько линий, а в сложных системах число этих линий составляет несколько десятков. В процессе функционирования микропроцессорной систем ы реализуются следующие основные режимы ее работы:  выполнение основной программы;  вызов подпрограммы;  обслуживание прерываний и исключений;

41 При этом содержимое регистра, хранящего адрес, автоматически увеличивается на n (здесь n = 1, 2 или 4 – число байтов операнда) после его выборки (пост инкремент) или уменьшается на n перед выборкой операнда (пре декремент). Такая адресация удобна при обработке массивов данных, расположенных в памяти. В некоторых микропроцессорах реализуется относительная адресация с индекси рованием (аналогична косвенно -регистровой с индексированием и смещением). В микропроцессорах Pentium выполняется косвенно-регистровая адресация с индексированием и смещением, где возможно масштабирование – умножение содержимого индексного реги стра на заданный в команде множитель. 1.2.3 Система команд микропроцессора Команды микропроцессора бывают безадресными, одноадресными и двухадресными (редко можно встретить трехадресные). Безадресными являются команды, для выполнения которых не требуется операнд (например, команда останова HALT) или размещени е операнда определяется структурой микропроцессора и задается непосредственно кодом операции. Например, в микропроцессорах, использующих регистр аккумулятор, выполнение ряда команд над одним операндом предполагает, что он размещается в этом регистре. Одноадресные команды содержат адрес одного операнда. Эти команды используются для выполнения операций над одним операндом, например, сдвигов, логической инверсии, изменения знака и ряда других. В микропроцессорах с аккумулят орной организа цией обработки данных такие команды служат также для в ыполнения операций над дву мя операндами, один из которых находится в аккумуляторе. В двухадресных командах содержатся адреса двух операндов. Если при этом один из операндов выбирается из п амяти, то другой операнд хранится в регистре (регистровая адресация) или содержится непосредственно в команде (непосредственная адресация). Результат операции записывается на место одного из операндов, значение которого при этом теряется. Следует отметить, что в некоторых типах микропроцессоров реализуются также трехадресные команды, где задаются отдельные адреса размещения двух операндов и результата операции. Такие команды используют только регистровую адресацию и выполняются в микропроцессорах с RISCархитектурой, имеющих значительный объем РЗУ, например, в PowerPC. Микропроцессоры выполняют набор команд, ко торые реализуют следующие основные группы операций:

36 достигается при максимальной аппаратной поддержке операций, что приводит к значительным аппаратным затратам. Это обстоятельство, а также желание обеспечить преемственность в решениях и программную совместимость приводят, в конечном счете, к аппаратной реализации не в целом той или иной операции, а отдельных ее составляющих. Причем в разных семействах (16 -, 24 -, 32 -разрядных) архитектура отражает специфику задач ЦОС, на которые она ориентирована. Обобщенная архитектура DSP Основными операциями являются: задержка, АЦП и ЦАП (функции кодека), умножение с накоплением – операция MAC (multiply and accumulate), умножение, сложение, вычисление значений функций sin, cos, arctg, log2 x, 2х, табличное вычисление коэффициентов WК особенностям следует также отнести необходимость использования бит-реверсивной адресации. Обобщенная архитектура процессора DSP образуется тремя составляющими: процессорным ядром, подсистемами ввода/вывода и хранения. Структура процессорного ядра отражает выделенный операционный базис и учитывает особенности алгоритмов ЦОС. Блок генерации адреса обеспечивает необходимые способы адресации, в том числе бит -реверсивную.

54 2 Организация микропроцессорных систем Большинство микропроцессорных систем имеет магистрально -модульную структуру ( рис. 2.1), в которой отдельные устройства (модули), входящие в состав системы, обме ниваются ин формацией по общей системной шине – магистрали. Типовая структура микропроцессорной системы Основным модулем системы является микропро цессор, который содержит устройство управления (УУ), операционное устройство (ОУ) и регистровое запоминающее устройство (РЗУ) – внутреннюю память, реализованную в виде набора регистров. Опера тивное запоминающее устройство (ОЗУ) служит для хранения выполняемой программы (или ее фрагментов) и данных, подлежащих обработке. В простейших микропроцессор ных системах объем ОЗУ составляет десятки и сотн и байт, а в современных персональных компьютерах, серверах и рабочих станциях он достигает десятков Гбайт и более. Так как обращение к ОЗУ по системной шине требует значительных затрат времени, в большинстве современных выс окопроизводительных микропроцесс оров дополнитель но вводится быстродействующая промежуточная память (кэ ш-память) ограниченного объема. Постоянное запоминающее устройство (ПЗУ) служ ит для хранения констант и стан дартных (неизменяемых) программ. В ПЗУ обычно записываются программы начальной инициализации (загрузки) систем, тестовые и диагностические программы и другое слу жебное программное обеспечение, которое не меняе тся в процессе эксплуатации сис тем.

51 Таблица 1.2 Перечень сигналов циклов чтения и записи Циклы чтения (строб DBIN) Циклы записи (строб WR) М1 – выборка 1-го байта команды (КОП) из памяти пр ограмм (C SEG) в регистр команд; MR – чтение из памяти, выборка 2 -го и 3го байтов команды (1 -ый извлекает ся по типу М1); MW – запись в память; SR – чтение стека; SW – запись в стек; INP – чтение портов ввода-вывода; IM1 – выборка из системы прерыва ний, сопровождаемая 1-ым стробом INTA ; IM2, IM3 – циклы обработки прерывания, формирующие 2-ой и 3-ий стробы INTA – выборка адреса подпр ограммы обслуживания прерывания OUT – запись в порты ввода-вывода Так как нагрузочная способность выходов БИС микропроце ссора не велика (~ 2 мА), то его подключение к системным шинам A BUS (адреса) и D BUS (данных) обязательно осуществляется через буферы адреса (BA) и данных (BD), в качестве которых обычно используются шинные формирователи. Рассмотренный выше системный конт роллер, может быть также реализован в виде специализированной интегральной микросхемы. Микропроцессорный комплект КР580 содержит интегральные схемы КР580ВК28 и КР580ВК38, каждая из которых может заменить собой системный контроллер и шинный формирователь (буфер данных). 1.3.2 Организация и управление процессом обработки информации Каждый машинный цикл содержит 3, 4 или 5 тактов в зависимости от типа выполняемой команды. Т5) могут выполняться определенные действия, присущие и менно этому такту машинного цикла. Временные диаграммы типичных циклов чтения и записи представлены на рис. В такте Т1 c начала машинного цикла на шину адреса выдается адрес устройства, к которому будет обращение (в цикле М1 выдается содержимое РС). На шину данных выдается слово состояния SW, а на шину управления – сигнал SYNC, который идентифицирует такт Т1 и используется для загрузки SW в регистр. Все эти действия происходят по фронту синхросигнала С2 (|С2).

33  тридцать два 32 -разрядных регистра общего назначения GPR31 -0 для хранения целочисленных операндов;  тридцать два 64 -разрядных регистра FPR31 -0 для хранения операндов с плавающей точкой;  32-разрядные регистры у словий (признаков) CR и состояния при обработке чисел с плавающей точкой FPSR;  32-разрядные регистры XER, LR, CTR, используемые при обработке исключений. В отличие от CISC -процессоров эта регистровая модель не содержит программного счетчика PC и указателя стека SP. Отсутствие PC связано с тем, что микропроцессоры PowerPC не выполняют команд записи или чтения программного счетчика. Эти микропроцессоры не выполняют также операций со стеком (в случае необходимости стек реализуется программно), поэтому они не содержат SP. В результате микропроцессор МРС604 имеет суперскалярную структуру (рис. 1.15), которая содержит шесть параллельно работающих исполнительных устройств: блок обработки ветвлений BPU, два устройства для выполнения простых (одноцикловых) целочислен ных операций SIU1, SIU2, одно устройство для выполнения сложных (многоцикловых) целочисленных операций MIU, устройство обработки чисел с плавающей точкой FPU и блок выборки операндов из памяти LSU. При этом обеспечивается одновременное выполнение четырех к оманд. Все операции обработки данных выполняются с регистровой адресацией. Выборка данных из памяти производится только командами пересылки, которые выполняются блоком LSU и осуществляют загрузку данных в регистры GPR, FPR или запись содер жимого этих регистров в память. Структура микропроцессора МРС604 Блок завершения Сигналы

ВОЕННО-КОСМИЧЕСКАЯ АКАДЕМИЯ имени А.Ф.Можайского К.А. Широбоков МИКРОПРОЦЕССОРНЫЕ СИСТЕМЫ Санкт-Петербург 2015 Учебное пособие

Например, для приложений, требующих больших объемов вычислений, следует использова ть более производительные МП Analog Devices, а для работ, предполагающих интенсивный обмен информации с внешними устройствами, стоит использовать МП Texas Instruments, обладающие высокоскоростными интерфейсными подсистемами. Медийные микропроцессоры С рост ом популярности мультимедийных технологий, увеличением числа приложений и компаний, их разрабатывающих, все большее внимание со стороны производителей микропроцессоров уделяется поддержке алгоритмов сигнальной обработки на уровне команд микропроцессоров. В микропроцессорах в настоящее время наблюдается тенденция переноса акцентов с числовых операций на операции с новыми типами данных, характерными для обработки видео и звуковой информации. На сегодня можно выделить два класса микропроцессоров, обеспечивающ их поддержку мультимедиа на аппаратном уровне:  универсальные проц ессоры с мультимедийным расшире нием набора команд; (В тех областях использования, где доля числовой обработки велика);  мультимедийные микропроцессоры. ( Там где мультимедийные операции доминируют над традиционными числовыми операциями). К первому классу можн о отнести микропроцессоры Ultra SPARC компании Sun Microsystem, процессоры с мультимедийным расширением системы команд

Выбор того или иного процессора для реализации конкретного проекта – многокритериальная задача.

108 Программаторные платы предназначены для про граммирования одного типа микро контроллеров или микросхем ПЗУ, которые включаются в имеющуюся на плате панельку. Платы подключаются к последовательному порту упра вляющего персонального компьюте ра, с помощью котор ого выполняется программирование. Данные вводятся с клавиатуры компьютера, отображаются на его экране и после ред актирования загружаются в буфер ную память. Затем содержимое этой памяти переписывается в программируемое ПЗУ с помощью размещенных на плате фор мирователей си гналов требуемой мощности и длительности. После программирования выполняется верификация путем считывания и срав нения содержимого ПЗУ и буферной памяти. При выявлении несовпадений производится повторное программирование соответствующих ячеек. Некоторые типы программаторных плат работают без управляющего компьютера. Они используют размещенный на плате резидентный контроллер со служебным ПЗУ, где со держится управляющая программа. Вместо буферного ОЗУ на плате располагается па нелька для включения микросхемы памяти (ОЗУ или ЭСППЗУ), в которую предварительно записывается требуемое содержимое ПЗУ. Под управлением контроллера производится перезапись этого содержимого в программируемое ПЗУ, верификация результата и, при необходимости, повторное программирование.

25 Функционирование процессора всегда синхронизируется сигналами генератора тактовых им пульсов (ГТИ). Именно под влиянием импульсов от ГТИ устройство управления процессора автоматически реализует действия, связанные с выборкой команд из памяти и их дешифрацией. Выполнение команды всегда занимает некоторое количество периодов тактовой частоты и состоит из последовательности элементарных действий процессора (выборка команды, чтение операнда, вычисление в АЛУ). Эти элементарные действия называют машинными циклами (МЦ). В течение каждого МЦ происходит генерация строго определенной комбинации управляющих сигналов для соответствующих узлов процессора и всей вычислительной системы. Рассмотрим более подробно структуру микропроцессора на примере микропроцессор 8080 фирмы Intel, который затем выпускался многими производителями микропроцессорной техники под различными названиями. В нашей стране данный процессор имеет название 580ВМ80. Структура микропроцессора 580ВМ80 (8080) приведена на рис.1.13. По функциональному назначению элементы этого процессора можно разделить на три устройства, связанных между собой внутренней 8-разрядной магистралью. Структура микропроцессора 580ВМ80

Этот принцип в полной мере реализуется в системах на базе коммуникационных контроллеров фирмы «Motorola», так как на уровне кристалла реализованы типовые протоколы (HDLC, Х.25 и др.).

81 технологий производства микросхем, больший процент отбраковки из делий и, как следствие, дороговизна микропроцессоров. В настоящее время стал популярен и другой подход к полу чению высокой производительности. Большое количество транзисторов на кристалле может быть использовано для создания симметричной мультипроцессорной системы с более простыми процессорами, обрабатывающими целочисленные операнды. Примерами таких, так назыв аемых медийных, процессоров слу жат Mediaprocessor компании MicroUnity, Trimedia компании Philips, Mpact Media Engine компании Chromatic Research, Nvl компании Nvidia, MediaGx компании Cyrix.

17 удалить оставшиеся погрешности в структуре кристалла, в результате чего поверхность будет близка к идеалу. Последний шаг – полировка, которая сглаживает поверхность до неровностей, максимум, 3 нм. Полировка осуществляется с помощью смеси гидроксида натрия и гранулированного диоксида кремния. Сегодня подложки для микропроцессоров имеют диаметр 200 или 300 мм, что позволяет производителям чипов получать с каждой из них множество процессоров. Следующим шагом будут 450-мм подложки. В целом, чем больше диаметр подложки, тем больше можно произвести чипов одинакового размера. 300-мм подложка, наприм ер, дае т боле е чем в два раза больше процессоров, чем 200-мм. Легирование производится и с готовой подложкой, и во время процессов фотолитографии позднее. Это позволяет менять электрические свойства определенных областей и слоев, а не всей структуры кристалла. Помещения для производства ИС Добавление легирующего вещества может происходить через диффузию. Атомы легирующего вещества заполняют свободное пространство внутри кристаллической решетки, между структурами кремния. В некоторых случаях можно легировать и существующую структуру. Диффузия осуществляется с помощью газов (азота и аргона) или с помощью тве рдых веществ, или других источников легирующего вещества. Еще один подход к легированию заключается в ионной имплантации, которая очень полезна в деле изменения свойств подложки, которая была легирована, поскольку ионная имплантация осуществляется при обычной температуре. Поэтому существующие примеси не диффундируют. На подложку можно наложить маску, которая позвол яет обрабатывать только определе нные области. Процедуру можно повторять несколько раз во время производства. Чтобы создать участки интегральной схемы, используе тся процесс фотолитографии. Поскольку при этом нужно облучать не всю поверхность

107 Программное обеспечение СЭ состоит из монитора - служебной программы, обеспечивающей работу всех блоков под управлением базового ко мпьютера, компилятора или Ассем блера, позволяющих программировать работу системы на языке высокого уровня или Ассем блера, и отладчика. Данные программные средства обычно функционируют в составе интегриро ванной среды проектирования/отладки. Большинств о современных СЭ используют символьные отладчики и дисассемблеры, применение которых делает процесс отладки более простым и наглядным. Программное обеспечение СЭ реализует в процессе отладки выдачу данных на э кран монитора в удобном для пользователя многооконном формате. Многие типы СЭ содержат эмуляционное ОЗУ, которое заменяет ПЗУ отлаживаемой системы. Благодаря такой замене можно в процессе отладки производить оперативное изменение содержимого этой памяти. П осле отладки содержимое эмуляционного ОЗУ переносится в рабочее ПЗУ системы. Кроме описанных сложно функциональных и дорог их моделей СЭ рядом производителей выпускаются их упрощенные варианты, реализован ные на одной печатной плате. Та кие СЭ обладают ограни ченными возможностями: имеют существенно меньший объем памяти трассы, не реализуют функции ЛА, не обеспечивают символьной отладки и т. Одна ко они позволяют выполнять отладку систем малой и с редней сложности, имеют на поря док более низкую стоимость, поэт ому находят достат очно широкое практическое приме нение. Некоторые типы плат развития также выполняют часть функций СЭ. Некоторые модели СЭ предоставляют возможност и анализа эффективности выполняемой про граммы, обеспечивая информацию о частоте о бращения к определенным ее фраг ментам, и поз воляют производить отладку мультипроцессорных систем с помощью орга низации многоэмуляторных комплексов. СЭ, реализующие набор вышеперечисленных фун кций, называют отладочными комп лексами, или системами развития ( development system).

48 В процессорах Pentium и ряде других моделей компании Intel (8086, 80186, 80286, 386,486 и других) реализуется сегментная организация памяти, при которой адрес выбираемой команды определяется содержимым двух регистров – указателя команды EIP и сегментного регистра CS. При этом различные виды передачи управления в программе реализуются путем измене ния содержимого регистров EIP и CS. Команды управления процессором. К этой группе относятся команды останова, отсутствия операции и ряд команд, определяющих режим работы процессора или его отдельных блоков. Команда HLT прекращает выполнение программы и пер еводит про цессор в состояние останова, выход из которого происходит при поступлении сигналов прерывания или перезапуска (Reset). Команда NOP («пустая» команда), которая не вызывает выполнения каких-либо операций, служит д ля реализации программных задер жек или заполнения пропусков, образовавшихся в программе. Специальные команды CLI, STI запрещают и разр ешают обслуживание запросов пре рывания, устанавливая соответствующее значение бита управления I в регистре состоя ния процессора. В процессорах Pentium для этого используется бит управления (флаг) IF в регистре EFLAGS. Многие микропроцессоры выполняют команду идентификации, которая позволяет пользователю или другим устройствам получить информацию о типе процессора, используемого в данной системе. В процессорах Pentuim для этого служит команда CPUID, при выполнении которой необходимые данные о процессоре поступают в регистры ЕАХ, ЕВХ, ЕСХ, EDX и могут затем считываться пользователем или операционной системой. В процессорах, которые имеют внутреннюю кэш -память, ре ализуются специальные команды, управляющие ее работой. При поступлении этих команд производится очистка (аннулирование содержимого) кэш -памяти, обеспечивается запись в ОЗУ определенных строк кэш -памяти и некоторые другие операции. 1.3 Обработка информации в микропроцессорах 1.3.1 Организация и функционирование подсистемы обработки информации Управляющие сигналы обеспечивают стробирование всех процессов обмена информации, сопровождая передачу данных между компонентами микросистемы. Стандартный цикл выполнения команды включает несколько этапов:  выборку команды;

На основе инструментария и библиотек классов STK для вооруженных сил США разработано прикладное программное обеспечение в области оценки комической обстановки, определения возможностей системы противоракетной обороны, расчета возможностей орбитальных средств и других задач.Открытый программный комплекс GMAT, разработанный группой космических корпораций при участии NASA, предназначен для моделирования, анализа и оптимизации траекторий космических аппаратов. Большое количество встраиваемых аналитических инструментов GMAT, ресурсов и библиотек помогает оперативно решать широкий спектр задач.

113 В 2012 году студент -нейробиолог из Германии создал безногого роботагуманоида по имени Адам, что расшифровывается как «усовершенствованный двуручный манипулятор ». В отличие от многих личных проектов, (которые являются скорее хобби, чем серьёзными разработками), руки Адама имеют пять степеней свободы и приводятся в действие роботизированными суставами «Robolink» немецкой роботехнической компании «Igus» (рис. Естественно, что кроме антропоморфных роботов существует множество других вариантов реализации, связанных с задачами решаемыми ими. Космос – актуальная и п ерспективная область применения робототехнических систем. Именно в космосе сосредоточена наибольшая концентрация опасных для здоровья человека факторов, решение задач в условиях космоса невозможно без специального оборудования, обеспечивающего выживание че ловека. Ученые со всего мира работают над созданием универсального робота -астронавта, который смог бы заменить человека в условиях космоса и выполнять всю опасную работу вместо него. Космическая робототехника – направление в робототехнике, разрабатывающее робототехнические системы для решения прикладных задач в экстремальных условиях космоса, на поверхности безатмосферных космических тел, в атмосфере планет земного и неземного типа. Области применения робототехнических систем в космосе:  работа в открытом ко смосе (в условиях вакуума, жестких ионизирующих излучений) снаружи и внутри космических кораблей (обслуживание, регламентные и ремонтные работы, сборочные, разгрузочно -погрузочные работы, инспекция, различного рода манипуляции);  работа на поверхности плане т и других космических тел (исследование, освоение, строительство). Космическая робототехника расширяет возможности человечества в изучении и освоении космоса и космических тел (планет, их спутников, астероидов, комет, др.) Применение робототехнических сис тем позволяет повысить эффективность решения задач в экстремальных условиях космоса, снизить расходы на исследовательские программы и эксплуатацию оборудования, существенно расширить возможности человека при освоении космических тел, строительстве в услови ях вакуума, на порядок увеличить безопасность космонавтов. Космический робот ALIA ISS (рис. З.3) обучается для работы на борту космической станции. Благодаря финансированию в 3.8 миллионам евро немецким Космическим Центром, человекоподобный робот ALIA ISS, созданный в университете г. Бремена, Германия, готовится для работы в

40 Регистровая адресация является наиболее простой и быстрой. Так как объем РЗУ ограничен, то для задания номера регистра требуется всего несколько бит (обычно от трех до восьми). Так как РЗУ расположено на кристалле микропроцессора, то для выборки операнда не требуется обращение к внешней системной шине, поэтому выполнение операций при данном способе адресации требует минимального времени. Однако объем РЗУ о граничен (несколько десятков или сотен байт), поэтому необходимо периодическое обращение к ОЗУ для сохранения результатов и получения новых операндов. Отметим, что ряд типов микропроцессоров имеет а ккумуляторную организацию опера ционного устройства, при ко торой используется специальный регистр-аккумулятор, в кото рый заносится результат операции ОУ. Содержимое этого регистра служит также операндом при выполнении очередной операции ОУ. При этом не требуется указания в команде номера (адреса) регистра -аккумулятора, так как обращение к нему обеспечивается автоматически в соответствии с внутренней структурой микропроцессора. Такой вариант регистровой адре сации обеспечивает наиболее быстрое выполнение не скольких последовательных опера ций обработки. Однако для загрузки операнда в аккумул ятор и сохранения полученных ре зультатов приходится выполнять специальные команды п ересылки, что снижает общую производительность системы. Наиболее распространенными являются различные варианты косвенно регистровой адресации. При это м в команде указывается только ном ер регистра, используемого в ка честве адресного, поэтому размер команды оказывается небольшим (как при регистровой адресации). Однако выборка операнда (чтение из ОЗУ и ли запись в него) требует выпол нения циклов передачи по системной шине, что снижает производительность системы. Различные варианты косвенно -регистровой адресации позволяют производить обработку линейных (строк) и двумерных (матриц) массивов данны х, обеспечивая обращение к необ ходимому элементу массива по его относительному положению. Непосредственная адресация также вызывает ув еличение размера команды на число байт заданного операнда. Из-за этого возрастает объем памяти команд и время вы борки команды. Однако при этом операнд поступает непосредственно в процессо р, т. не требуется выполнение дополнительного цикла обращения к ОЗУ. Данный способ ад ресации широко используется для введения различных констант, используемых при обработке данных. Различные типы микропроцессоров часто реализуют разнообразные варианты эт их способов адресации. В ряде микропроцессоров используется косвенно-регистровая адресация с пост-инкрементом или предекремент ом.

38  слово (соответствует разрядности МП, например, 16 разрядов);  двойное слово (вдвое больше слова, например, 32 разряда). Некоторые типы микропроцессоров обрабатывают также четве рные слова (64 разря да), двоично -десятичные числа BCD (Binary Coded Dec imal, представление одного деся тичного разряда с помощью тетрады из 4 битов, которая называется полубайтом) , строки символов. В состав современных высокопроизводительных микропроцессо ров входят также блоки, производящие обработку чисел, представленных в формате с плавающей точкой (блоки FPU – Floating Point Unit), и выполняющие обработку видео - и аудиоданных, для которых используются специальные форматы представления.

22 Последний этап подразумевает тестирование процессора, что происходит при повышенных темпе ратурах, в соответствии со спецификациями процессора. Процессор автоматически устанавливается в тестовый сокет, после чего происходит анализ всех необходимых функций. 1.1.3 Обобщенная структура, принципы организации и функционирования микропроцессора Микропроцессор является универсальным устр ойством для выполнения программной обработки информации, которое может использов аться в самых разнообразных сфе рах человеческой деятельности. Десятки компаний производителей выпускают несколь ко тысяч типов микропроцес соров, имеющих разные характеристики и предназначенных для различных областей применения. Выпускаемы е микропроцессоры делятся на от дельные классы в соответствии с их архитектурой, структурой и функциональным назначением. Развитие технологии обеспечивает во зможность с оздания на кристалле все большего количества активных компонентов – транзисторов, которые могут быть использованы для реализации новых архитектурных и структурных решений, обеспечивающих повы шение производительности и расширение функциональных возможностей микропроцессоров. Принципы организации и функционирования микропроцессора были предложены Джоном-фон-Нейманом в 1945 году. Принцип цифрового представления данных – информация кодируется в двоичной форме и разделяется на единицы, называемые словами (используются и другие единицы информации). Разнотипные слова инфо рмации различаются по способу использования, но не по способу кодирования. Принцип программного управления заключается в том, что упра вление вычислительным процессом производится с помощью компьютерной программы, хранимой в памяти и представляющей собой последовательность команд. Команда – элементарное предложение машинного языка или автокода, содержащие предписание ЭВМ выполнять некоторую машинную операцию или действие. Команда обычно включает операционную и адресную части. Принцип микропрограммного управления состоит в том, что в ыполнение одной команды включает определенную последовательность элеме нтарных действий (микроопераций), которые объединяются в микропрограммы. Одна микропрограмма выполняется за несколько тактов, микрооперация − за один такт.

82 (ММХ) компаний Intel - Pentium ММХ, Pentium II, III, IV, AMD - Athlon, Duron и др. Второй класс представл яет собой некоторый гибрид архи тектурных решений, характерных для традиционных DSP (Digital Signal Processor) – процессоров и универсальных микропроцессоров. Микропроцессо ры данного класса – медиапроцессоры, предназначенн ые для обработки аудиосигналов, графики, видеоизображений, а также для решения ряда коммуникацион ных задач в мультимедиа ПК, в игровых приставках, бытовой технике. Наибольшее внимание привлекают сегодня микропроцессоры: 1. Mediaprocessor компании MicroUnity. Mpact Media Engine компании Chromatic Research.

27 него «под рукой» , а это значительно ускоряет операции с их содержимым. Мультиплексор служит для связи одного из регистров с внутренней магистралью. Каждый из РОН является 8 -разрядным, однако в некоторых операциях эти регистры могут объединяться, регистровые пары и каждая из пар может использоваться как единый 16-разрядный регистр. Пары имеют имена по имени старшего из РОН, т.е. Регистры W и Z предназначены для внутренних операций процессора и к ним нет доступа со стороны программы. Регистры указатели являются едиными 16 -разрядными регистрами и предназначены для хранения адресов ячеек памяти. Указатель стека (SP) используется для адресации в некоторой области памяти, называемой стеком, и используемой для организации работы с подпрограммами и некоторых способах адресации. Подробнее функционирование этого регистра рассмотрим при изучении методов адресации и системы команд микропроцессора. Программный счетчик (PC) всегда содержит адрес ячейки памяти из которой должна быть извлечена следующая выполняемая команда. Выполнение очередной команды начинается с передачи ее адреса на шину адреса, в результате память системы устанавливает на шину данных содержимое адресуемой ячейки памяти, которое интерпретируется как код команды. Сразу после получения очередной команды процессор увеличивает содержимое программного счетчика на 1, т.е. при выполнении команды PC указывает на адрес следующей команды. Управляемый адресный регистр предназначен для хранения адреса памяти данных, который может формироваться в регистровых парах. Регистры указатели являются 16 -разрядными и, следовательно, адресное пространство данного процессора представляет собой неп рерывную последовательность 8 -разрядных ячеек памяти с адресами от 0000 h до FFFFh (h означает шестнадцатеричное представление числа) или от 0 до 65535 в десятичном представлении. Содержимое адресных регистров передается на внешнюю шину адреса через буфер адреса. В отлич ие от буфера данных, этот буфер является однонаправленным, т.к. процессор только выводит адрес. Как и буфер данных, адресный буфер может быть переведен в состояние высокого импеданса. Регистр флагов предназначен для хранения признаков (флагов) выполненной операции. Отдельные биты этого регистра устанавливаются в 1 или сбрасываются в 0 в соответствии с результатом выполненной в АЛУ операции. Эти флаги используются командами условных переходов для организации ветвлений в программе. Формат этого регистра показан на рис.1.14. Приведем краткую характеристику флагов.

105 оперативное изменение рабочей програ ммы. Окончательный вариант рабо чей программы заносится в ПЗУ системы после отладки. Более сложные «интеллектуальные» эмуляторы ПЗУ имеют более широкие функциональные возможности. Используя один из входов прерывания системы, они позволяют останавливать ее работу в заданных контрольных точках аналогично схемному эмулятору. При этом на дисплее базового компьютера может быт ь представлено содержимое эмули рующей памяти. В случае использования в эмуляторе памяти трассы можно обеспечить просмотр предыдущих шагов обращения к ПЗУ, т. проверить последовательность выбиравшихся команд. Во многих случаях такая информация является достаточной для выполнения отладки микроконтроллерных сист ем. В качестве примера эмуляторов ПЗУ этого класса можно привести IDS/LC, выпускаемый компанией «Cactus Logic» (США).

1.1 приведены типо вые команды условных переходов, кот орые реализуются в большинстве микропроцессоров (мнемокоды команд даны для процессоров Pentium). В качестве условия часто используется относительно е значение двух операндов, опре деляемое с помощью команды сравнения СМР. Например, равенство операндов опреде ляется значением признака нуля Z после команды СМР: операнды равны, если Z = 1 (результат равен 0); не равны, если Z = 0 (результат не равен 0). Если сравниваются без знаковые операнды, то соотношение их значений «выше – ниже – равно» определяют следующие условия (см. 1.1):  ниже/не выше и не равно (<), команда JB;  не ниже/выше или равно (>=), команда JNB;  ниже или равно/не выше (<=), команда JBE;  не ниже и не равно/выше (>), команда JNBE. Таблица 1.1 Типовые команды условных переходов Мнемокод Условие Мнемокод Условие J0 Переполнение V = 1 JNO Нет переполнения V = 0 JB Ниже (не выше и не равно) С = 1 JNB Не ниже (выше или равно) С = 0 Е Равно (нуль) ZF = 1 JNE Не равно (не нуль) Z = 0 JBE Ниже или равно (не выше) С + Z = 1 JNBE Не ниже и не равно (выше) С + Z = 0 JS Отрицательный знак N = 1 JNS Положительный знак N=0 JL Меньше (не больше и не равно) N ® V = 1 JNL Не меньше (больше или равно) N ® V = 0 JLE Меньше или равно (не больше) (N ®V) + Z= 1 JNLE Не меньше и не равно (больше) (N ®Е V) + Z = 1 Если сравниваются операнды со знаком, то соотношение между ними «больше – меньше – равно» определяют условия (см. 1.1):  меньше/не больше и не равно (<), команда JL;  не меньше/больше или равно (>=), команда JNL;  меньше или равно/не больше (<=), команда JLE;  не меньше и не равно/больше (>), команда JNLE.

МЕТОДИЧЕСКИЙ ПОДХОД К МОДЕЛИРОВАНИЮ ПРИМЕНЕНИЯ КС В ИНТЕРЕСАХ ИНФОРМАЦИОННОГО ОБЕСПЕЧЕНИЯ ЦЕНТРОВ УПРАВЛЕНИЯ ВС РФ39ВОЕННАЯ МЫСЛЬ · № 1 — 2022 ПРИМЕЧАНИЯ1 ГОСТ Р 57412-2017. Компьютерные модели в процессах разработки, производства и эксплуатации изделий. 2 Колесник А.В., Прокопенко Е.А., Янов С.В. Результаты разработки прикладного программного обеспечения во 2-м управлении военного института (научно-исследовательского) // Новатор. 56—61.3 Там же.4 Там же.5 Там же.6 Чарушников А.В., Проценко П.А., Ортиков М.Ю. Наука и инновации в технических университетах / Материалы Девятого Всероссийского форума студентов, аспирантов и молодых ученых. 64—66.7 Колесник А.В., Ортиков М.Ю., Чарушников А.В. Обоснование состава инструментария разработки программных средств моделирования космических систем / Труды Военно-космической академии имени А.Ф. 53—61.8 Колесник А.В., Прокопенко Е.А., Янов С.В. Результаты разработки…9 Колесник А.В., Ортиков М.Ю., Чарушников А.В. Обоснование состава…10 ГОСТ Р 57412-2017. Направления внедрения технологий моделирования космических систем и средств в комплексах средств автоматизации центров управления Вооруженных Сил Российской Федерации / Труды Военно-космической академии имени А.Ф. 80—86.12 Там же.13 ГОСТ Р 57412-2017. 14 Колесник А.В., Прокопенко Е.А., Янов С.В. Результаты разработки…15 Колесник А.В., Ортиков М.Ю., Чарушников А.В.

Обоснование состава…16 Там же.• обеспечить обоснование, предъявление и проверку требований в рамках создания СМПО, включающего компьютерные модели КС, на всех этапах выполнения НИОКР по развитию автоматизированных информационно-аналитических систем в интересах Вооруженных Сил Российской Федерации.Также в целях обеспечения обработки реальной и условно-реальной информации в автоматизированных информационно-аналитических системах Вооруженных Сил Российской Федерации и программных комплексах научно-исследовательских организаций Минобороны необходима разработка положений и протоколов информационно-технического взаимодействия, обеспечивающих взаимный обмен исходными данными, сценариями применения космических средств и результатами моделирования.Таким образом, проблема внедрения технологий моделирования КС в СПО КСА ЦУ ВС РФ является актуальной и осуществимой при активном взаимодействии заказчиков, потребителей и научно-исследовательских организаций, ответственных за создание и развитие СПО.В современных условиях развития системы моделирования ВС РФ решение обозначенных задач имеет приоритетное значение при повышении уровня автоматизации системы управления войсками и оружием. В свою очередь, наиболее важными направлениями внедрения технологий моделирования КС будут являться унификация СПО и оперативная разработка проблемно-ориентированных приложений, востребованных для автоматизированной поддержки информационно-расчетной и логико-аналитической деятельности ДЛ ЦУ ВС РФ.

5000 фирмы «Elan Systems», которые м огут программировать всю номенк латуру семейств.

4 Предисловие Учебное пособие предназначено для курсантов и слушателей, обучающихся по специальности «Применение и эксплуатация автоматизированных систем специального назначения». Оно содержит материал необходимый для изучения дисциплины «Микропроцессорные системы». В нем отражены вопросы, связанные с организацией микропроцессора, микропроцессорных систем, этапами их проектирования , разработки, программирования, отладки и производства. Рассмотрены вопросы, связанные с функционированием блоков микропроцессора, особенностями взаимодействия компонентов микропроцессорных систем. Дисциплина «Микропроцессорные системы» имеет прикладной ха рактер, базируется на знаниях, полученных в рамках дисциплин «Информатика», «Дискретная математика», «Электроника, электротехника и схемотехника», «Программирование». Материал, приведенный в учебном пособии, является основой для выполнения курсового проекта в рамках дисциплины «Микропроцессорные системы». Введение, глава 1, п.2.2.2 и п.2.3.4 написаны Эсауловым К.А., глава 2 – Широбоковым В.В. (за исключением п.2.2.2 и п.2.3.4).

42  операции пересылки;  арифметические операции;  логические операции;  операции сдвига;  операции сравнения и тестирования;  битовые операции;  операции управления программой;  операции управления процессором. При описании команд обычно используются их м немонические обозначения (мнемокоды), которые служат для задания команды при про граммировании на языке ассемб лера. Для различных версий ассемблера мнемокоды некоторых команд могут отличаться. Например, для команды вызова подпрограммы используется мнемокод CALL или JSR («Jump to SubRoutine»).

66 В ЭВМ, рассчитанной на изолированный ВВ, нетрудно перейти к ВВ, отображенному на память. Если, например, адресное пространство памяти составляет 64 Кбайт, а для программного обеспечения достаточно 32 Кбайт, то область адресов от 0 до 32 К -1 (Кбайт) используется для памяти, от 32 К до 64 К-1 – для ввода/вывода. При этом признаком, дифференцирующим обращения к памяти и портам ВВ, может быть старший бит адреса. Таким образом, интерфейс с общими шинами (ввод/вывод с отображением на память) имеет организацию, при которой часть общего адресного пространства отводится для внешних устройств, регистры которых адресуются так же, как и ячейки памяти.

МЕТОДИЧЕСКИЙ ПОДХОД К МОДЕЛИРОВАНИЮ ПРИМЕНЕНИЯ КС В ИНТЕРЕСАХ ИНФОРМАЦИОННОГО ОБЕСПЕЧЕНИЯ ЦЕНТРОВ УПРАВЛЕНИЯ ВС РФ35ВОЕННАЯ МЫСЛЬ · № 1 — 2022 ленных на достижение максимальной эффективности в производственных процессах разработки, изготовления и эксплуатации КС и АСУ ВН.В основу стандартизации СМПО должны быть положены требования специализированных ГОСТов Минобороны и ракетно-космической отрасли, а также зарубежный и отечественный опыт стандартизации требований к программному обеспечению в других отраслях. В настоящее время приняты отраслевые стандарты в атомной промышленности (IEC 60880), авиационной технике (DO-178C), железнодорожном транспорте (EN 50128) и здравоохранении (IEC62304).Необходимо отметить, что в области моделирования КС требуется разработать единый межотраслевой стандарт, определяющий требования к СМПО, в том числе методам и алгоритмам космической баллистики, искусственных возмущений, функционирования типовых бортовых комплексов и др.В связи с необходимостью оперативной разрабо тки (менее одной недели) и представления программно-реализованных информационно-расчетных задач (демонстрационных приложений) органам военного управления и системным предприятиям ракетно-космической отрасли предлагается использовать термин «компьютерная модель» (КМ), означающий математическую модель объекта (процесса) предметной области, выполненную в компьютерной (вычислительной) среде8,9.Компьютерные модели КС создаются в целях обоснования проектно-технического облика проектируемых космических систем, подтверждения правильности выбранных конструкторских решений по их проектированию, оценки информационных возможностей КС, определения вклада в применение группировки войск (сил) и систем вооружения. Компьютерная модель является приближенным представлением, сохраняющим существенные черты КС, и описывает основные свойства, параметры, внутренние и внешние связи КМ с заданной разработчиком точностью10.Требуется разработка единого инструментария моделирования КС. В области разработки специального программного обеспечения АСУ ВН используется термин «инструментарий», представляющий собой программное обеспечение, предназначенное для использования в ходе проектирования, разработки и сопровождения программ.Решение функциональных задач СПО КСА ЦУ ВС РФ при их создании (модернизации) может быть реализовано на стендах главных конструкторов КС. Для критически важных КС могут проводиться дополнительные работы по согласованию и калибровке моделей совместно заказчиками (потребителями) создаваемых КС, организациями — разработчиками КС и организациями, осуществляющими военно-научное сопровождение.В специальном программном обеспечении КСА ЦУ космических войск должны решаться следующие функциональные задачи11:• оценка степени опасности ракетной и космической обстановки;• оповещение о возможностях иностранных космических аппаратов информационного обеспечения;• формирование и выдача на пункты управления государства и Вооруженных Сил информации о ракетном нападении противника и военных угрозах в космосе;• информационное обеспечение безопасности запусков и полетов отечественных космических аппаратов;• организация управления орбитальными группировками космических аппаратов;

19 подложку наносится связывающий агент, который гарантирует, что фоторезистивный материал, который будет нанес ен на следующем шаге, останется на подложке. Фоторезистивный материал наносится на середину подложки, которая потом начинает вращаться с большой скоростью, чтобы слой равномерно распределился по всей поверхности подложки. Затем подложка вновь нагревается. Затем через маску обложка облучается квантовым лазером, ж естким ультрафиолетовым излучением, рентгеновским излучением, пучками электронов или ионов (могут и спользоваться все эти источники света или энергии). Пучки электронов применяются, главным образом, для создания масок, рентгеновские лучи и пучки ионов – для исследовательских целей, а в промышленном производстве сегодня доминируют ж есткое УФ -излучение и газовые лазеры. Для получения требуемого результата очень важны время проецирования и фокусировка. Плохая фокусировка привед ет к тому, что останутся лишние частицы фоторезистивного материала, поскольку некоторые отверстия в маске не будут облучены должным образом. То же самое получится, если время проецирования будет слишком маленьким. Тогда структура из фоторезистивного материала будет слишком широкой, участки под отверстиями будут недодержанными. С другой стороны, чрезмерное время проецирования создает слишком большие участки под отверстиями и слишком узкую структуру из фоторезистивного материала. Как правило, очень трудоемко и сложно отрегулировать и оптимизировать процесс. Неудачная регулировка привед ет к серь езным отклонениям и в соединительных проводниках. Специальная шаговая проекционная установка перемещает подложку в нужное положение. Затем может проецироваться строчка или один участок, чаще всего соответствующий одному кристаллу процессора. Дополнительные микроустановки могут вносить дополнительные изменения. Они могут отлаживать существующую технологию и оптимизировать техпроцесс. Микроустановки обычно работают над площадями меньше 1 мм 2, в то время как обычные установки покрывают площади большего размера. Затем подложка переходит на новый этап, где удаляется ослабленный фоторезистивный материал, что позволяет получить доступ к диоксиду кремния. Существуют мокрый и сухой процессы травления, которыми обрабатываются участки диоксида кремния. Мокрые процессы используют химические соединения, а сухие про цессы – газ. Отдельный процесс заключается и в удалении остатков фоторезистивного материала. Производители часто сочетают мокрое и сухое удаление, чтобы

Затем в 1985 году – Intel 80386 , который относился уже к 32 -разрядным процессорам, далее в 1989 году – Intel 80486 и в 1993 году – Pentium. Технологии полупроводникового производства непрерывно развиваются в соответствии с законом Мура. Закон Мура – эмпирическое наблюдение, изначально сделанное Гордоном Муром , согласно которому (в современной формулировке) количество транзисторов, размещаемых на кристалле интегральной схемы, удваивается каждые 24 месяца. Часто цитируемый интервал в 18 месяцев связан с прогнозом Давида Хауса из Intel, по мнению которого производительность процессоров должна удваиваться каждые 18 месяцев из -за сочетания роста количества транзисторов и быстродействия каждого из них.

88 класса цифровых устройств, начиная от устройства целиком и кончая проектированием отдельных БИС/СБИС. Такая методология проектировани я отображает процесс проектирования «све рху - вниз»: от технического за дания до электрических схем, файлов прошивки ПЗУ и конфигурации программируемых приборов, а также конструкции устройства в целом. Другая последовательность, соответствующая методологии «снизу–вверх», предусматривает объединение простейших модулей в более сложную структуру до тех пор, пока, в конце концов, не будет создан конечный проект. Исходные модули – это решения, созданные проектировщиком на более ранних этапах работы или в ходе раб от над другими проектами или доступные проектировщику и входящие в состав имеющихся библиотек систем автоматизации проектирования (САПР). Современным условиям проектирования, когда соз даются сложные проекты с привле чением большого числа разработчиков, боль ше соответствует применение стратегии «сверху–вниз». Следует отметить, что приведенное выше наглядно е описание процесса проектирования относится к каждому уровню проектирования. При этом декомпозиция заканчивается при получении типовых функций, соответствующих выбранному уровню иерархии. Так, на верхнем уровне (при многоплатной реализации) деко мпозиция заканчивается при пред ставлении проекта в виде отдельных плат, на следующем уровне - в виде отдельной платы (типового элемента замены), еще ниже декомпозиция осуществляется до реализации функций при помощи той или иной микросхемы. А при ориентации на программируемые (разрабатываемые) пользователем микросхемы процедура декомпозиции осуществляется уже для этой микросхемы в соответствии с составом функциональных библиотек программируемых БИС/СБИС. С учетом возможностей современных САПР проектирование может считаться законченным после верификации проекта в целом, когда завершена отладка готового изделия. Различие теоретической базы и понятийного аппарата, используе мых на разных стадиях проектирования, приводит к тому, что традиционным является разбиение процесса проектирования, как цифровых устройств, так и БИС/СБИС на следующие этапы:  системного проектирования;  структурно-алгоритмического проектирования;  функционально-логического проектирования;  конструкторско-технологического проектирования. На этапе системного проектирования определяется архитектура будущей системы, состав компонентов и основные характеристики системы при таком ее

Однако в этом случае перед загрузкой в PC нового содержимого, задающего адрес первой команды подпрограммы, необходимо сохранить его текущее значение (адрес очередной команды), чтобы после выполнения подпрограммы обеспечить возвращение к основной программе (или к предыдущей подпрограмме при вложении подпрограмм). Текущее содержимое PC обычно сохраняется в стеке, который организуется в ОЗУ. После выполнения подпрограммы выполняется безусловная переда ча управления исходной программе с помощью команды возврата из подпрограммы RET, которая выбирает из стека и загружает в PC его старое содержимое. Команды условных переходов (ветвлений программы) производят загрузку в PC нового содержимого, если выполняются о пределенные условия, которы е обычно задаются в соот ветствии с текущим значением различных признаков в регистре состояния. Если условие не реализуется, то выполняется следующая

60  организация параллельной работы устройств ввода-вывода и процессора;  согласование скоростей обмена и кэширование данных;  разделение устройств и данных между процессами (выполняющимися программами);  обеспечение удобного логического и нтерфейса между устройствами и остальной частью системы;  поддержка широкого спектра драйверов с возможностью простого включения в систему нового драйвера;  динамическая загрузка и выгрузка драйверов без дополнительных действий с операционной системой;  поддержка нескольких различных файловых систем;  поддержка синхронных и асинхронных операций ввода-вывода. Эволюция ввода-вывода может быть представлена следующими этапами. Процессор непосредственно управляет периферийным устройством. Устройство управляется конт роллером. Процессор использует программируемый ввод -вывод без прерываний (переход к абстракции интерфейса ввода-вывода). Использование контроллера прерываний. Ввод -вывод, управляемый прерываниями. Использование модуля (канала) прямого доступа к памяти. Пер емещение данных в память (из нее) без применения процессора. Использование отдельного специализированного процессора ввода вывода, управляемого центральным процессором. Использование отдельного компьютера для управления устройствами ввода-вывода при минимальном вмешательстве центрального процессора. Проследив описанный путь развития устройств ввода -вывода можно заметить, что вмешательство процессора в функции ввода -вывода становится все менее заметным. Центральный процессор все больше освобождается от задач, связанных с вводом -выводом, что приводит к повышению общей производительности компьютерной системы. Для персональных компьютеров операции ввода-вывода могут выполняться тремя способами. С помощью программируемого ввода -вывода. В этом случае, когда процессору встречается команда, связанная с вводом -выводом, он выполняет ее, посылая соответствующие команды контроллеру ввода -вывода. Это устройство выполняет требуемое действие, а затем устанавливает соответствующие биты в регистрах состояния ввода -вывода и не посылает никаких сигналов, в том числе сигналов прерываний.

Классификация ИС по признаку способа изготовления К стандартным микросхемам отнесены схемы малой и средней ст епени интеграции – МИС и СИС. Эти микросхемы производятся массовым и тиражами и реализуют стандарт ные элементы и узлы, функционирование которых никак не определяется конкретными потребителями. К стандартным схемам высокого уров ня интеграции (БИС и СБИС) отн осятся цифровые схемы: микропроцессоры, микроко нтроллеры и запоминающие устрой ства (ЗУ), разнообразные периферийные схемы для МП и МК, включая и аналого цифровые схемы (аналого-цифровые преобразователи (АЦП) , цифроаналоговые преобразователи (ЦАП)). Общее с войство этих схем то, что они остаю тся неизменными после изготовле ния независимо от устройств и систем, в которых они используются. К специализированным относятся все ИС (СпИС) , структура которых в отличие от структур стандартных ИС массового производства каким-либо способом приспосаблива ется к конкретным требованиям того или иного проекта.

99 FORTRAN, Modula-2, Ada, Pascal. Все эти компиляторы обеспечивают также программирование на языке Ассемблера. Большинство из них содержа т компоновщики для связи программных модулей, библиотеки функций. Многие компиляторы по указанию разработчика могут оптимизировать процесс трансляции исходного текста с целью получения объектного кода с минимальным объемом или минимальным вре менем выполнен ия программы. Такие компиляторы называются оптимизирующими. Симуляторы (программно-логические модели) микропроцессоров и микроконтроллеров, используемые при отладке программ, редко поставляются в виде отдельных средств поддержки программирования. Обычно он и входят в состав отладчиков. Отладчики являются основным инструментом разработчика программного обеспечения, без которого практически невозможно получить работоспособные объектные модули рабочей программы. Отладчик реализует различные режимы выполнения тр анслированной про граммы - пошаговый или с остановами в контрольных то чках, позволяет производить про смотр и коррекцию содержимого регистров и ячеек памяти, обеспечивает в точке останова контроль выполнения предыдущих шагов программы (пр осмотр трассы), дисассемблирование команд. Отладчик воспринимает программу на уровне исходного кода или в символичес ком виде, с использованием введенных разработчиком им ен и меток. Символические отлад чики являются наиболее удобным средством отладки, та к как они представляют и воспринимают информацию в наиболее наглядной и удобной для программиста форме. Взаимосвязь компонентов отладки МПС Помимо симулятора, отладчики содержат обычно компоновщик -загрузчик объектного кода, библиотеки стандартных функций (вычисление специальных и тригонометрических функций, обработка чисел с плавающей точкой и

Такое р асположение байтов обеспечивают микропро цессоры компании «Motorola», ряд моделей микропроцессоров, выпускаемых IBM и некоторыми другими компаниями.

Поэтому, для того чтобы избежать разночтений необходимо договориться об основных понятиях и определениях. Фактически, микропроцессор – программируемая (настраиваемая) БИС. Или же, микропроцессор – БИС с программируемой (настраиваемой) логикой. Резкое повышение спроса на микропроцессоры и микропроцессорные системы привело к то му, что в последние десятилетия это направление стало наиболее развивающимся в электронной, радиотехнической, связной, приборостроительной и вычислительной технике. В настоящее время существует много определений микропроцессора, неред ко противоречивых, в основе которых лежат технологические, конструктивные, функциональные и другие свойства микропроцессоров. Микропроцессорная техника (МПТ) включает технические и программные средства, используемые для построения различных микропроцессорных систем, устройств и персональных микро-ЭВМ. Микропроцессорная система (МПС) представляет собой функционально законченное изделие, состоящее из одного или нескольких у стройств, главным образом микропроцессорных: микропроцессора и/или микроконтроллера. Микропроцессорное устройство (МПУ) представляет собой функционально и кон структивно законченное изделие, состоящее из нескольких микросхем, в состав которых входит микропроцессор; оно предназначено для выпо лнения определенного набора фун кций: получение, обработка, передача, преобразование информации и управление. Под микропроцессором (МП) будем понимать в дальнейшем программно управляемое устройство, осуществляющее процесс цифровой обработки информации и управления им построенное, как правило, на одной БИС. Микропроцессором называется программно -управляемое устройство для обработки цифровой информации и управления процессом обработки, реализованное в виде большой (БИС) или сверхбольшой (СБИС) интегральной микросхемы. Таким образом, микропроцессор играет роль процессора в цифровых с истемах различного назначения. Это могут быть системы обработки информации (компьютеры), системы управления объектами и процессами, информационно -измерительные системы и другие виды систем, используемых в промышленности, бытовой технике, аппаратуре связи и многих других областях применения.

Данный программный комплекс является альтернативой коммерческой программе STK.В области применяемых инструментариев разработки программных средств моделирования КС необходимо выделить Google Earth API, STK

Для предварительной установки необходимых признаков могут использоваться также команды тестирования и битовых операций. Команды организации программных циклов осущест вляют условный переход в зависи мости от значения содержимого заданного регистра, котор ый используется как счетчик цик лов. Например, в процессорах Pentium для

Ввиду большой номенклату ры этого семейства выпускается несколько типов таких плат для различных серий микро контроллеров. Платы комплектуются соответствующими типами микроконтроллеров, эмуляционно й памятью емкостью 8 или 16 Кбайт, содержат резидентный отладчик, позволяю щий выполнять отладку программ без использования управляющего

31ВОЕННАЯ МЫСЛЬ · № 1 — 2022 Методический подход к моделированию применения космических систем в интересах информационного обеспечения центров управления Вооруженных Сил Российской ФедерацииАННОТАЦИЯ ABSTRACTРассматриваются направления развития и использования программного комплекса моделирования применения космических систем с учетом его употребления в составе комплексов средств автоматизации центров управления Вооруженных Сил Российской Федерации (ВС РФ). Предложена технология оперативного формирования проблемноориентированных кроссплатформенных приложений. Сформированы предложения по обоснованию путей развития компьютерного моделирования космических систем, применяемых в автоматизированных информационных системах, основанные на результатах военнонаучного сопровождения автоматизированных средств управления войсками, а также на результатах внедрения технологий моделирования в практическую деятельность должностных лиц центров управления ВС РФ.Th e paper looks at the development and employment lines for the soft ware complex of space system use modeling, given its employment as part of automation equipment units at control centers of the RF Armed Forces (RF AF).

Однако мнемокоды большинства команд для основных типов микропроцессоров совпадают или отличаются незначительно, так как они являются сокращениями соответствующих английских слов, определяющих выполняемую операцию. В дальнейшем для демонстрации будут использоваться мнемокоды команд, принятые для процессоров Pentium. Основной командой этой группы является команда MOV, кото рая обеспечивает пересылку данных между двумя регист рами или между регистром и ячей кой памяти. В некоторых микропроцессорах реализуется пересылка между двумя ячейками памяти, а также групповая пересылка содержимого нескольких регистров в память или их загрузка из памяти. Например, микропроцессоры семейства 68ххх компании « Motorola» выполняют команду MOVE, обеспечивающую пересылку из одной ячейки памяти в другую, и команду MOVEM, которая производит запись в память или загрузку из памяти содержимого заданного набора регистров (до 16 регистров). Команда XCHG производит взаимный обмен содержимым двух регистров процессора или регистра и ячейки памяти. Команды ввода IN и вывода OUT реализуют пересылку данных из регистра процессора во внешнее устройство или прием данных из внешнего уст ройства в регистр. В этих коман дах задается номер интерфейсного устройства (порта ввода-вывода), через которое про изводится передача данных. Многие микропроцессоры не имею т специаль ных команд для обращения к внешним устройствам. В этом случае ввод и вывод данных в системе выполняется с помощью команды MOV, в которой задается адрес требуемого интерфейсного устройства. Таким образом, внешнее устройство адресуется как ячейка п амяти, а в адресном пространстве выделяется определенный раздел, в котором распо лагаются адреса подключенных к системе интерфейсных устройств (портов).

1.2.1 Представление информации в микропроцессоре Большинство микропроцессоров выполняют об работку следующих единиц данных:  бит (минимальная единица информации, принимает значение «0» или «1»);  байт (8 бит);

Все функциональные блоки проходят через интенсивные стресс-тесты. В общем, процесс производства чип ов состоит из нескольких шагов обработки подложек. Сюда входит и создание самих подложек, которые в итоге будут разрезаны на отдельные кристаллы. Все начинается с выращивания монокристалла (рис. 1.3), для чего затравочный кристалл внедряется в ванну с рас плавленным кремнием, который находится чуть выше точки плавления поликристаллического кремния. Важно, чтобы кристаллы росли медленно (примерно день), чтобы гарантировать правильное расположение атомов. Поликристаллический или аморфный кремний состоит из мн ожества разномастных кристаллов, которые приведут к появлению нежелательных поверхностных структур с плохими электрическими свойствами. Когда кремний будет расплавлен, его можно легировать с помощью других веществ, меняющих его электрические свойства. Весь процесс происходит в герметичном помещении со специальным воздушным составом (рис. 1.4), чтобы кремний не окислялся. Монокристаллы кремния Монокристалл разрезается на «блины» с помощью кольцевой алмазной пилы, которая очень точная и не создае т крупных неровностей на поверхности подложек. Конечно, п ри этом поверхность подложек все равно не идеально плоская, поэтому нужны дополнительные операции. Сначала с помощью вращающихся стальных пластин и абразивного материала (такого, как оксид алюминия) снимается толстый слой с подложек (процесс называется притиркой). В результате устраняются неровности размером от 0,05 мм до, примерно, 0,002 мм (2 000 нм). Затем следует закруглить края каждой подложки, поскольку при острых кромках могут отслаиваться слои. Далее используется процесс травления, когда с помощью разных химикатов (плавиков ой кислоты, уксусной кислоты, азотной кислоты) поверхность сглаживается еще примерно на 50 мкм. Физически поверхность не ухудшается, поскольку весь процесс полностью химический.

МЕТОДИЧЕСКИЙ ПОДХОД К МОДЕЛИРОВАНИЮ ПРИМЕНЕНИЯ КС В ИНТЕРЕСАХ ИНФОРМАЦИОННОГО ОБЕСПЕЧЕНИЯ ЦЕНТРОВ УПРАВЛЕНИЯ ВС РФ33ВОЕННАЯ МЫСЛЬ · № 1 — 2022 ния и необходимости непрерывного наполнения библиотеки алгоритмов и программ, а также потребности в повышении квалификации соответствующих ДЛ ЦУ ВС РФ задача разработки и применения единых технологий моделирования КС является крайне актуальной.В соответствии с ведущимися научно-исследовательскими и опытно-конструкторскими работами (НИОКР) основными задачами моделирования КС являются4:• оценка космической обстановки, прогноз ее развития и выдача потребителям информации о ней;• обеспечение запуска космических аппаратов и применения орбитальной группировки Российской Федерации по назначению;• оценка уязвимости отечественной орбитальной группировки;• подготовка предложений по мерам противодействия потенциальным боевым космическим аппаратам иностранных государств;• обеспечение потребителей информацией о применении иностранных космических систем в обеспечении (ведении) боевых действий в других средах;• формирование перечня опасных космических систем и космических аппаратов иностранных государств для ведения тщательного контроля за ними;• детализация обстановки и выдача потребителям информации о космических аппаратах иностранных государств, имеющих возможность уничтожения наземных и морских объектов из космоса.В Вооруженных Силах РФ основными организациями, осуществляющими военно-научное сопровождение технических решений в области моделирования космических систем и средств, являются научно-исследовательские центры Центрального научно-исследовательского института Воздушно-космических сил, а также Военно-космическая академия имени А.Ф. Можайского.Ведущие зарубежные компании не менее активно внедряют технологии моделирования космических средств, обладающие свойством кроссплатформенности, т. предназначенные для работы на нескольких аппаратных платформах и/или операционных системах.

93 Проектирование на концептуальном уровне возлагается на проектировщика и слабо связано с автоматизацией. Исходные данные для проектирования на этом этапе содержат требования к основным технико -экономическим показа телям: производительности, энер гопотреблению, стоимости, надежности, конструктивным и другим параметрам. Кроме того, для управляющих систем должны быть определены реализуемые алгоритмы управления, для универсальных систем – классы выполняемых задач. На этом уровне, исходя из требуемого функционирования устройства, проектировщик осуществляет разбиение проекта на части, определяет множества входных и выходных сигналов (как устройства в целом, таки его составных частей), их характер и взаимосвязь, а также решает отдельные вопросы реализации сост авных частей. Основным результа том этого этапа является разбиение алгоритмов работы системы на две составляющие для реализации программным и аппаратным обеспечением выбранного типа МП ядра, а также выделение задач, требующих для своего выпол нения разработки нетипового обо рудования, как ц ифрового, так и аналогового. Прежде всего должен быть решен основной вопрос этого этапа – вопрос о технической реализации микропроцессорного ядра (будет ли он автономен или встроен в БИС ПЛ; если встроен, то каким образом). МП -ядро может быть реализовано как библиотечный элемент или как БИС, относящаяся к типу SOPC. Результаты концептуального этапа позволяют перейти к следующим этапам проектирования. Порядок работы по параллельным ветвям п роцедуры проектирования произволен и может во времени выполняться ка к параллельно или последовательно, так и в произ вольных комбинациях. Более того, даже этап конструкторско -технологического проектирования может начинаться (благодаря перепрограммируемое результатов любой ветви проектирования) до получения окончательных рез ультатов проектирования отдельных фрагментов устройства. Следует отметить схожесть процедур проектирования по всем параллельным ветвям. Как разработка программного обеспечения для МП - (МК) ядра, так и разработка дискретной и аналоговой частей проекта могут рассматриваться как последовательность трех этапов. Ввод исходной для проектирования информации (спецификация работ этапа). Верификация (тестирование) полученных результатов. Конкретное содержание этапов для аппаратной и программной ч астей проекта (а тем более цифровой и аналоговой частей) естественно различное. Компиляция аппаратной части проекта приводит к синте зу устройства (или устройств) в базисе выбранных элем ентов (со стандартной и/или

В микропроцессорных системах, управляющих определенными о бъектами с использованием фиксированных или редко изменяемых прогр амм, для их хранения также обычно используется ПЗУ (память ROM – Read-Only Memory) или репрограм мируемое ПЗУ (па мять EEPROM – Electrically Erased Programmable Read -Only Memory или флэш-память).

Недостатком этих плат является их специализация на программирование одной или нескольких однотипных моделей микроконтроллеров или микросхем памяти. При исполь зовании большой номенклатуры таких изделий целесообразно применять универсальные программаторы, которые выпускаются рядом зарубежных и российских производителей. Универсальные программаторы работают под управлением компьютера и имеют два варианта конструктивной реализации:  в виде пла ты расширения, размещаемой внутри управляющего компьютера, с которой соединяется внешний коммутационный блок, име ющий панельки для включения про граммируемых изделий (микроконтроллеров или микросхем ПЗУ);  в виде отдельного устройства, имеющего на кор пусе па нельки для включения про граммируемых изделий, которое подключается к последовательному или параллельному порту компьютера (рис.

Усложненные варианты PAL некото рые производители называют схемами GAL (Generic Array Logic).

61 проверяет состояние модуля ввода -вывода с целью проверки завершения операции ввода-вывода. Таким образом, процессор непосредственно управляет операциями ввода вывода, включ ая опознание состояния устройства, пересылку команд чтения записи и передачу данных. Процессор посылает необходимые команды контроллеру ввода-вывода и переводит текущий процесс в состояние ожидания завершения операции ввода -вывода. Недостатки такого метода – большие потери процессорного времени, связанные с управлением вводом-выводом. Ввод-вывод, управляемый прерываниями. Процессор посылает необходимые команды контроллеру ввода -вывода и продолжает выполнять текущий процесс, если нет необходимости в ожидании выполнения операции ввода-вывода. В противном случае текущий процесс приостанавливается до получения сигнала прерывания о завершении ввода -вывода, а процессор переключается на выполнение другого процесса. Наличие прерываний процессор проверяет в конце каждого цикла выполняемых команд. Такой ввод-вывод намного эффективнее, чем программируемый ввод -вывод, так как при этом исключается ненужное ожидание с бесполезным простоем процессора. Однако и в этом случае ввод -вывод потребляет еще значительное количество процессорного времени, потому что каждое слово, которое передается из памяти в модуль ввода-вывода (контроллер) или обратно, должно пройти через процессор. Прямой доступ к памяти (direct memory access – DMA). В этом случае специальный модуль прямого доступ а к памяти управляет обменом данных между основной памятью и контроллером ввода -вывода. Процессор посылает запрос на передачу блока данных модулю прямого доступа к памяти, а прерывание происходит только после передачи всего блока данных. В настоящее время в персональных и других компьютерах используется третий способ ввода-вывода, поскольку в структуре компьютера имеется DMAконтроллер или подобное ему устройство, обслуживающее, как правило, запросы по передаче данных от нескольких устройств ввода -вывода на конкурентной основе. DMA-контроллер имеет доступ к системной шине независимо от центрального процессора, как показано на рис. Контроллер содержит несколько регистров, доступных центральному процессу для чтения и записи (регистр адреса памяти, счетчик байтов, управляющие регистры). Управляющие регистры задают порт ввода-вывода, который должен быть использован, направление переноса данных (чтение или запись в устройство ввода-вывода), единицу переноса (побайтно, пословно), а также число байтов, которые следует перенести за одну операцию.

21 Затем функциональное ядро нужно связать с процессорной упаковкой, используя клейкий материал. Устанавливаются проводные соединения, связывающие контакты или ножки упаковки и сам кристалл. Могут использоваться золотые, алюминиевые или медные соединения (рис. Соединение контактов с выводами микросхемы Обычно ядро заключается в керамическую или пластиковую упаковку, что позволяет предотвратить повреждение. Современные процессоры оснаща ются так называемым распределителем тепла, который обеспечивает дополнительную защиту кристалла, а также большую контактную поверхность с кулером (рис.

После сохранения в стеке содержимого регистра EFLAGS процессор устанавливает в этом регистре значения признаков TF = VM = NT = 0. Единственное различие между ис пользованием шлюза ловушки и шлюза прерывания состоит в том, как процессор поступает с признаком IF. Если вызов подпрограммы обслуживания производится через шлюз прерывания, то процессор после сохранения в стеке содержимого регистра EFLAGS ус танавливает значение признака IF = 0, запрещая маскируемые прерывания. Если пере ход к подпр ограмме обслуживания осуществляется через шлюз ловушки, то значение признака IF не изменяется. Возврат из подпрограммы обслуживания прерыва ния осуществляется с помощью команды IRET. При восстановлении из стека содержимог о регистра EFLAGS действуют следующие правила:

graphics processing unit , GPU) – отдельное устройство перс онального компьютера или игровой приставки, выполняющее графический рендеринг. Современные графические процессоры очень эффективно обрабатывают и отображают компьютерную графику. Благодаря специализированной конвейерной архитектуре они намного эффективнее в обработке графической информации, чем типичный центральный процессор. Графический процессор в современных видеоадаптерах применяется в качестве ускорителя трехмерной графики. Может применяться как в составе дискретной видеокарты, так и в интегрированных решениях (встроенных в северный мост, либо в гибридный процессор). Вероятностный процессор оперирует вероятностями на аппаратном уровне. Математический аппарат основан на теореме Байеса. В некотором роде, вероятностный процессор реализует аналоговые вычисления на технологии КМОП. Подобный подход, теоретически, позволяет эффективно реализовать приближенные вычисления, основанные на нечеткой логике или нейронных сетях. Вероятностный процессор относится к специализированным процессорам и, преимущественно, буде т использоваться в системах распознавания образов. Например, в биометрии, для диагностики заболеваний, в различных системах мониторинга, в системах технического зрения, системах распознавания голоса, фильтрации спама, фишинга, определении кредитоспособност и заемщиков и многих других задачах. Вероятностный подход также предполагает решение технических задач стохастическими методами (методами Монте -Карло), с любой требуемой точностью решения. Предполагается, что вероятностный процессор может использоваться в современных компьютерах в качестве еще одного сопроцессора наряду с графическим процессором, сигнальным процессором или ПЛИС (FPGA), обеспечивая высокую скорость и эффективность решения широкого круга специализированных задач.

74 звукогенератора не занимаются обработкой звуковых да нных (основная функция процессора), они генерируют звук по одному определ енному аппаратному алгоритму, согласно указаниям внешнего по отношению к н им процессора системы. Название звуковой процессор может применяться к цифровым сигнальным процессорам, испол ьзуемым для обработки звука (например, создания эффекта программно -управляемого эхо), а также к микросхемам звукогенераторов, содержащих в своем составе микропроцессор.

39 1.2.2 Способы адресации микропроцессора Различные типы микропроцессоров используют следующие основные способы адре сации операндов, реализация которых обеспечивается в соответствии с кодом адреса (КАД), содержащимся в команде. Операнд выбирается из ячейки памяти, адрес которой содержится в команде. Операнд выбирается из р егистра РЗУ, номер (имя) которого указан в команде. Операнд выбирается из ячейки п амяти, адрес которой содержится в регистре РЗУ, указанном в команде. Косвенно-регистровая адресация со смещением. Операнд выбирается из ячейки памяти, адрес которой является суммой содержимого указанного в команде регистра РЗУ и заданного в команде смещени я (смещение может быть положительным или отрицательным числом). Косвенно-регистровая адресация с индексированием и смещением. Операнд выбирается из ячейки памяти, адрес которой является суммой содержимого указанного в команде регистра, индексного регистра и заданного в команде смещения. В некоторых микропроцессорах имеются специальные индексные регистры для реализации этого способа адресации. Другие микропроцессоры используют в качестве индексного какой -либо регистр РЗУ, номер или имя которого указывается в команде. Частным случаем этого способа является индексная адресация, когда адрес образуется суммированием специального индексного регистра и заданного в команде смещения. Операнд выбирается из ячейки памяти, адрес которой являетс я суммой текущего содержимого программного счетчика PC и заданного в ко манде смещения (числа со знаком). Отметим, что во многих микропроцессорах этот способ адресации используется не для адресации операнда, а для формирования адреса команды, к которой переходит программа при выполнении команд ветвления. При этом сформированный таким образом адрес загружается в PC, обеспечивая выборку требуемой следующей команды. В этом случае о перанд непосредственно содержится в поступившей коман де, размещаясь следом за кодом операции (КОП). Рассмотрим основные особенности данных способов адресации. Прямая адресация обеспечивает обращение к любой ячейке ОЗУ. Однако для задания адреса операнда команда должна содержать необходимое количество байт ад реса (до четырех), что вызывает увеличение объема памяти программ и времени выборки команды из памяти.

68 исключения имеет мнемоническое обозначение. Исклю чения делятся на ошибки (faults), ловушки (traps) и отказы (aborts). Ошибки выявляются и обслуживаются до выполнения ко манды, которая является причиной их возникновения. Примером ошибки может служить ситуация, возникающая при обращении очередной кома нды к странице или сегменту, от сутствующим в адресуемой оперативной памяти (обращение к сегменту или странице, для которых значение бита присутствия Р = 0). При ошибке в качестве адреса возврата к пре рванной программе сохраняется адрес команды, выпол нение которой вызвало данное ис ключение. Ловушка – это исключение, которое выявляется после выполнения команды. Примером ловушки может служить команда INTO, кото рая реализует исключение с номе ром n = 4 в случае, если в регистре EFLAGS значение признака переполнения OF = 1. При обслуживании ловушки в качестве адреса возврата со храняется адрес команды, следующей за командой, вызвавшей данное исключение. Ошибки и ловушки предусматривают продолжение нормального выполнения программы после завершения их обслуживания. Отказы сообщают о возникновении серьезных нарушений в работе системы. Примером таких нарушений может быть неисправность аппаратуры или возникновение исключения при обслуживании ранее поступившего запроса. Отказ не предусматрива ет продолжение выпол нения прерванной программы, поэтому при его возникнов ении обычно производится повтор ный запуск (Restart) процессора. Если одновременно произошло несколько событий , требующих обслуживания с помо щью механизма прерываний, то процессор обрабатыв ает такие события последовательно, в соответствии с их приоритетами (1 – высший приоритет, 8 – низший). Отметим, что в этом приоритетном списке у казан также ряд входных управля ющих сигналов. При поступлении этих сигналов одновременно с другими событиями, вызывающими переход на обслужива ние прерываний или исключений, процессор реагирует в соответствии с их приоритетами. Обработка прерываний в реальном режиме. Элементами таблицы являются вектора прерываний – указатели входа в подпрограммы обслуживания различных типов прерываний. Вектор пре рывания в реальном режиме содер жит 4 байта, а р азмер всей таблицы составляет 102 4 байт, если процессор обеспечивает обслуживание всех 256 возможных видов прерывания. При возникновении прерывания процессор производит следующие действия:

It proposes the techniques of operational formation of problem-oriented cross-platform applications.

67 Процессоры семейства Р6 содержат ряд средств, которые обеспечивают выполнение данных процедур. Прерываниями (interuption) являются штатные сит уации, возникающие при поступлении соответствующих команд (программные прерывания ) или внешних сигналов (аппара тные прерывания). Исключениями (exeption) являются нештатные ситуации (ошибки), воз никающие при работе процессора. При выявлении таких ошибок соответствующие блоки, контролирующие работу процессора, вырабатывают внутренние сигналы запроса, обеспечивающие вызов необходимой подпрограммы обслуживания. Процессор способен обеспечить обслуживание 256 р азличных типов исключений и пре рываний. Соответствующая обработка информации при возникновении таких ситуаций выполняется с помощью специальных подпрограмм обсл уживания, начальные адреса (век тора) которых хранятся в таблице, размещаемой в памяти системы. Запросы на выполнение аппаратных прерываний поступают от внешних устройств на входы LINTO/INTR, LINT1/NMI процессора. В мультипроцессорной системе, когда включен вну тренний контроллер локальных прерываний APIC, сигналы LINT 1 -0 на этих входах опре деляют номер запроса, поступающего от других устройст в (процессоров) системы. В однопроцессорной системе, когда функционирование контроллера APIC запрещено, эти входы служат соответственно для подачи маскируемых INTR и немаскируемых NMI запросов прерывания от различных внешних устройств. На вход INTR поступают маскируемые запросы прер ываний, обслуживание которых мо жет быть запрещено (замаскировано) путем установки значения признака IF = 1 в регистре состояний EFLAGS. Обычно такой запрос поступает от внешнего устройства через специ альный контроллер прерываний, который собирает запросы от различных внешних устройств и передает их для обработки процессору, указав для них также ном ер n, определяющий вид прерывания (INTR n). На вход NMI поступает запрос на немаскируемое прерывание, процедура обслуживания которого имеет фиксированный номер n = 2. Зна чение признака IF в регистре EFLAGS не влияет на обс луживание процессором немаскируемого запроса прерывания NMI. При работе процессора в мультипроцессорной системе, когда функционирует контроллер локальных прерываний APIC, запросы аппаратных пре рываний (маскируемые и немаскируемые) поступают по специальной АР IС-шине. Программные прерывания реализуются при поступлении команд: INT n, INT3, INTO, BOUND. Для исключений зарезервированы первые 32 вектор а в таблице прерываний, из которых в процессорах семей ства Р6 используются только 17 .

В связи с более простой схемотехникой по сравнению с универсальными сигнальными процессорами стоимость медийных процессоров достаточно низкая, а значение показателя «производ ительность / стоимость» на два - три поря дка больше. Пиковое значение производительности ме дийных процессоров составляет несколько миллиардов целочисленных операций в секунду.

96 2.3.2 Структура и способы проектирования программного обеспечения При разработке ПО для универсальных микропроцесс орных систем используется достаточно широкий набор языков высокого уровня, для кото рых имеются соответствующие ком пиляторы. Чаще всего используются языки С, C++, FORTRAN, Pascal, Forth. Для решения ряда задач применяются языки поддержки искусственного интеллекта Ada, Modula-2 и некоторые другие. При программировании управляющих си стем чаще всего используются ма шинноориентированный язык Ассемблера или языки С /C++. Язык Ассемблера применяется в случаях, когда им еются жесткие ограничения на объем требуемой памяти или на время выполнения программных модулей. Такие случаи являю тся достаточно типичными при ре шении задач управления, поэтому Ассемблеры являются одним из основных средств созда ния ПО для микроконтроллерных систем. В тех случаях, когда указанные ограничения не очень жесткие, для создания ПО используются языки высокого уровня (обычно С / C++). Автономная отладка ПО выполняется с помощью симулятора – программной модели используемого микропроцессора или микро контроллера. На этом э тапе разработчики ис пользуют широкий набор средств программирования – компиляторы, ассемблеры, дисас семблеры, отладчики, редакторы связей и другие, без которых практически невозможно создание работоспособного ПО в течение ограниченных сроков выполнения проекта. Как отмечалось выше, комплексная отладка АС и ПО является наиболее сложным и ответственным этапом создания системы. На этом этапе разработчик использует весь набор программных и аппаратных средств, применяющихся для автономной о тладки АС и ПО, а также ряд специальных средств комплексной отла дки. К числу таких средств отно сятся схемные эмуляторы – специализированные устройства, включаемые вместо микро процессора или микроконтроллера прототипной системы и обеспечивающие возможность контроля ее работы с помощью персонального компьюте ра, связанного со схемным эмуля тором. Схемные эмуляторы являются наиболее эффективным средством комплексной отладки систем. Одним из наиболее эффективных средств комплексной отладки микроконтроллерных сис тем являются эмуляторы ПЗУ (рис. Комплект эмуляции AT89CX051 содержит: микроконтроллер семейства MCS -51, переходную плату, эмулятор ПЗУ выполнен в виде ISA -карты. Это устройство включается вместо ПЗУ прототипной системы и работает под управлением подключенного к нему персонального компьютера.

floating point unit (FPU)) – часть процессора для выполнения широкого спектра математических операций над вещественными числами. Микросхемы звукогенераторов – специализированные микросхемы для генерации звука. Они могут использоваться для воспроизведения звуковых эффектов и синтезированной музыки в компьютерах, игровых системах (консолях, автоматах) и бытовой технике. Анг лоязычное назв ание для микросхем этого типа – sound chip , программируемый генератор звука. Они могут быть полностью цифровыми, полностью аналоговыми, или смешанного типа. В их состав могут входить генераторы частоты (обычно основанные на делении входной тактовой частоты с программно -изменяемым коэффициентом деления), контроллеры огибающей, схемы воспроизведения семплов, фильтры, и усилители сигнала. Звукогенераторы можно разделить на две основные категории – непосредственно синтезирующие звук, и воспроизвод ящие заранее оцифрованные звуки. Первая категория также может быть разделена по принципу работы на простые синтезаторы частот , построенные на делителях частоты с дополнительными компонентами , и синтезаторы, использующие метод частотной модуляции (FM -синтез, основан ный на взаимной модуляции нескольких генераторов звука). В русском языке микросхемы звукогенераторов нередко называют звуковыми (со)процессорами. Однако, это определение некорректно – микросхемы

26 Операционный блок, включающий в себя арифметико -логическое устройство (АЛУ), регистр временного хранения, аккумулятор, регистр аккумулятора, регистр признаков (флагов) и блок десятичной коррекции. АЛУ является основой операционного блока, именно в нем выполняются арифметические и логические операции. Необходимость в дополнительных регистрах связана с тем, что АЛУ является комбинационной логической схемой, не имеющей памяти и, следовательно, для получения результата на его выходе необходимо присутствие входных данных на его входах. Однако информационная магистраль, по которой передаются данные, только одна. По этой магистрали последовательно передаются исходные операнды и фиксируются в регистрах. Необходимость в паре – аккумулятор и регистр аккумулятора вызвана тем, что данный микропроцессор является аккумуляторной машиной. Один из операндов всегда помещается в аккумулятор, результат после выполнения также помещается в ак кумулятор (отсюда и название этого регистра). Все операции выполняются в несколько этапов. Один из операндов по внутренней магистрали данных передается в аккумулятор и из него переписывается в регистр аккумулятора. Затем по данной магистрали в регистр временного хранения передается второй операнд. Магистраль освобождается для передачи результата в аккумулятор. Блок десятичной коррекции (БДК) введен для возможности выполнения арифметических операций над двоично -десятичными числами. В результате сложения двух двоично-десятичных чисел результат может оказаться не двоично-десятичным. Можно специальной командой скорректировать этот результат. Для этой коррекции как раз и используется флаг дополнительного переноса. Подчеркнем, что возможна только коррекция результ ата после операции, но не преобразование двоичного кода в двоично-десятичный. Внутренняя информационная магистраль через буфер шины данных соединяется с внешней двунаправленной 8 -разрядной шиной данных. Буфер данных предназначен для переключения шины на пр ием данных в процессор или передачу из процессора, т.е. Кроме того, выходы этого буфера можно перевести в третье состояние, т.е. состояние высокого сопротивления, полностью отключив процессор от шины данных. Следующим важным бл оком микропроцессора является блок регистров, который в свою очередь можно разделить на две группы – регистры общего назначения и регистры-указатели. Регистры общего назначения (РОН) B, C, D, E, H, L предназначены для хранения наиболее часто используемых д анных. Содержимое этих регистров микропроцессор может использовать не обращаясь к памяти, т.е.

62 Перед выполнением операции обмена ЦП программирует DMA-контроллер, устанавливая его регистры (шаг 1, рис. Затем ЦП дает команду дисковому контролеру прочитать внести данные во внутренний буфер и проверить контрольную сумму. После этого процессор продолжает свою работу. Когда данные получены и проверены контроллером диска, DMA может начинать работу. DMA-контроллер начинает перенос данных, посылая дисковому контроллеру по шине запрос чтения (шаг 2). Адрес памяти уже находится на адресной шине, так что контроллер знает, куда пере сылать следующее слово из своего буфера. Запись в память является еще одним стандартным циклом шины (шаг 3). Когда запись закончена, контроллер диска посылает сигнал подтверждения контролеру DMA (шаг 4). Затем контроллер DMA увеличивает используемый адрес памяти и уменьшает значение счетчика байтов. После этого шаги 2, 3 и 4 повторяются, пока значение счетчика не станет равным нулю. По завершению цикла копирования контроллер DMA инициирует прерывание процессора, сообщая ему о завершении операции ввода-вывода. Работа DMA Необходимо обратить внимание на работу шины в этом процессе обмена данными. Шина может работать в двух режимах: пословном и поблочном. В первом случае контроллер DMA выставляет запрос на перенос одного слова и получает его. Если процессору также нужна эта шина (не забывайте, в основном он работает с кэш-памятью), ему приходится подождать. Этот механизм называется захватом цикла, потому, что контроллер устройства периодически забирает случайный цикл шины у центрального процессора, слегка тормозя его. 2.3 показана позиция цикла команд, в которых работа процессора может быть приостановлена.

Наиболее широко пр и отладке систем используются ЛА типа 16500В (Hewlett - Packard), 3001GPX и 3002GPX (Tektronix), РМ3580 (Fluke), CLAS 4000 (Embedded Performance/ Biomation). Их стоимость составляет несколько тысяч долларов. Чтобы обеспечить разработчиков недорогими средств ами контроля состояния системы, ряд производителей выпускает анализаторные платы, подключаемые к базово му пер сональному компьютеру, который программируется на выполнение значительной части функций ЛА. При этом для хранения последовательности состояний испо льзуется память базового компьютера. Визуализация временных диаграмм в символьной или графической форме выполняется на дисплее его монитора, можно выполнить распечатку результатов измерений на принтере. Базовый компьютер управляет процессом измерения и про изводит обработку результатов. Благодаря этому анализаторная плата оказывается достаточ но простой и на порядок более дешевой, чем автономный ЛА.

It also formulates suggestions for substantiating development trends in the computer modeling of space systems used in automated information systems based on the results of military-scientifi c accompaniment of automated troop control assets, and also on the results of modeling technology introduction in the work of offi cials at RF AF control centers.КЛЮЧЕВЫЕ СЛОВА KEYWORDSComputer modeling, space systems, control centers, automated information systems, information support.Компьютерное моделирование, космические системы, центры управления, автоматизированные информационные системы, информационное обеспечение.Г енерал-майор А.Н. НЕСТЕЧУК,кандидат технических наукПолковник А.В. ЧАРУШНИКОВ,доктор военных наукМайор А.В.

Ведущим российским производителем микропроцессорной техники является компания МЦСТ (закрытое акционерное общество (ЗАО) «МЦСТ») – специализирующаяся на разработке универсальных микропроцессоров, микроконтроллеров и управляющих вычислительных комплексов. Имеет опыт разработки супер -ЭВМ «Эльбрус». Также в компании ведутся разработки оптимизирующих и двоичных компиляторов, операционных систем. МЦСТ разработаны комплексы: • SPARC: Эльбрус-90микро (доступен в нескольких исполнениях); • ELBRUS: Эльбрус-3М1, КМ-4. Микропроцессоры VLIW/EPIC архитектуры ELBRUS (Е2К): • Эльбрус E2K (1891ВМ4Я, техпроцесс 0,13 мкм, 300 МГц, 50 млн транзисторов, до 23 инструкций за такт) 2007 год; • Эльбрус-S (1891ВМ5Я, техпроцесс 90 нм, 500 МГц, 90 млн транзисторов, 190 мм²) 2010 год. Микропроцессоры архитектуры SPARC: • МЦСТ-R100 (техпроцесс 0,5 мкм, 100 МГц);

Команды CLC, STC осуществляют установку значений признака переноса CF = 0, CF = 1, а команда СМС вызывает инвертирование значения этого пр изнака. Так как признаки определяют ход выполнения программы при условных переходах, то команды изменения признаков обычно используются для управления программой.

Таким образом, определенная выше открытая модель взаимосвязи МК ( Open Microcontrollers/Microprocessors Interconnection – OMI-модель), сформирован ная в ходе эволюции микропро цессорных средств, находится в р усле магистрального развития ин формационных систем и является гарантом эффективности применения микропроцес сорных средств, удовлетворяющих требованиям этой модели. 1.1.2 Современные технологии полупроводникового производства При создании микросхем выделяют следующие уровни проектирования:  логический – логическая схема (логические инверторы, элементы ИЛИНЕ, И-НЕ и т.п.);  схемо- и системотехнический уровень – схемо- и системотехнические схемы (триггеры, компараторы, шифраторы, дешифраторы, АЛУ и т.п.);

Широкое использование САПР на всех этапах проектирования приводит к тому, что современные подходы к разбиению процесса проектирова ния связывают с различием как технических средств (инструментария), привлекаемых дл я создания проекта, так и техни ческих средств, используемых в качестве компонентов п роекта и технологических особенностей реализации конечного продукта. Хотя общая мет одология процесса проектирова ния не зависит от варианта разбиения процесса проектирования на отдельные уровни, содержание, а также методы и средства проектирования для различных уровней оказыва ются очень специфичными и существенно зависят как от типа применяемой элементной базы, так и от способа реализации (изготовления) конечного продукта. Классификация методик проектирования электронных схем Первым фактором, влияющим на специфику проектирования, является тип обрабатываемой информации и связанные с ним методы и способы ее обработки. Проект или его отдельные фрагменты могут включать аналоговые , аналого-цифровые и/или цифро -аналоговые элементы, строиться на основе дискретных (цифровых) компонентов или опи раться на встроенные микропроцессорные средства. Отсюда следу ет многообразие вариантов проектирования, эти варианты в современных технологиях часто называют потоком проектирования ( Design Flow). Проектирование при этом может быть цифровым, аналого-цифровым, смешанным цифровым и программным, а также проектированием с ориентацией на синтезируемые цифровые или аналоговые схемы. Возможны и другие комбинации этих вариантов. Следующим определяющим фактором является выбор технической базы для реализации проекта, а также технологического способа реализации самого проекта. Ка к правило, одно и то же электронное изделие может быть реализовано различными способами. Здесь должен быть дан ответ на вопрос - будет ли проект п остроен на стандартных микросхе мах, либо будут использоваться те или иные специализированные ИС и/или комбинац ия различных типов ИС. Классификация ИС приведена на рис. Способ изготовления ИС не определяет типы обрабатываемой информации.

24 фиксируется лишь код операции (КОП) – часть кода команды, определяющая выполняемое действие и способ адресации операндов. Регистры операндов служат для хранения данных в процессе их обработки, позволяют избегать постоянных обращений к памяти. В современных процессорах количество регистров операндов может достигать 10 –15 штук. По сути, они образуют внутреннюю память процессора. В однокристальных микроконтроллерах количество регистров операндов доведено до нескольких десятков, и применительно к ним вводится понятие регистрового файла. Некоторые из регистров операндов могут использоваться также для хранения или формирования адресов других операндов, т.е. на их основе реализуется механизм косвенной адресации данных в памяти. Данные, размещенные в регистрах операндов, поступают на обработку в арифметико -логическое устройство (АЛУ). В некоторых типах процессоров один из регистров операндов всегда является и приемником результата операции в АЛУ. Такой регистр принято называть регистром-аккумулятором. PC – programmingcounter) – регистр, в котором при выборке или выполнении текущей команды формируется адрес следующей команды. Модификация со держимого регистра PC – это средство управления последовательностью выборки команд из памяти и, следовательно, управления ходом вычислительного процесса (т.е. реализация ветвлений в алгоритмах). SP – stackpointer) – регистр, в которо м при выполнении программы хранится адрес границы той области памяти, для которой программист использует принцип последовательного доступа к данным (так называемый протокол работы со стеком). Регистр адреса – регистр, в котором формируется адрес любого уст ройства, внешнего по отношению к процессору (ячейки памяти или порта ввода вывода), перед обращением к этому устройству. Данный регистр необходим, поскольку источником адресной информации могут являться различные регистры процессора. При этом регистр адрес а играет роль накапливающего буфера, из которого адресная информация выдается на внешнюю шину адреса. F – flags) – это элемент внутренней памяти, в котором в виде отдельных битов фиксируются признаки, характеризующие результат опер ации, выполненной в АЛУ (нулевой результат, переполнение разрядной сетки и т.п.). Арифметико-логическое устройство (АЛУ) – функциональный блок процессора, предназначенный для реализации действий по обработке данных. Результат операции, выполненной в АЛУ, з аносится в один из регистров или пересылается в память (в зависимости от команды). В регистре признаков автоматически формируются признаки, характеризующие этот результат.

Диаграмма, управляющих сигналов записи SW Расширение числа управляющих сигналов выполняется с помощью специального 8-разрядного слова состояния SW (Status word), которое выдается на шину данных в такте Т1 каждого машинного цикла и фиксируется во внешнем регистре RG SW – регистре слова состояния (рис. Запоминание слова состояния в регистре осуществляется по низкому потенциалу строба STSW, формируемого элементом И-НЕ. Слово состояния SW кодирует тип машинного цикла, определяет вид информации и направление е е движения чере з шину данных (D BUS). Оно порождает 11 типов машинных циклов и соответствующие им управляющие сигналы. Временные характеристики этих сигнало в задаются стробами DBIN или WR, а смысл определяется разрядами слова SW. В зависимости от направления передачи инф ормации, по отношению к микропроцессору, машинные циклы можно разделить на циклы чтения и циклы записи табл.1.2, стробируемые, соответственно, сигналами DBIN или WR. Существуют еще два типа машинных циклов, задаваемых словом состояния, которые не связаны с процессами чтения или записи. Это цикл останова и цикл прерывания при останове. Формирование сигналов управления микросистемой, определяемых содержимым слова состояния, осуществляется внешними логическими элементами, которые образуют системный контроллер. Эта схема содержит регистр слова состояния RG SW, элементы И-НЕ и логические инверторы. В начале машинного цикла, слово состояния SW, выдаваемое процессором по шине данных, запоминается в регистре RG SW. А затем, в зависимости от комбинации содержимого от дельных разрядов SW и формируемых процессором стробов DBIN или WR , выходные элементы И -НЕ вырабатывают специализированные стробы для чтения из памяти, из устройств ввода -вывода и из системы прерываний, или для записи в память и в устройства ввода вывода. Инверторы обеспечивают изменение логических уровней и буферизацию выходных сигналов микропроцессора.

15 покрывающая поверхность кремниевой пластины. В этой пленке различными методами формируются окна необходимой формы. Основным элементом биполярных ИС является n –p–n-транзистор (биполярный транзистор), и на его изготовление ориентируется весь технологический цикл. Все другие элементы, по возможности, изготавливаются с этим транзистором без дополнительных технологических операций. Основным элементом МДП (МОП) ИС является МДП (МОП)-транзистор. Элементы биполярной ИС необходимо изолировать друг от друга, чтобы они не взаимодействовали через кристалл. Элементы МДП (МОП) ИС не нуждаются в специальной изоляции друг от друга. В этом одно из главных преимуществ МОП ИС по сравнению с биполярными. В последнее время широкое распространение в качестве материала подложки получил арсенид-галлий. В полупроводниковых микросхемах на такой основе активными элементами служат полевые транзисторы с управляющим переходом металл-полупроводник (МЕП-транзисторы). Размеры фрагментов элементов ИС составляют десятые и сотые доли микрометра (современные технологии достигли 10–40 нанометрового уровня). Производство чипов зак лючается в наложении тонких слое в со сложным «узором» на кре мниевые подложки. Сначала создае тся изолирующий слой, который работает как электрический затвор. Сверху затем накладывается фоторезистивный материал, а нежелательные участки удаляются с п омощью масок и высокоинте нсивного облучения. Когда облуче нные участки будут удалены, под ними откроются участки диоксида кремния, который удаляется с помощью травления. После этого удаляется и фоторезистивный материал, и мы получаем определенную структуру на поверхности кремния. Затем проводятся дополнительные процессы фотолитографии, с разными материалами, пок а не будет получена желаемая тре хмерная структура. Кажды й слой можно легировать определе нным веществом или ионами, меняя электрические свойства. В ка ждом слое создаются окна, чтобы затем подводить металлические соединения. Что касается производства подложек, то из цельного монокристалла цилиндра их необходимо нарезать тонкими «блинами», чтобы потом легко разрезать на отдельные кристаллы процессоров. Н а каждом шаге производства выполняется сложное тестирование, позволяющее оценить качество. Для тестов каждого кристалла на подложке используются электрические зонды. Наконец, подложка разрезается на отдельные ядра, нерабочие ядра сразу же отсеиваются. В зависимости от характеристик, ядро становится тем или иным процессором и заключается в упаковку, которая облегчает установку процессора на

72 справится сопроцессор, ему выд аются данные и команды, а главный микропроцессор ожидает результаты. Сопроцессоры, большей частью использующиеся с РС, являются математическими сопроцессорами. Математические сопроцессоры называют еще процессорами с плавающей точкой. Сопроцессор и главный микропроцессор могут работать на разных тактовых частотах. Сопроцессоры могут работать от тактового генератора драйверов микропроцессоров или от специального предназначенного для сопроцессора генератора. Вместе с любыми процессорами фирмы Intel (и их анало гами) могут использоваться сопроцессоры. В процессорах Pentium и 486 они расположены на том же кристалле, что и сам процессор. Сопроцессоры выполняют операции с плавающей запятой, которые потребовали бы от основного процессора больших затрат машинного врем ени. Выигрыш можно получить только при выполнении программ, написанных с расчетом на использование сопроцессора. Сопроцессоры выполняют такие сложные операции, как деление длинных операндов, вычисление тригонометрических функций, извлечение квадратного корня и нахождение логарифма, в 10 –100 раз быстрее основного процессора. Точность результатов при этом значительно выше обеспечиваемой вычислителями, входящими в состав самих процессоров. Операции сложения, вычитания и умножения выполняются основным процессор ом и не передаются сопроцессору. Система команд сопроцессора отличается от системы команд процессора. Выполняемая программа должна сама определять наличие сопроцессора и после этого использовать написанные для него инструкции; в противном случае сопроцессо р только потребляет ток и ничего не делает. Большинство современных программ, рассчитанных на использование сопроцессоров, обнаруживают его присутствие и используют предоставляемые возможности. Наиболее эффективно сопроцессоры используются в программах со сложными математическими расчетами: в электронных таблицах, базах данных, статистических программах и системах автоматизированного проектирования. В то же время при работе с текстовыми редакторами сопроцессор совершенно не используется. Различают следующие виды сопроцессоров:  математические сопроцессоры общего назначения, обычно ускоряющие вычисления с плавающей точкой;  сопроцессоры ввода -вывода (например – Intel 8089 ), разгружающие центральный процессор от контр оля за операциями ввода -вывода или расширяющие стандартное адресное пространство процессора;

Модульный космический манипулятор ДОРЕС Уровень развития в стране роботехника зависит от научного и экономического потенциала. Поэтому ведущие страны мира, такие как США, Япония, страны Европы и РФ, вкладывают значительны е средства в развитие этой отрасли техники. Неотъемлемой частью любого современного робототехнического комплекса является система управления – «мозг», который, в свою очередь является микропроцессорной системой.

С 10 ноября 2008 года по настоящее время выпускаются Intel Core i7. Это первое семейство, в котором появилась микроархитектура Intel Nehalem, позже также использовались микроархитектуры Sandy Bridge , Ivy Bridge , Haswell.

Ее особенностью является использование очень длинных команд (до 128 бит и более), отдельные пол я которых содержат коды, обеспечивающие выполне ние различных операций. Таким образом, одна команда вызывает выполнение сразу не скольких операций параллельно в различных операционны х устройствах, входящих в струк туру микро процессора. При трансляции програм м, написанных на языке высокого уровня, соответствующий компилятор производит формирование «длинных» VLIWкоманд, каж дая из которых обеспечивает реализацию процессором целой процедуры или группы операций. Данная архитектура реализована в некоторых типах ми кропроцессоров (РА8500 компании « Hewlett-Packard», Itanium – совместная разработка « Intel» и « Hewlett-Packard», некоторые типы DSPцифровых процессоров сигналов) и является весьма перспективной для создания нового поколения сверхвысокопроизводительных процессоров. Кроме набора выполняемых команд и способов адресации важной архитектурной особенностью микропроцессоров является используемый вариант реализации памяти и организация выборки команд и данных. По этим признакам различаются процессоры с Прин стонской и Гарвардской архитектурой. Эти архитектурные варианты были предложены в конце 1940 -х годов специалистами , соответственно, Принстонского и Гарвардского университетов США для разрабатываемых ими моделей компьютеров. Принстонская архитектура, которая часто н азывается архитектурой Фон Неймана, характеризуется использованием общей оперативной памяти для хранения программ, данных, а также для организации стека. Для обращения к этой памяти используется общая системная шина, по которой в процессор поступают и кома нды, и данные. Эта архитектура имеет ряд важных достоинств. Наличие общей памяти позволяет оперативно перераспределять ее объем для хранения отдельных массивов команд, данных и реализации стека в зависимости от решаемых задач. Таким образом, обеспечивается возможность более эф фективного использования имеющегося объема опер ативной памяти в каждом конкрет ном случае применения микропроцессора. Использов ание общей шины для передачи ко манд и данных значительно упрощает отладку, тестирование и текущий контроль фу нкционирования системы, повышает ее надежность. Поэтом у Принстонская архитектура в те чение долгого времени доминировала в вычислительной технике. Однако ей присущи и существенные недостатки. Ос новным из них является необходимость последовательной выборки к оманд и обрабатываемых данных по общей системной шине. При этом общая шина становится «узким местом » (bottleneck – «бутылочное гор ло»), которое ограничивает производительность

80 Соответствие данным требованиям достигается в настоящее время благодаря специфической архитектуре сиг нальных про цессоров, проблемно ориентированной системе команд. Для сигнальных процес соров характерным является нали чие аппаратного умножителя, позволяющего выполнять умно жение двух чисел за один командный такт. В универсальных процессорах умножение обычно реализуется за несколько тактов как последовательность операций сдвига и сложения. Другой особенностью сигнальных процессоров является включение в систему команд таких операций, как умножение с накоплением MAC с указанным в команде числом выполнений в цикле и с правилом изменения индексов i и j, используемых элементов массивов А и В, инверсия бит адреса, разнообразные битовые операции. В сигнальн ых процессорах реализуется аппа ратная поддержка программных циклов, кольцевых буферов. Один или несколько операндов извлекаются из памяти в цикле исполнения команды. Реализация однотактного умножения и команд, исполь зующих в качестве операндов содержимое ячеек памяти, обусловливает сравнительно низкие тактовые частоты работы этих процессоров. Специа лизация не позволяет поднимать производительность за счет быстрого выполнения коротких команд типа R, R –> R. Этих команд просто нет в программах обработки сигналов. Сигнальные процессоры различных компаний -производителей образуют два класса, существенно р азличающихся по це не: менее дорогие микропроцессоры с обработкой данных в формате с фиксированной точкой и более дорогие микропроцессоры, аппаратно -поддерживающие операции над данными в формате с плавающей точкой. Использование в сигнальной обработке данных в формате с плавающей точкой обусловлено несколькими причинами. Для многих задач, связанных с в ыполнением интегральных и диффе ренциальных преобразований, особую значимость имеет точ ность вычислений, обеспечить которую позволяет экспоненциальный формат пр едставления данных. Алгоритмы компрессии, декомпрессии, адаптивной фильтрации в цифровой обработке сигналов связаны с опреде лением логарифмических зависимо стей и весьма чувствительны к точности представления данных в широком динамическом диапазоне. Работа с данными в фо рмате с плавающей точкой существенно упрощает и ускоряет обработку, повышает надежность программы, поскольку не требует выполнения операций округления и нормализации данных, отслеживания ситуаций потери значимости и переполнения. Платой за эт и дополните льные «комфорт и скорость» явля ется высокая сложность функциональных устройств, выпол няющих обработку данных в формате с плавающей точкой, не обходимость использования более сложных

7 1 Архитектура микропроцессоров 1.1 Общие сведения о микропроцессорах В 1971 году появился первый микропроцессор Intel 4004. Он был четырехразрядным и работал с частотой 7 50 КГц. В 1974 году появился знаменитый процессор Intel 808 0 – 8-разрядный, содержал 8 регистров общего назначения (РОН) , 16 -разрядную адресную шину, появился стэк, около 256 портов ввода/вывода. Он был р еализован в машине Altair 8800 . Советским аналогом был микропроцессорный комплект серии КР5 80, в частности, микропроцессор КР580ВМ80А. В 1978 году появилось третье поколение микропроцессоров, и опять фирма Intel оказалась лидером – кристалл 8086 стал первым микропроцессором, оперирующим 16 -разрядными словами данных. В 1983 году на основе 8-разрядного микропроцессора 6502 был разработан отечественный персональный компьютер Агат на базе компьютера Apple II. В 1982 году Intel разработала еще два микропроцессора, представлявших собой усовершенствованные варианты 8086 и 8088 – 80186 и 80188, однако получить широкого распространения они не успели, так как в том же году появился процессор 80286, ставший серьезным шагом вперед.

9 • МЦСТ-R150 (1891ВМ1, техпроцесс 0,35 мкм, 150 МГц, 2.8 млн транзисторов, 100 мм²) 2001 год; • МЦСТ-R500 (1891ВМ2, техпр оцесс 0,13 мкм, 500 МГц, 4.9 млн транзисторов, 25 мм²) 2004 год; • МЦСТ-R500S (1891ВМ3, техпроцесс 0,13 мкм, 2 ядра, 500 МГц, 45 млн транзисторов, 81 мм²) 2007 год. Прошли государственные испытания и рекомендован ы к серийному производству: • МЦСТ-R1000 (18 91ВМ6Я, техпроцесс 90 нм, 4 ядра, 1 ГГц, 180 млн транзисторов, 128 мм²) . Для использования в мобильных устройствах, встраиваемых системах и высокопроизводительных вычислительных комплексах; • Эльбрус-2С+ (1891ВМ7Я, техпроцесс 90 нм, 2 ядра + 4 DSP, 500 МГц , 368 млн транзисторов, 289 мм²) . Для использования в системах цифров ой обработки сигнала (радаров, анализаторов изображений и т.п.). МЦСТ проводит опытно -конструкторскую работу по разработке восьмиядерного гетерогенного микропроцессора с пиковой производи тельностью более 150 Gflops на базе высокопроизводительных 64 -разрядных процессорных ядер. Целью данной работы является создание многоядерного процессора серверного класса Эльбрус -8С с архитектурой «Эльбрус», предназначенного для решения вычислительно -интенсивных задач и для создания многопроцессорных и многомашинных систем терафлопного класса производительности. Решение многих задач возлагаемых на микропроцессорные системы не требует высокой производительности, большой разрядности шин, широкого набора ком анд. Например, сетевые тестеры, цифровые мультиметры, устройства управления бытовыми приборами . Поэтому многие производители сетевого, коммутационного и другого оборудования развивают собственные линейки МП и МК, например, компании Alpha, Atmel, Cyrix, MicroChip, MicroUnity, Motorola, Nvidia, Philips, Texas Instruments и другие. Их отлича ют не только технологии производства, но и архитектуры, которые влияют на выбор разработчиков конкретной модели МП или МК для реализации своих проектов. 1.1.1 Основные понятия и определения Каждая область человеческой д еятельности оперирует с определе нным тезаурусом. Одни и те же термины в различных областях деятельности могут

70 Передача управления через шлюз прерывания или шлюз ловушки может сопровождаться изменением уровня привилегий. Процессор проверяет значение gDPL в дескрипторе шлюза при выполнении программных прерываний, вызываемых коман дами INT n, INT3, INTO. Переход к выполнению подпрограммы обслуживания в этих случаях п роизводится, если уровень приви легий текущей программы меньше или равен значению gDPL шлюза: CPL <= gDPL. Таким обра зом, величина gDPL ограничивает уровень привилегий пр ограмм, которые могут вызывать дан ную процедуру обслуживания. При выполнении других ви дов прерываний и исключений процессор игнорирует gDPL шлюза. Уровень привилегий сегмента команд, в котором раз мещается подпрограмма обслуживания, должен быть меньше или р авен уровню привилегий текущей программы: DPL <= CPL. Нарушение этого правила приводит к исключению типа #GP. Поэтому рекомендуется подпрограммы обслуживания прерываний и исключений располагать в сегментах с уровнем при вилегий DPL = 0, чтобы избежать ситуа ции, когда при поступлении запроса прерывания или исключения уровень текущей программы CPL окажется меньше, чем DPL сегмента команд обработчика прерывания. При возникновении прерывания процессор сохраняет в стеке:  содержимое регистра SS прерванной процедур ы, если имеет ме сто изменение уровня привилегий;  содержимое регистра ESP прерванной процедуры , если имеет место изменение уровня привилегий;  содержимое регистра EFLAGS;  содержимое регистра CS;  содержимое регистра EIP;  код ошибки, если он формируется для данного исключения.

Обрабатываемые данн ые – операнды могут располагаться в регистрах или памяти (ОЗУ, ПЗУ или кэш -памяти). Выборка операнда – байта, слова или двойного слова произ водится в соответствии с заданным в команде номером (именем) регистра или адресом соответствующей ячейки памяти. При размещении в памяти команд и данных испо льзуются два варианта расположения байтов в словах:  начиная с младшего байта («Little-Endian»);  начиная со старшего байта («Big-Endian»). При использования размещения «Little -Endian» младший байт располагается в ячейке памяти с меньшим адресом.

К подобным программным средствам относятся STK (Systems Tool Kit), GMAT ( General Mission Analysis Tool), ORSA, FreeFlyer и др.Первоначально созданный для решения проблем, связанных с использованием искусственных спутников Земли, комплекс STK используется в космонавтике, баллистике, навигации и в силовых ведомствах. Компания AGI (производитель STK ) сотрудничает с такими организациями, как NASA, ESA, Боинг, JAXA, Lockheed Martin, Northrop Grumman и EADS.

106 эмуляторная головка, которая имеет вилку для включения в систему вместо эмулируемого микропроцессора или микроконтроллера. В головке размещается эмулирующий микропроцессор (микроконтроллер), который выполняет те же функции, что и эмулируемый, но работает под управлением компьютера. Большинство СЭ предназначено для работы с опре деленным семейством микропроцессоров (микроконтроллеров), причем для эмуляции каждой модели семейства используется соответствующая головка. В структуру СЭ входят следующие блоки:  эмулятор микропроцессора или микроконтроллера (размещается в эмуляторной головке);  память трассы, которая хранит значения сигналов, у станавливаемых на выводах микро процессора (микроконтроллера) в процессе выполнения программы;  блок контрольных прерываний, который реализует ос тановы в контрольных точках, заданных пользователем с клавиатуры компьютера;  эмуляционная память ( ОЗУ), которая заменяет в пр оцессе отладки внутреннее ПЗУ микроконтроллеров или другие разделы памяти, внешний доступ к которым в процессе отладки ограничен;  таймер, используемый для контроля времени выполнения отлаживаемых фрагментов программы. СЭ позволяет вводить в систему тестову ю или рабочую программу и контролировать ее выполнение, обеспечивая прерывания в контрольных точках. Условиями прерывания могут быть различные комбинации значений адреса, да нных и управляющих сигналов, по ступающих на выводы эмулирующего микропроцессора или микроконтроллера. Эти комби нации задаются пользователем с клавиатуры управляющего компьютера. После останова пользователь может получить на экране полную информацию о текущем состоянии любых регистров и ячеек памяти системы. С помощью памяти трассы можно просмотреть состо яния системной шины для определенного числа преды дущих циклов выполнения програм мы. Дисассемблер дает возможность анализировать выполнение программы в соответствии с ее исходным текстом на языке Ассемблера. Память трассы работает почти ана логично памяти ЛА, поэтому СЭ может выполнять также его функции. Число устанавливаемых контрольных точек обычно составляет несколь ко десятков, хотя некоторые модели современных СЭ обеспечивают существенно большие возможности. Объем памяти трассы в различных СЭ позволяет контролировать от 4К до 512К программных циклов. Таймер служит для определения времени выполнения фрагментов программы с учетом реальной тактовой частоты системы.

20 фоторезистивный материал был полностью удал ен. Это важно, поскольку фоторезистивный материал органическ ий, и если его не удалить, он может привести к появлению дефектов на подложке (рис.1.7). После травления и очистки можно приступать к осмотру подложки, что обычно и происходит на каждом важном этапе, или переводить подложку на новый цикл фотолитографии (рис. Удаление ослабленного фоторезистивного материала Готовые подложки тестируются на так называемых установках зондового контроля. Они работают со всей подложкой. На контакты каждого кристалла накладываются контакты зонда, что позволяет проводить электрические тесты. С помощью программного обеспечения тестируются все функции каждого ядра. Осмотр поверхности пластины С помощью разрезания из подложки можно получить отдельные ядра (рис. На данный момент установки зондового контроля уже выявили, какие кристаллы содержат ошибки, поэтому после разрезания их можно отделить от годных. Раньше поврежд енные кристаллы физически маркировались, теперь в этом нет необходимости, вся информация хранится в единой базе данных.

Мо дули параллельных ЦАП можно встретить лишь в МК «Mitsubishi» и «Hitachi».

